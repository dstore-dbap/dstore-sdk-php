<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/item/item.proto

namespace Dstore\Elastic\Item\Item;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.item.item.Item.Node</code>
 */
class Item_Node extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string description = 1;</code>
     */
    private $description = '';
    /**
     * <code>int32 tree_node_id = 2;</code>
     */
    private $tree_node_id = 0;
    /**
     * <code>bool active = 3;</code>
     */
    private $active = false;
    /**
     * <code>int32 level_id = 4;</code>
     */
    private $level_id = 0;
    /**
     * <code>int32 sort_no = 5;</code>
     */
    private $sort_no = 0;
    /**
     * <code>repeated int32 predecessor_tree_node_id = 6;</code>
     */
    private $predecessor_tree_node_id;
    /**
     * <code>map&lt;string, .dstore.elastic.Field&gt; fields = 20;</code>
     */
    private $fields;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Item\Item::initOnce();
        parent::__construct();
    }

    /**
     * <code>string description = 1;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <code>string description = 1;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

    /**
     * <code>int32 tree_node_id = 2;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <code>int32 tree_node_id = 2;</code>
     */
    public function setTreeNodeId($var)
    {
        GPBUtil::checkInt32($var);
        $this->tree_node_id = $var;
    }

    /**
     * <code>bool active = 3;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <code>bool active = 3;</code>
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;
    }

    /**
     * <code>int32 level_id = 4;</code>
     */
    public function getLevelId()
    {
        return $this->level_id;
    }

    /**
     * <code>int32 level_id = 4;</code>
     */
    public function setLevelId($var)
    {
        GPBUtil::checkInt32($var);
        $this->level_id = $var;
    }

    /**
     * <code>int32 sort_no = 5;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <code>int32 sort_no = 5;</code>
     */
    public function setSortNo($var)
    {
        GPBUtil::checkInt32($var);
        $this->sort_no = $var;
    }

    /**
     * <code>repeated int32 predecessor_tree_node_id = 6;</code>
     */
    public function getPredecessorTreeNodeId()
    {
        return $this->predecessor_tree_node_id;
    }

    /**
     * <code>repeated int32 predecessor_tree_node_id = 6;</code>
     */
    public function setPredecessorTreeNodeId(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->predecessor_tree_node_id = $var;
    }

    /**
     * <code>map&lt;string, .dstore.elastic.Field&gt; fields = 20;</code>
     */
    public function getFields()
    {
        return $this->fields;
    }

    /**
     * <code>map&lt;string, .dstore.elastic.Field&gt; fields = 20;</code>
     */
    public function setFields(&$var)
    {
        $this->fields = $var;
    }

}

