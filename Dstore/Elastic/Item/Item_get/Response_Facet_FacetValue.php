<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/item/item_get.proto

namespace Dstore\Elastic\Item\Item_get;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.item.item_get.Response.Facet.FacetValue</code>
 */
class Response_Facet_FacetValue extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.dstore.values.Value value = 1;</code>
     */
    private $value = null;
    /**
     * <code>int32 total_item_count = 2;</code>
     */
    private $total_item_count = 0;
    /**
     * <code>int32 matching_item_count = 3;</code>
     */
    private $matching_item_count = 0;
    /**
     * <pre>
     * Only filled when using a term-facet
     * </pre>
     *
     * <code>bool active = 4;</code>
     */
    private $active = false;
    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double min_value = 5;</code>
     */
    private $min_value = 0.0;
    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double max_value = 6;</code>
     */
    private $max_value = 0.0;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Item\ItemGet::initOnce();
        parent::__construct();
    }

    /**
     * <code>.dstore.values.Value value = 1;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <code>.dstore.values.Value value = 1;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\Value::class);
        $this->value = $var;
    }

    /**
     * <code>int32 total_item_count = 2;</code>
     */
    public function getTotalItemCount()
    {
        return $this->total_item_count;
    }

    /**
     * <code>int32 total_item_count = 2;</code>
     */
    public function setTotalItemCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->total_item_count = $var;
    }

    /**
     * <code>int32 matching_item_count = 3;</code>
     */
    public function getMatchingItemCount()
    {
        return $this->matching_item_count;
    }

    /**
     * <code>int32 matching_item_count = 3;</code>
     */
    public function setMatchingItemCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->matching_item_count = $var;
    }

    /**
     * <pre>
     * Only filled when using a term-facet
     * </pre>
     *
     * <code>bool active = 4;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Only filled when using a term-facet
     * </pre>
     *
     * <code>bool active = 4;</code>
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;
    }

    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double min_value = 5;</code>
     */
    public function getMinValue()
    {
        return $this->min_value;
    }

    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double min_value = 5;</code>
     */
    public function setMinValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->min_value = $var;
    }

    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double max_value = 6;</code>
     */
    public function getMaxValue()
    {
        return $this->max_value;
    }

    /**
     * <pre>
     * Only filled when using a range-facet
     * </pre>
     *
     * <code>double max_value = 6;</code>
     */
    public function setMaxValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->max_value = $var;
    }

}

