<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/item/item_get.proto

namespace Dstore\Elastic\Item\Item_get;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.item.item_get.Request.Facet</code>
 */
class Request_Facet extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string field_name = 1;</code>
     */
    private $field_name = '';
    protected $sort_by;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Item\ItemGet::initOnce();
        parent::__construct();
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function getFieldName()
    {
        return $this->field_name;
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function setFieldName($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_name = $var;
    }

    /**
     * <code>.dstore.elastic.item.item_get.Request.Facet.SortNoSort sort_no_sort = 2;</code>
     */
    public function getSortNoSort()
    {
        return $this->readOneof(2);
    }

    /**
     * <code>.dstore.elastic.item.item_get.Request.Facet.SortNoSort sort_no_sort = 2;</code>
     */
    public function setSortNoSort(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Elastic\Item\Item_get\Request_Facet_SortNoSort::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <code>.dstore.elastic.item.item_get.Request.Facet.FieldSort field_sort = 3;</code>
     */
    public function getFieldSort()
    {
        return $this->readOneof(3);
    }

    /**
     * <code>.dstore.elastic.item.item_get.Request.Facet.FieldSort field_sort = 3;</code>
     */
    public function setFieldSort(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Elastic\Item\Item_get\Request_Facet_FieldSort::class);
        $this->writeOneof(3, $var);
    }

    public function getSortBy()
    {
        return $this->sort_by;
    }

}

