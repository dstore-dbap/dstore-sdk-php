<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/item/item_suggest.proto

namespace Dstore\Elastic\Item\Item_suggest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.item.item_suggest.Request</code>
 */
class Request extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string input = 1;</code>
     */
    private $input = '';
    /**
     * <code>repeated string field_name = 2;</code>
     */
    private $field_name;
    /**
     * <pre>
     * Used to filter the suggestions
     * </pre>
     *
     * <code>.dstore.elastic.BoolQuery base_query = 3;</code>
     */
    private $base_query = null;
    /**
     * <code>int32 max_items = 5;</code>
     */
    private $max_items = 0;
    /**
     * <code>int32 max_suggests = 6;</code>
     */
    private $max_suggests = 0;
    /**
     * <code>bool fuzzy = 7;</code>
     */
    private $fuzzy = false;
    /**
     * <code>bool use_and_operator = 8;</code>
     */
    private $use_and_operator = false;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Item\ItemSuggest::initOnce();
        parent::__construct();
    }

    /**
     * <code>string input = 1;</code>
     */
    public function getInput()
    {
        return $this->input;
    }

    /**
     * <code>string input = 1;</code>
     */
    public function setInput($var)
    {
        GPBUtil::checkString($var, True);
        $this->input = $var;
    }

    /**
     * <code>repeated string field_name = 2;</code>
     */
    public function getFieldName()
    {
        return $this->field_name;
    }

    /**
     * <code>repeated string field_name = 2;</code>
     */
    public function setFieldName(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->field_name = $var;
    }

    /**
     * <pre>
     * Used to filter the suggestions
     * </pre>
     *
     * <code>.dstore.elastic.BoolQuery base_query = 3;</code>
     */
    public function getBaseQuery()
    {
        return $this->base_query;
    }

    /**
     * <pre>
     * Used to filter the suggestions
     * </pre>
     *
     * <code>.dstore.elastic.BoolQuery base_query = 3;</code>
     */
    public function setBaseQuery(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Elastic\BoolQuery::class);
        $this->base_query = $var;
    }

    /**
     * <code>int32 max_items = 5;</code>
     */
    public function getMaxItems()
    {
        return $this->max_items;
    }

    /**
     * <code>int32 max_items = 5;</code>
     */
    public function setMaxItems($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_items = $var;
    }

    /**
     * <code>int32 max_suggests = 6;</code>
     */
    public function getMaxSuggests()
    {
        return $this->max_suggests;
    }

    /**
     * <code>int32 max_suggests = 6;</code>
     */
    public function setMaxSuggests($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_suggests = $var;
    }

    /**
     * <code>bool fuzzy = 7;</code>
     */
    public function getFuzzy()
    {
        return $this->fuzzy;
    }

    /**
     * <code>bool fuzzy = 7;</code>
     */
    public function setFuzzy($var)
    {
        GPBUtil::checkBool($var);
        $this->fuzzy = $var;
    }

    /**
     * <code>bool use_and_operator = 8;</code>
     */
    public function getUseAndOperator()
    {
        return $this->use_and_operator;
    }

    /**
     * <code>bool use_and_operator = 8;</code>
     */
    public function setUseAndOperator($var)
    {
        GPBUtil::checkBool($var);
        $this->use_and_operator = $var;
    }

}

