<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elastic.proto

namespace Dstore\Elastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.Query.Range</code>
 */
class Query_Range extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string field_name = 1;</code>
     */
    private $field_name = '';
    /**
     * <code>string greater_than_or_eqal = 2;</code>
     */
    private $greater_than_or_eqal = '';
    /**
     * <code>string greater_than = 3;</code>
     */
    private $greater_than = '';
    /**
     * <code>string less_than_or_equal = 4;</code>
     */
    private $less_than_or_equal = '';
    /**
     * <code>string less_than = 5;</code>
     */
    private $less_than = '';

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Elastic::initOnce();
        parent::__construct();
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function getFieldName()
    {
        return $this->field_name;
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function setFieldName($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_name = $var;
    }

    /**
     * <code>string greater_than_or_eqal = 2;</code>
     */
    public function getGreaterThanOrEqal()
    {
        return $this->greater_than_or_eqal;
    }

    /**
     * <code>string greater_than_or_eqal = 2;</code>
     */
    public function setGreaterThanOrEqal($var)
    {
        GPBUtil::checkString($var, True);
        $this->greater_than_or_eqal = $var;
    }

    /**
     * <code>string greater_than = 3;</code>
     */
    public function getGreaterThan()
    {
        return $this->greater_than;
    }

    /**
     * <code>string greater_than = 3;</code>
     */
    public function setGreaterThan($var)
    {
        GPBUtil::checkString($var, True);
        $this->greater_than = $var;
    }

    /**
     * <code>string less_than_or_equal = 4;</code>
     */
    public function getLessThanOrEqual()
    {
        return $this->less_than_or_equal;
    }

    /**
     * <code>string less_than_or_equal = 4;</code>
     */
    public function setLessThanOrEqual($var)
    {
        GPBUtil::checkString($var, True);
        $this->less_than_or_equal = $var;
    }

    /**
     * <code>string less_than = 5;</code>
     */
    public function getLessThan()
    {
        return $this->less_than;
    }

    /**
     * <code>string less_than = 5;</code>
     */
    public function setLessThan($var)
    {
        GPBUtil::checkString($var, True);
        $this->less_than = $var;
    }

}

