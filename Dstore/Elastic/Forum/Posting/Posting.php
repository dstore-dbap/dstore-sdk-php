<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/forum/posting.proto

namespace Dstore\Elastic\Forum\Posting;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.forum.posting.Posting</code>
 */
class Posting extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 forum_id = 1;</code>
     */
    private $forum_id = 0;
    /**
     * <code>int32 posting_id = 2;</code>
     */
    private $posting_id = 0;
    /**
     * <code>int32 main_posting_id = 12;</code>
     */
    private $main_posting_id = 0;
    /**
     * <code>int32 reply_to_posting_id = 3;</code>
     */
    private $reply_to_posting_id = 0;
    /**
     * <code>int32 author_person_id = 4;</code>
     */
    private $author_person_id = 0;
    /**
     * <code>string author = 5;</code>
     */
    private $author = '';
    /**
     * <code>int32 visible = 6;</code>
     */
    private $visible = 0;
    /**
     * <code>bool has_binaries = 7;</code>
     */
    private $has_binaries = false;
    /**
     * <code>.dstore.values.TimestampValue post_date = 8;</code>
     */
    private $post_date = null;
    /**
     * <code>.dstore.values.TimestampValue last_updated = 9;</code>
     */
    private $last_updated = null;
    /**
     * <code>string subject = 10;</code>
     */
    private $subject = '';
    /**
     * <code>string body = 11;</code>
     */
    private $body = '';
    /**
     * <code>map&lt;int32, .dstore.elastic.Field&gt; properties = 20;</code>
     */
    private $properties;
    /**
     * <code>double score = 30;</code>
     */
    private $score = 0.0;
    /**
     * <code>string index_name = 31;</code>
     */
    private $index_name = '';
    /**
     * <code>string document_id = 32;</code>
     */
    private $document_id = '';

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Forum\Posting::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 forum_id = 1;</code>
     */
    public function getForumId()
    {
        return $this->forum_id;
    }

    /**
     * <code>int32 forum_id = 1;</code>
     */
    public function setForumId($var)
    {
        GPBUtil::checkInt32($var);
        $this->forum_id = $var;
    }

    /**
     * <code>int32 posting_id = 2;</code>
     */
    public function getPostingId()
    {
        return $this->posting_id;
    }

    /**
     * <code>int32 posting_id = 2;</code>
     */
    public function setPostingId($var)
    {
        GPBUtil::checkInt32($var);
        $this->posting_id = $var;
    }

    /**
     * <code>int32 main_posting_id = 12;</code>
     */
    public function getMainPostingId()
    {
        return $this->main_posting_id;
    }

    /**
     * <code>int32 main_posting_id = 12;</code>
     */
    public function setMainPostingId($var)
    {
        GPBUtil::checkInt32($var);
        $this->main_posting_id = $var;
    }

    /**
     * <code>int32 reply_to_posting_id = 3;</code>
     */
    public function getReplyToPostingId()
    {
        return $this->reply_to_posting_id;
    }

    /**
     * <code>int32 reply_to_posting_id = 3;</code>
     */
    public function setReplyToPostingId($var)
    {
        GPBUtil::checkInt32($var);
        $this->reply_to_posting_id = $var;
    }

    /**
     * <code>int32 author_person_id = 4;</code>
     */
    public function getAuthorPersonId()
    {
        return $this->author_person_id;
    }

    /**
     * <code>int32 author_person_id = 4;</code>
     */
    public function setAuthorPersonId($var)
    {
        GPBUtil::checkInt32($var);
        $this->author_person_id = $var;
    }

    /**
     * <code>string author = 5;</code>
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * <code>string author = 5;</code>
     */
    public function setAuthor($var)
    {
        GPBUtil::checkString($var, True);
        $this->author = $var;
    }

    /**
     * <code>int32 visible = 6;</code>
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * <code>int32 visible = 6;</code>
     */
    public function setVisible($var)
    {
        GPBUtil::checkInt32($var);
        $this->visible = $var;
    }

    /**
     * <code>bool has_binaries = 7;</code>
     */
    public function getHasBinaries()
    {
        return $this->has_binaries;
    }

    /**
     * <code>bool has_binaries = 7;</code>
     */
    public function setHasBinaries($var)
    {
        GPBUtil::checkBool($var);
        $this->has_binaries = $var;
    }

    /**
     * <code>.dstore.values.TimestampValue post_date = 8;</code>
     */
    public function getPostDate()
    {
        return $this->post_date;
    }

    /**
     * <code>.dstore.values.TimestampValue post_date = 8;</code>
     */
    public function setPostDate(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->post_date = $var;
    }

    /**
     * <code>.dstore.values.TimestampValue last_updated = 9;</code>
     */
    public function getLastUpdated()
    {
        return $this->last_updated;
    }

    /**
     * <code>.dstore.values.TimestampValue last_updated = 9;</code>
     */
    public function setLastUpdated(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_updated = $var;
    }

    /**
     * <code>string subject = 10;</code>
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * <code>string subject = 10;</code>
     */
    public function setSubject($var)
    {
        GPBUtil::checkString($var, True);
        $this->subject = $var;
    }

    /**
     * <code>string body = 11;</code>
     */
    public function getBody()
    {
        return $this->body;
    }

    /**
     * <code>string body = 11;</code>
     */
    public function setBody($var)
    {
        GPBUtil::checkString($var, True);
        $this->body = $var;
    }

    /**
     * <code>map&lt;int32, .dstore.elastic.Field&gt; properties = 20;</code>
     */
    public function getProperties()
    {
        return $this->properties;
    }

    /**
     * <code>map&lt;int32, .dstore.elastic.Field&gt; properties = 20;</code>
     */
    public function setProperties(&$var)
    {
        $this->properties = $var;
    }

    /**
     * <code>double score = 30;</code>
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * <code>double score = 30;</code>
     */
    public function setScore($var)
    {
        GPBUtil::checkDouble($var);
        $this->score = $var;
    }

    /**
     * <code>string index_name = 31;</code>
     */
    public function getIndexName()
    {
        return $this->index_name;
    }

    /**
     * <code>string index_name = 31;</code>
     */
    public function setIndexName($var)
    {
        GPBUtil::checkString($var, True);
        $this->index_name = $var;
    }

    /**
     * <code>string document_id = 32;</code>
     */
    public function getDocumentId()
    {
        return $this->document_id;
    }

    /**
     * <code>string document_id = 32;</code>
     */
    public function setDocumentId($var)
    {
        GPBUtil::checkString($var, True);
        $this->document_id = $var;
    }

}

