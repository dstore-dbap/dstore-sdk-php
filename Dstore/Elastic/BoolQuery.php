<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elastic.proto

namespace Dstore\Elastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.BoolQuery</code>
 */
class BoolQuery extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    private $filter;
    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    private $must;
    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    private $should;
    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    private $must_not;
    /**
     * <code>string minimum_should_match = 5;</code>
     */
    private $minimum_should_match = '';
    /**
     * <code>double boost = 6;</code>
     */
    private $boost = 0.0;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Elastic::initOnce();
        parent::__construct();
    }

    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * <code>repeated .dstore.elastic.Query filter = 1;</code>
     */
    public function setFilter(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Dstore\Elastic\Query::class);
        $this->filter = $var;
    }

    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public function getMust()
    {
        return $this->must;
    }

    /**
     * <code>repeated .dstore.elastic.Query must = 2;</code>
     */
    public function setMust(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Dstore\Elastic\Query::class);
        $this->must = $var;
    }

    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public function getShould()
    {
        return $this->should;
    }

    /**
     * <code>repeated .dstore.elastic.Query should = 3;</code>
     */
    public function setShould(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Dstore\Elastic\Query::class);
        $this->should = $var;
    }

    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public function getMustNot()
    {
        return $this->must_not;
    }

    /**
     * <code>repeated .dstore.elastic.Query must_not = 4;</code>
     */
    public function setMustNot(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Dstore\Elastic\Query::class);
        $this->must_not = $var;
    }

    /**
     * <code>string minimum_should_match = 5;</code>
     */
    public function getMinimumShouldMatch()
    {
        return $this->minimum_should_match;
    }

    /**
     * <code>string minimum_should_match = 5;</code>
     */
    public function setMinimumShouldMatch($var)
    {
        GPBUtil::checkString($var, True);
        $this->minimum_should_match = $var;
    }

    /**
     * <code>double boost = 6;</code>
     */
    public function getBoost()
    {
        return $this->boost;
    }

    /**
     * <code>double boost = 6;</code>
     */
    public function setBoost($var)
    {
        GPBUtil::checkDouble($var);
        $this->boost = $var;
    }

}

