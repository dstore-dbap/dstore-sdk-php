<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elastic.proto

namespace Dstore\Elastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.Field</code>
 */
class Field extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <code>bool multi_field = 2;</code>
     */
    private $multi_field = false;
    /**
     * <code>repeated .dstore.values.Value value = 3;</code>
     */
    private $value;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Elastic::initOnce();
        parent::__construct();
    }

    /**
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <code>bool multi_field = 2;</code>
     */
    public function getMultiField()
    {
        return $this->multi_field;
    }

    /**
     * <code>bool multi_field = 2;</code>
     */
    public function setMultiField($var)
    {
        GPBUtil::checkBool($var);
        $this->multi_field = $var;
    }

    /**
     * <code>repeated .dstore.values.Value value = 3;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <code>repeated .dstore.values.Value value = 3;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Dstore\Values\Value::class);
        $this->value = $var;
    }

}

