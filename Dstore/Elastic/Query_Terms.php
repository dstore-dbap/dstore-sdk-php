<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elastic.proto

namespace Dstore\Elastic;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.elastic.Query.Terms</code>
 */
class Query_Terms extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>string field_name = 1;</code>
     */
    private $field_name = '';
    /**
     * <code>repeated string value = 2;</code>
     */
    private $value;
    /**
     * <pre>
     * means: use the ".raw" (not analyzed) field
     * </pre>
     *
     * <code>bool allow_partial_matches = 3;</code>
     */
    private $allow_partial_matches = false;

    public function __construct() {
        \GPBMetadata\Dstore\Elastic\Elastic::initOnce();
        parent::__construct();
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function getFieldName()
    {
        return $this->field_name;
    }

    /**
     * <code>string field_name = 1;</code>
     */
    public function setFieldName($var)
    {
        GPBUtil::checkString($var, True);
        $this->field_name = $var;
    }

    /**
     * <code>repeated string value = 2;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <code>repeated string value = 2;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->value = $var;
    }

    /**
     * <pre>
     * means: use the ".raw" (not analyzed) field
     * </pre>
     *
     * <code>bool allow_partial_matches = 3;</code>
     */
    public function getAllowPartialMatches()
    {
        return $this->allow_partial_matches;
    }

    /**
     * <pre>
     * means: use the ".raw" (not analyzed) field
     * </pre>
     *
     * <code>bool allow_partial_matches = 3;</code>
     */
    public function setAllowPartialMatches($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_partial_matches = $var;
    }

}

