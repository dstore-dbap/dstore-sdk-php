<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/ac_GetCommands_Ad.proto

namespace Dstore\Engine\Ac_GetCommands_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.ac_GetCommands_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Aufruf (Kommando) des Programms, mit dem eine Action" abgearbeitet werden kann (z.B. "/usr/bin/mail")
     * </pre>
     *
     * <code>.dstore.values.StringValue command = 10001;</code>
     */
    private $command = null;
    /**
     * <pre>
     * Beschreibung des Kommandos "CommandID" (z.B. "Mailprogramm")
     * </pre>
     *
     * <code>.dstore.values.StringValue command_description = 10002;</code>
     */
    private $command_description = null;
    /**
     * <pre>
     * ID eines Kommandos (bzw. Programms), mit dem "Actions" abgearbeitet werden können
     * </pre>
     *
     * <code>.dstore.values.IntegerValue command_id = 10003;</code>
     */
    private $command_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\AcGetCommandsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Aufruf (Kommando) des Programms, mit dem eine Action" abgearbeitet werden kann (z.B. "/usr/bin/mail")
     * </pre>
     *
     * <code>.dstore.values.StringValue command = 10001;</code>
     */
    public function getCommand()
    {
        return $this->command;
    }

    /**
     * <pre>
     * Aufruf (Kommando) des Programms, mit dem eine Action" abgearbeitet werden kann (z.B. "/usr/bin/mail")
     * </pre>
     *
     * <code>.dstore.values.StringValue command = 10001;</code>
     */
    public function setCommand(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->command = $var;
    }

    /**
     * <pre>
     * Beschreibung des Kommandos "CommandID" (z.B. "Mailprogramm")
     * </pre>
     *
     * <code>.dstore.values.StringValue command_description = 10002;</code>
     */
    public function getCommandDescription()
    {
        return $this->command_description;
    }

    /**
     * <pre>
     * Beschreibung des Kommandos "CommandID" (z.B. "Mailprogramm")
     * </pre>
     *
     * <code>.dstore.values.StringValue command_description = 10002;</code>
     */
    public function setCommandDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->command_description = $var;
    }

    /**
     * <pre>
     * ID eines Kommandos (bzw. Programms), mit dem "Actions" abgearbeitet werden können
     * </pre>
     *
     * <code>.dstore.values.IntegerValue command_id = 10003;</code>
     */
    public function getCommandId()
    {
        return $this->command_id;
    }

    /**
     * <pre>
     * ID eines Kommandos (bzw. Programms), mit dem "Actions" abgearbeitet werden können
     * </pre>
     *
     * <code>.dstore.values.IntegerValue command_id = 10003;</code>
     */
    public function setCommandId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->command_id = $var;
    }

}

