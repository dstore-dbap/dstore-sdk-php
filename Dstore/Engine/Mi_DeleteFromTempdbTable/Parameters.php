<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_DeleteFromTempdbTable.proto

namespace Dstore\Engine\Mi_DeleteFromTempdbTable;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_DeleteFromTempdbTable.Parameters</code>
 */
class Parameters extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>.dstore.values.StringValue table_name = 1;</code>
     */
    private $table_name = null;
    /**
     * <code>bool table_name_null = 1001;</code>
     */
    private $table_name_null = false;
    /**
     * <code>.dstore.values.IntegerValue spid = 2;</code>
     */
    private $spid = null;
    /**
     * <code>bool spid_null = 1002;</code>
     */
    private $spid_null = false;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiDeleteFromTempdbTable::initOnce();
        parent::__construct();
    }

    /**
     * <code>.dstore.values.StringValue table_name = 1;</code>
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * <code>.dstore.values.StringValue table_name = 1;</code>
     */
    public function setTableName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->table_name = $var;
    }

    /**
     * <code>bool table_name_null = 1001;</code>
     */
    public function getTableNameNull()
    {
        return $this->table_name_null;
    }

    /**
     * <code>bool table_name_null = 1001;</code>
     */
    public function setTableNameNull($var)
    {
        GPBUtil::checkBool($var);
        $this->table_name_null = $var;
    }

    /**
     * <code>.dstore.values.IntegerValue spid = 2;</code>
     */
    public function getSpid()
    {
        return $this->spid;
    }

    /**
     * <code>.dstore.values.IntegerValue spid = 2;</code>
     */
    public function setSpid(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->spid = $var;
    }

    /**
     * <code>bool spid_null = 1002;</code>
     */
    public function getSpidNull()
    {
        return $this->spid_null;
    }

    /**
     * <code>bool spid_null = 1002;</code>
     */
    public function setSpidNull($var)
    {
        GPBUtil::checkBool($var);
        $this->spid_null = $var;
    }

}

