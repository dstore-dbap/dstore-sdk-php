<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_SynchronizeItemBinaries_Ad.proto

namespace Dstore\Engine\Im_SynchronizeItemBinaries_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_SynchronizeItemBinaries_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue time_intervall_id = 10001;</code>
     */
    private $time_intervall_id = null;
    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue date_intervall_id = 10002;</code>
     */
    private $date_intervall_id = null;
    /**
     * <pre>
     * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10003;</code>
     */
    private $binary_code_id = null;
    /**
     * <pre>
     * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10004;</code>
     */
    private $value = null;
    /**
     * <pre>
     * ID eines Arikel-Elementes, das synchronisiert werden muß
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10005;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    private $sort_no = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImSynchronizeItemBinariesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue time_intervall_id = 10001;</code>
     */
    public function getTimeIntervallId()
    {
        return $this->time_intervall_id;
    }

    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID". Im Unterschied zu "DateIntervallID" jedoch nur eine Uhrzeit-Angabe; der Grund hierfür ist, daß es keinen expliziten Datentyp "Time" im ASE gibt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue time_intervall_id = 10001;</code>
     */
    public function setTimeIntervallId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->time_intervall_id = $var;
    }

    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue date_intervall_id = 10002;</code>
     */
    public function getDateIntervallId()
    {
        return $this->date_intervall_id;
    }

    /**
     * <pre>
     * ID eines Gültigkeitszeitraums der "BinaryCodeID" für das Element "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue date_intervall_id = 10002;</code>
     */
    public function setDateIntervallId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->date_intervall_id = $var;
    }

    /**
     * <pre>
     * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10003;</code>
     */
    public function getBinaryCodeId()
    {
        return $this->binary_code_id;
    }

    /**
     * <pre>
     * ID eines Binärobjektes, das dem Element "NodeID" noch nicht (oder mit anderer "DateIntervallID"/"TimeIntervallID"/"SortNo") zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10003;</code>
     */
    public function setBinaryCodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_code_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10004;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * Eigenschaft der "NodeID" zum Merkmal "&#64;CharacIDForSynchronization"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10004;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value = $var;
    }

    /**
     * <pre>
     * ID eines Arikel-Elementes, das synchronisiert werden muß
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10005;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines Arikel-Elementes, das synchronisiert werden muß
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10005;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryCodeID" innerhalb ALLER Binärobjekte, die "NodeID" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

}

