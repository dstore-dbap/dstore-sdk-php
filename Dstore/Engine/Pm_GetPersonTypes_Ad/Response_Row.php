<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonTypes_Ad.proto

namespace Dstore\Engine\Pm_GetPersonTypes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonTypes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Gibt an, ob der Benutzer "&#64;UserID" Zugriff auf den Personen-Typ "PersonTypeID" hat ("0") oder nicht ("1"). Im Fall "&#64;AllPersonTypesWithLocked = 0" wird hier immer der Wert "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue locked = 10001;</code>
     */
    private $locked = null;
    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 10002;</code>
     */
    private $person_type_description = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge von "PersonTypeID" innerhalb aller Personentypen (wird derzeit aber nirgends verwendet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10003;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * ID eines Personen-Typs
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10004;</code>
     */
    private $person_type_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonTypesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Gibt an, ob der Benutzer "&#64;UserID" Zugriff auf den Personen-Typ "PersonTypeID" hat ("0") oder nicht ("1"). Im Fall "&#64;AllPersonTypesWithLocked = 0" wird hier immer der Wert "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue locked = 10001;</code>
     */
    public function getLocked()
    {
        return $this->locked;
    }

    /**
     * <pre>
     * Gibt an, ob der Benutzer "&#64;UserID" Zugriff auf den Personen-Typ "PersonTypeID" hat ("0") oder nicht ("1"). Im Fall "&#64;AllPersonTypesWithLocked = 0" wird hier immer der Wert "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue locked = 10001;</code>
     */
    public function setLocked(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->locked = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 10002;</code>
     */
    public function getPersonTypeDescription()
    {
        return $this->person_type_description;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 10002;</code>
     */
    public function setPersonTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->person_type_description = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge von "PersonTypeID" innerhalb aller Personentypen (wird derzeit aber nirgends verwendet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10003;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge von "PersonTypeID" innerhalb aller Personentypen (wird derzeit aber nirgends verwendet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10003;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * ID eines Personen-Typs
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10004;</code>
     */
    public function getPersonTypeId()
    {
        return $this->person_type_id;
    }

    /**
     * <pre>
     * ID eines Personen-Typs
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10004;</code>
     */
    public function setPersonTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_type_id = $var;
    }

}

