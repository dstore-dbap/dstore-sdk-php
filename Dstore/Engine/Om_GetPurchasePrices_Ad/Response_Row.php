<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetPurchasePrices_Ad.proto

namespace Dstore\Engine\Om_GetPurchasePrices_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetPurchasePrices_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    private $suppl_charac_val2_restr_by_pattern = null;
    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10002;</code>
     */
    private $item_property = null;
    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10003;</code>
     */
    private $supplier_characteristic_value2 = null;
    /**
     * <pre>
     * Gesamt-Netto-Preis  (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel in der Menge "Quantity" beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10004;</code>
     */
    private $total_net_price = null;
    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10005;</code>
     */
    private $quantity = null;
    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10006;</code>
     */
    private $supplier_characteristic_value1 = null;
    /**
     * <pre>
     * ID der Währung, in der "UnitNetPrice" und "TotalNetPrice" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10007;</code>
     */
    private $currency_id = null;
    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10008;</code>
     */
    private $currency_symbol = null;
    /**
     * <pre>
     * ID eines Lieferanten (also eine "PersonID"), bei dem der Artikel bestellt werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10009;</code>
     */
    private $supplier_id = null;
    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10010;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * Netto-Preis (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel EINMAL beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10011;</code>
     */
    private $unit_net_price = null;
    /**
     * <pre>
     * ID des aktuell zu "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10012;</code>
     */
    private $h_tree_node_id = null;
    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10013;</code>
     */
    private $item_no = null;
    /**
     * <pre>
     * ID eines Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID eines zur "NodeID" gehörenden Elementes im Artikel-Baum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10016;</code>
     */
    private $suppl_charac_val1_restr_by_pattern = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetPurchasePricesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    public function getSupplCharacVal2RestrByPattern()
    {
        return $this->suppl_charac_val2_restr_by_pattern;
    }

    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    public function setSupplCharacVal2RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->suppl_charac_val2_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10002;</code>
     */
    public function getItemProperty()
    {
        return $this->item_property;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10002;</code>
     */
    public function setItemProperty(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->item_property = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10003;</code>
     */
    public function getSupplierCharacteristicValue2()
    {
        return $this->supplier_characteristic_value2;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10003;</code>
     */
    public function setSupplierCharacteristicValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->supplier_characteristic_value2 = $var;
    }

    /**
     * <pre>
     * Gesamt-Netto-Preis  (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel in der Menge "Quantity" beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10004;</code>
     */
    public function getTotalNetPrice()
    {
        return $this->total_net_price;
    }

    /**
     * <pre>
     * Gesamt-Netto-Preis  (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel in der Menge "Quantity" beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10004;</code>
     */
    public function setTotalNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_net_price = $var;
    }

    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10005;</code>
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10005;</code>
     */
    public function setQuantity(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quantity = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10006;</code>
     */
    public function getSupplierCharacteristicValue1()
    {
        return $this->supplier_characteristic_value1;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10006;</code>
     */
    public function setSupplierCharacteristicValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->supplier_characteristic_value1 = $var;
    }

    /**
     * <pre>
     * ID der Währung, in der "UnitNetPrice" und "TotalNetPrice" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10007;</code>
     */
    public function getCurrencyId()
    {
        return $this->currency_id;
    }

    /**
     * <pre>
     * ID der Währung, in der "UnitNetPrice" und "TotalNetPrice" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10007;</code>
     */
    public function setCurrencyId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->currency_id = $var;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10008;</code>
     */
    public function getCurrencySymbol()
    {
        return $this->currency_symbol;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10008;</code>
     */
    public function setCurrencySymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->currency_symbol = $var;
    }

    /**
     * <pre>
     * ID eines Lieferanten (also eine "PersonID"), bei dem der Artikel bestellt werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10009;</code>
     */
    public function getSupplierId()
    {
        return $this->supplier_id;
    }

    /**
     * <pre>
     * ID eines Lieferanten (also eine "PersonID"), bei dem der Artikel bestellt werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10009;</code>
     */
    public function setSupplierId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->supplier_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10010;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10010;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * Netto-Preis (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel EINMAL beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10011;</code>
     */
    public function getUnitNetPrice()
    {
        return $this->unit_net_price;
    }

    /**
     * <pre>
     * Netto-Preis (in der durch "CurrencyID" angegebenen Währung) für "NodeID", wenn man den Artikel EINMAL beim Lieferanten "SupplierID" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10011;</code>
     */
    public function setUnitNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->unit_net_price = $var;
    }

    /**
     * <pre>
     * ID des aktuell zu "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10012;</code>
     */
    public function getHTreeNodeId()
    {
        return $this->h_tree_node_id;
    }

    /**
     * <pre>
     * ID des aktuell zu "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10012;</code>
     */
    public function setHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->h_tree_node_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10013;</code>
     */
    public function getItemNo()
    {
        return $this->item_no;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10013;</code>
     */
    public function setItemNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->item_no = $var;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID eines zur "NodeID" gehörenden Elementes im Artikel-Baum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines zur "NodeID" gehörenden Elementes im Artikel-Baum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10016;</code>
     */
    public function getSupplCharacVal1RestrByPattern()
    {
        return $this->suppl_charac_val1_restr_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10016;</code>
     */
    public function setSupplCharacVal1RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->suppl_charac_val1_restr_by_pattern = $var;
    }

}

