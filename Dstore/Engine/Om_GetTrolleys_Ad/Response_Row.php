<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetTrolleys_Ad.proto

namespace Dstore\Engine\Om_GetTrolleys_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetTrolleys_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Die ID des Besuchers, dem der Warenkorb "gehört"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10001;</code>
     */
    private $visitor_id = null;
    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. (willkürlich gewählt) Merkmal des Personentyps von "PersonID", welches ein Pflichtmerkmal UND eindeutig ist. "NULL" wenn dieses Merkmal komplett lesend für den Aufrufer gesperrt ist (s. "pm_GetPChAccRestrForUsers_Ad").
     * </pre>
     *
     * <code>.dstore.values.StringValue identifying_value = 10002;</code>
     */
    private $identifying_value = null;
    /**
     * <pre>
     * Die ID der Person, der "VisitorID" (und damit der Warenkorb) zugeordnet ist. Gibt es keine Zuordnung zu einer Person, wird hier "NULL" zurückgegeben (kann nur im Fall "&#64;OnlyForIdentifiedPersons = 0" vorkommen).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Zeitpunkt, zu dem der Besucher "VisitorID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10004;</code>
     */
    private $input_date_and_time = null;
    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "VisitorID" in seinen Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10005;</code>
     */
    private $h_tree_node_id = null;
    /**
     * <pre>
     * Eigenschaft des zu "HTreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal mit der ID "6" (also die Artikelnummer). Existiert zum Artikel keine Eigenschaft oder ist "&#64;IncludeItemNo = 0", wird "NULL" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10006;</code>
     */
    private $item_no = null;
    /**
     * <pre>
     * Enthält entweder die (zum Zeitpunkt "InputDateAndTime") zur "HTreeNodeID" korrespondierende ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (die zu "HTreeNodeID" gehört) zugehör. aber willkürlich gewähl. Element (s. Beschr.).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10007;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Was enthält "IdentifyingValue" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "IdentifyingValue" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue ident_val_restr_by_pattern = 10008;</code>
     */
    private $ident_val_restr_by_pattern = null;
    /**
     * <pre>
     * Anzahl des Artikels ("TreeNodeID" bzw. "HTreeNodeID"), die der Besucher "VisitorID" in seinen "Warenkorb gelegt" hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10009;</code>
     */
    private $quantity = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetTrolleysAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Die ID des Besuchers, dem der Warenkorb "gehört"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10001;</code>
     */
    public function getVisitorId()
    {
        return $this->visitor_id;
    }

    /**
     * <pre>
     * Die ID des Besuchers, dem der Warenkorb "gehört"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10001;</code>
     */
    public function setVisitorId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->visitor_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. (willkürlich gewählt) Merkmal des Personentyps von "PersonID", welches ein Pflichtmerkmal UND eindeutig ist. "NULL" wenn dieses Merkmal komplett lesend für den Aufrufer gesperrt ist (s. "pm_GetPChAccRestrForUsers_Ad").
     * </pre>
     *
     * <code>.dstore.values.StringValue identifying_value = 10002;</code>
     */
    public function getIdentifyingValue()
    {
        return $this->identifying_value;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. (willkürlich gewählt) Merkmal des Personentyps von "PersonID", welches ein Pflichtmerkmal UND eindeutig ist. "NULL" wenn dieses Merkmal komplett lesend für den Aufrufer gesperrt ist (s. "pm_GetPChAccRestrForUsers_Ad").
     * </pre>
     *
     * <code>.dstore.values.StringValue identifying_value = 10002;</code>
     */
    public function setIdentifyingValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->identifying_value = $var;
    }

    /**
     * <pre>
     * Die ID der Person, der "VisitorID" (und damit der Warenkorb) zugeordnet ist. Gibt es keine Zuordnung zu einer Person, wird hier "NULL" zurückgegeben (kann nur im Fall "&#64;OnlyForIdentifiedPersons = 0" vorkommen).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * Die ID der Person, der "VisitorID" (und damit der Warenkorb) zugeordnet ist. Gibt es keine Zuordnung zu einer Person, wird hier "NULL" zurückgegeben (kann nur im Fall "&#64;OnlyForIdentifiedPersons = 0" vorkommen).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Zeitpunkt, zu dem der Besucher "VisitorID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10004;</code>
     */
    public function getInputDateAndTime()
    {
        return $this->input_date_and_time;
    }

    /**
     * <pre>
     * Zeitpunkt, zu dem der Besucher "VisitorID" das Element "HTreeNodeID" in den Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10004;</code>
     */
    public function setInputDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->input_date_and_time = $var;
    }

    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "VisitorID" in seinen Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10005;</code>
     */
    public function getHTreeNodeId()
    {
        return $this->h_tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das der Besucher "VisitorID" in seinen Warenkorb gelegt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10005;</code>
     */
    public function setHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->h_tree_node_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft des zu "HTreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal mit der ID "6" (also die Artikelnummer). Existiert zum Artikel keine Eigenschaft oder ist "&#64;IncludeItemNo = 0", wird "NULL" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10006;</code>
     */
    public function getItemNo()
    {
        return $this->item_no;
    }

    /**
     * <pre>
     * Eigenschaft des zu "HTreeNodeID" zugehörigen Artikel-Elementes ("NodeID") zum Merkmal mit der ID "6" (also die Artikelnummer). Existiert zum Artikel keine Eigenschaft oder ist "&#64;IncludeItemNo = 0", wird "NULL" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10006;</code>
     */
    public function setItemNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->item_no = $var;
    }

    /**
     * <pre>
     * Enthält entweder die (zum Zeitpunkt "InputDateAndTime") zur "HTreeNodeID" korrespondierende ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (die zu "HTreeNodeID" gehört) zugehör. aber willkürlich gewähl. Element (s. Beschr.).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10007;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * Enthält entweder die (zum Zeitpunkt "InputDateAndTime") zur "HTreeNodeID" korrespondierende ID eines Elementes im Artikelbaum oder (falls diese "0" ist) ein zur "NodeID" (die zu "HTreeNodeID" gehört) zugehör. aber willkürlich gewähl. Element (s. Beschr.).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10007;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Was enthält "IdentifyingValue" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "IdentifyingValue" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue ident_val_restr_by_pattern = 10008;</code>
     */
    public function getIdentValRestrByPattern()
    {
        return $this->ident_val_restr_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "IdentifyingValue" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "IdentifyingValue" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue ident_val_restr_by_pattern = 10008;</code>
     */
    public function setIdentValRestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->ident_val_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * Anzahl des Artikels ("TreeNodeID" bzw. "HTreeNodeID"), die der Besucher "VisitorID" in seinen "Warenkorb gelegt" hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10009;</code>
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * <pre>
     * Anzahl des Artikels ("TreeNodeID" bzw. "HTreeNodeID"), die der Besucher "VisitorID" in seinen "Warenkorb gelegt" hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10009;</code>
     */
    public function setQuantity(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quantity = $var;
    }

}

