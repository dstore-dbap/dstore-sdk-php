<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/co_GetBinaryCategories_Ad.proto

namespace Dstore\Engine\Co_GetBinaryCategories_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.co_GetBinaryCategories_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10001;</code>
     */
    private $community_binary_category = null;
    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10002;</code>
     */
    private $community_binary_category_id = null;
    /**
     * <pre>
     * ID der Community, in der die Kategorie "CommunityBinaryCategoryID" existiert
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_id = 10003;</code>
     */
    private $community_id = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge der Kategorie "CommunityBinaryCategoryID" innerhalb aller Kategorien der Community "CommunityID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10004;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * Zugriffsrechte für die Kategorie - enthält eine Summe von "AccessLevelID"s (siehe "co_GetBinaryCatAccessLevels")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10005;</code>
     */
    private $access_level = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\CoGetBinaryCategoriesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10001;</code>
     */
    public function getCommunityBinaryCategory()
    {
        return $this->community_binary_category;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10001;</code>
     */
    public function setCommunityBinaryCategory(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->community_binary_category = $var;
    }

    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10002;</code>
     */
    public function getCommunityBinaryCategoryId()
    {
        return $this->community_binary_category_id;
    }

    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10002;</code>
     */
    public function setCommunityBinaryCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->community_binary_category_id = $var;
    }

    /**
     * <pre>
     * ID der Community, in der die Kategorie "CommunityBinaryCategoryID" existiert
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_id = 10003;</code>
     */
    public function getCommunityId()
    {
        return $this->community_id;
    }

    /**
     * <pre>
     * ID der Community, in der die Kategorie "CommunityBinaryCategoryID" existiert
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_id = 10003;</code>
     */
    public function setCommunityId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->community_id = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der Kategorie "CommunityBinaryCategoryID" innerhalb aller Kategorien der Community "CommunityID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10004;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der Kategorie "CommunityBinaryCategoryID" innerhalb aller Kategorien der Community "CommunityID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10004;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * Zugriffsrechte für die Kategorie - enthält eine Summe von "AccessLevelID"s (siehe "co_GetBinaryCatAccessLevels")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10005;</code>
     */
    public function getAccessLevel()
    {
        return $this->access_level;
    }

    /**
     * <pre>
     * Zugriffsrechte für die Kategorie - enthält eine Summe von "AccessLevelID"s (siehe "co_GetBinaryCatAccessLevels")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10005;</code>
     */
    public function setAccessLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->access_level = $var;
    }

}

