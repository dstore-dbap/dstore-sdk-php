<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/st_GetDSS_Index_Frequency_Ad.proto

namespace Dstore\Engine\St_GetDSS_Index_Frequency_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.st_GetDSS_Index_Frequency_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Summe der "Bestellungen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 4" - es wird gezählt, wie OFT ein Produkt bestellt wurde) zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue orders = 10001;</code>
     */
    private $orders = null;
    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(Views * &#64;Weight_Views) + (BuyingInterests * &#64;Weight_BuyingInterest) + (Orders * &#64;Weight_Order)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue v_b_o_index = 10002;</code>
     */
    private $v_b_o_index = null;
    /**
     * <pre>
     * ID des Elementes auf das sich die Summen beziehen, also entweder die ID eines Artikel-Elementes oder die ID einer Eigenschaft (falls eine "&#64;GroupByNodeCharacteristicID" angegeben wurde oder Eigenschaften in "tempdb.dbo.OneID" übergeben wurden)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue frequency_of_id = 10003;</code>
     */
    private $frequency_of_id = null;
    /**
     * <pre>
     * Summe der "Views" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 1") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue views = 10004;</code>
     */
    private $views = null;
    /**
     * <pre>
     * Bezeichnung des Elementes "FrequencyOf_ID" - also entweder eine "NodeDescription" oder ein "Value"
     * </pre>
     *
     * <code>.dstore.values.StringValue frequency_of_description = 10005;</code>
     */
    private $frequency_of_description = null;
    /**
     * <pre>
     * Summe der "Kaufinteressen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 2") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue buying_interests = 10006;</code>
     */
    private $buying_interests = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\StGetDSSIndexFrequencyAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Summe der "Bestellungen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 4" - es wird gezählt, wie OFT ein Produkt bestellt wurde) zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue orders = 10001;</code>
     */
    public function getOrders()
    {
        return $this->orders;
    }

    /**
     * <pre>
     * Summe der "Bestellungen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 4" - es wird gezählt, wie OFT ein Produkt bestellt wurde) zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue orders = 10001;</code>
     */
    public function setOrders(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->orders = $var;
    }

    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(Views * &#64;Weight_Views) + (BuyingInterests * &#64;Weight_BuyingInterest) + (Orders * &#64;Weight_Order)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue v_b_o_index = 10002;</code>
     */
    public function getVBOIndex()
    {
        return $this->v_b_o_index;
    }

    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(Views * &#64;Weight_Views) + (BuyingInterests * &#64;Weight_BuyingInterest) + (Orders * &#64;Weight_Order)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue v_b_o_index = 10002;</code>
     */
    public function setVBOIndex(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->v_b_o_index = $var;
    }

    /**
     * <pre>
     * ID des Elementes auf das sich die Summen beziehen, also entweder die ID eines Artikel-Elementes oder die ID einer Eigenschaft (falls eine "&#64;GroupByNodeCharacteristicID" angegeben wurde oder Eigenschaften in "tempdb.dbo.OneID" übergeben wurden)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue frequency_of_id = 10003;</code>
     */
    public function getFrequencyOfId()
    {
        return $this->frequency_of_id;
    }

    /**
     * <pre>
     * ID des Elementes auf das sich die Summen beziehen, also entweder die ID eines Artikel-Elementes oder die ID einer Eigenschaft (falls eine "&#64;GroupByNodeCharacteristicID" angegeben wurde oder Eigenschaften in "tempdb.dbo.OneID" übergeben wurden)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue frequency_of_id = 10003;</code>
     */
    public function setFrequencyOfId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->frequency_of_id = $var;
    }

    /**
     * <pre>
     * Summe der "Views" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 1") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue views = 10004;</code>
     */
    public function getViews()
    {
        return $this->views;
    }

    /**
     * <pre>
     * Summe der "Views" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 1") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue views = 10004;</code>
     */
    public function setViews(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->views = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Elementes "FrequencyOf_ID" - also entweder eine "NodeDescription" oder ein "Value"
     * </pre>
     *
     * <code>.dstore.values.StringValue frequency_of_description = 10005;</code>
     */
    public function getFrequencyOfDescription()
    {
        return $this->frequency_of_description;
    }

    /**
     * <pre>
     * Bezeichnung des Elementes "FrequencyOf_ID" - also entweder eine "NodeDescription" oder ein "Value"
     * </pre>
     *
     * <code>.dstore.values.StringValue frequency_of_description = 10005;</code>
     */
    public function setFrequencyOfDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->frequency_of_description = $var;
    }

    /**
     * <pre>
     * Summe der "Kaufinteressen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 2") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue buying_interests = 10006;</code>
     */
    public function getBuyingInterests()
    {
        return $this->buying_interests;
    }

    /**
     * <pre>
     * Summe der "Kaufinteressen" (Werte zur Basis-Kenzahl mit "BasicCharacteristicNumber = 2") zum Element "FrequencyOf_ID" im Zeitraum "&#64;FromDate" bis "&#64;ToDate"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue buying_interests = 10006;</code>
     */
    public function setBuyingInterests(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->buying_interests = $var;
    }

}

