<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetPurchaseOrderQueues_Ad.proto

namespace Dstore\Engine\Om_GetPurchaseOrderQueues_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetPurchaseOrderQueues_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    private $suppl_charac_val2_restr_by_pattern = null;
    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" zuletzt bearbeitet hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue last_edited_by_user_id = 10002;</code>
     */
    private $last_edited_by_user_id = null;
    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10003;</code>
     */
    private $currency_symbol = null;
    /**
     * <pre>
     * Wann wurde die Position "NodeID" der Queue zuletzt bearbeitet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited_at_date_and_time = 10004;</code>
     */
    private $last_edited_at_date_and_time = null;
    /**
     * <pre>
     * ID eines Lierferanten, bei dem bestellt werden soll (also eine "PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10005;</code>
     */
    private $supplier_id = null;
    /**
     * <pre>
     * Gesamt-Netto-Preis (in der durch "CurrencyID" angegebenen Währung), wenn der Artikel "NodeID" beim Lieferanten "SupplierID" bis spätestens "OrderDeadline" in der Menge "Quantity" bestellt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue net_sum = 10006;</code>
     */
    private $net_sum = null;
    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10007;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * Zeitpunkt, an dem der Artikel "NodeID" spätestens beim Lieferanten "SupplierID" bestellt werden muß. Gibt also den Zeitpunkt an, wann aus der "Queue" spätestens ein Auftrag gemacht werden muß.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue order_deadline = 10008;</code>
     */
    private $order_deadline = null;
    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10009;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Elementes im Artikelbaum (, das "NodeID" als Artikel-Element zugewiesen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10010;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Name des Benutzers "CreatedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue created_by_user_name = 10011;</code>
     */
    private $created_by_user_name = null;
    /**
     * <pre>
     * Optionaler Kommentar, der zur Artikel-Position "NodeID" in der Queue hinterlegt wurde (z.B. so etwas wie "Telefonische Preis-Absprache mit Hr. X vom ...")
     * </pre>
     *
     * <code>.dstore.values.StringValue comment = 10012;</code>
     */
    private $comment = null;
    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10013;</code>
     */
    private $supplier_characteristic_value2 = null;
    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10014;</code>
     */
    private $item_property = null;
    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10015;</code>
     */
    private $supplier_characteristic_value1 = null;
    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10016;</code>
     */
    private $quantity = null;
    /**
     * <pre>
     * Name des Benutzers "LastEditedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_by_user_name = 10017;</code>
     */
    private $last_edited_by_user_name = null;
    /**
     * <pre>
     * ID der Währung, in der "NetSum" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10018;</code>
     */
    private $currency_id = null;
    /**
     * <pre>
     * Wann wurde die Position "NodeID" der "Queue" hinzugefügt
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10019;</code>
     */
    private $created_at_date_and_time = null;
    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" der Queue hinzufügt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10020;</code>
     */
    private $created_by_user_id = null;
    /**
     * <pre>
     * Bezeichnung des Auftrag-Typs "OrderTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue order_type_description = 10021;</code>
     */
    private $order_type_description = null;
    /**
     * <pre>
     * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den mit "NodeDescription" bezeichneten Artikel "NodeID" EINDEUTIG macht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10022;</code>
     */
    private $h_tree_node_id = null;
    /**
     * <pre>
     * ID eines Auftrag-Typs (z.B. "Vor-Order" oder Ähnliches). Dient dazu, die "Queues" bzw. die daraus resultierenden Aufträge zu "charakterisieren".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_type_id = 10023;</code>
     */
    private $order_type_id = null;
    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10024;</code>
     */
    private $item_no = null;
    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10025;</code>
     */
    private $suppl_charac_val1_restr_by_pattern = null;
    /**
     * <pre>
     * Wieviel VERSCHIEDENE Artikel ("NodeID"s) sind insgesamt in allen existierenden "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_items = 20001;</code>
     */
    private $number_of_items = null;
    /**
     * <pre>
     * Bei wievielen "Queues" wurde die "OrderDeadline" schon überschritten
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_expired_deadlines = 20002;</code>
     */
    private $number_of_expired_deadlines = null;
    /**
     * <pre>
     * Was ist die nächste (also kleinste in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue min_order_deadline = 20003;</code>
     */
    private $min_order_deadline = null;
    /**
     * <pre>
     * Wieviele "Queues" gibt es insgesamt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_queues = 20004;</code>
     */
    private $number_of_queues = null;
    /**
     * <pre>
     * Was ist die letzte (also größte in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_order_deadline = 20005;</code>
     */
    private $max_order_deadline = null;
    /**
     * <pre>
     * Bei wieviel VERSCHIEDENEN Lieferanten existieren "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_suppliers = 20006;</code>
     */
    private $number_of_suppliers = null;
    /**
     * <pre>
     * Gesamt-Netto-Summe (in der durch "CurrencyID" angegebenen Währung) aller Positionen aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_sum = 30002;</code>
     */
    private $total_net_sum = null;
    /**
     * <pre>
     * ID des Artikel-Merkmals, zu dem die Einkaufs-Preise (sprich "Einkaufspreis"-Eigenschaften von Artikel-Elementen) des Lieferanten hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 30006;</code>
     */
    private $purchase_price_characteristic_id = null;
    /**
     * <pre>
     * Gesamt-Menge aller Artikel aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue total_quantity = 30012;</code>
     */
    private $total_quantity = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetPurchaseOrderQueuesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    public function getSupplCharacVal2RestrByPattern()
    {
        return $this->suppl_charac_val2_restr_by_pattern;
    }

    /**
     * <pre>
     * Wie "SupplCharacVal1RestrByPattern" - nur eben auf "SupplierCharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val2_restr_by_pattern = 10001;</code>
     */
    public function setSupplCharacVal2RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->suppl_charac_val2_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" zuletzt bearbeitet hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue last_edited_by_user_id = 10002;</code>
     */
    public function getLastEditedByUserId()
    {
        return $this->last_edited_by_user_id;
    }

    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" zuletzt bearbeitet hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue last_edited_by_user_id = 10002;</code>
     */
    public function setLastEditedByUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->last_edited_by_user_id = $var;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10003;</code>
     */
    public function getCurrencySymbol()
    {
        return $this->currency_symbol;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "CurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue currency_symbol = 10003;</code>
     */
    public function setCurrencySymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->currency_symbol = $var;
    }

    /**
     * <pre>
     * Wann wurde die Position "NodeID" der Queue zuletzt bearbeitet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited_at_date_and_time = 10004;</code>
     */
    public function getLastEditedAtDateAndTime()
    {
        return $this->last_edited_at_date_and_time;
    }

    /**
     * <pre>
     * Wann wurde die Position "NodeID" der Queue zuletzt bearbeitet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited_at_date_and_time = 10004;</code>
     */
    public function setLastEditedAtDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_edited_at_date_and_time = $var;
    }

    /**
     * <pre>
     * ID eines Lierferanten, bei dem bestellt werden soll (also eine "PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10005;</code>
     */
    public function getSupplierId()
    {
        return $this->supplier_id;
    }

    /**
     * <pre>
     * ID eines Lierferanten, bei dem bestellt werden soll (also eine "PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue supplier_id = 10005;</code>
     */
    public function setSupplierId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->supplier_id = $var;
    }

    /**
     * <pre>
     * Gesamt-Netto-Preis (in der durch "CurrencyID" angegebenen Währung), wenn der Artikel "NodeID" beim Lieferanten "SupplierID" bis spätestens "OrderDeadline" in der Menge "Quantity" bestellt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue net_sum = 10006;</code>
     */
    public function getNetSum()
    {
        return $this->net_sum;
    }

    /**
     * <pre>
     * Gesamt-Netto-Preis (in der durch "CurrencyID" angegebenen Währung), wenn der Artikel "NodeID" beim Lieferanten "SupplierID" bis spätestens "OrderDeadline" in der Menge "Quantity" bestellt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue net_sum = 10006;</code>
     */
    public function setNetSum(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->net_sum = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10007;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10007;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * Zeitpunkt, an dem der Artikel "NodeID" spätestens beim Lieferanten "SupplierID" bestellt werden muß. Gibt also den Zeitpunkt an, wann aus der "Queue" spätestens ein Auftrag gemacht werden muß.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue order_deadline = 10008;</code>
     */
    public function getOrderDeadline()
    {
        return $this->order_deadline;
    }

    /**
     * <pre>
     * Zeitpunkt, an dem der Artikel "NodeID" spätestens beim Lieferanten "SupplierID" bestellt werden muß. Gibt also den Zeitpunkt an, wann aus der "Queue" spätestens ein Auftrag gemacht werden muß.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue order_deadline = 10008;</code>
     */
    public function setOrderDeadline(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->order_deadline = $var;
    }

    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10009;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10009;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Elementes im Artikelbaum (, das "NodeID" als Artikel-Element zugewiesen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10010;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID des zur "HTreeNodeID" zugehörigen Elementes im Artikelbaum (, das "NodeID" als Artikel-Element zugewiesen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10010;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Name des Benutzers "CreatedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue created_by_user_name = 10011;</code>
     */
    public function getCreatedByUserName()
    {
        return $this->created_by_user_name;
    }

    /**
     * <pre>
     * Name des Benutzers "CreatedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue created_by_user_name = 10011;</code>
     */
    public function setCreatedByUserName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->created_by_user_name = $var;
    }

    /**
     * <pre>
     * Optionaler Kommentar, der zur Artikel-Position "NodeID" in der Queue hinterlegt wurde (z.B. so etwas wie "Telefonische Preis-Absprache mit Hr. X vom ...")
     * </pre>
     *
     * <code>.dstore.values.StringValue comment = 10012;</code>
     */
    public function getComment()
    {
        return $this->comment;
    }

    /**
     * <pre>
     * Optionaler Kommentar, der zur Artikel-Position "NodeID" in der Queue hinterlegt wurde (z.B. so etwas wie "Telefonische Preis-Absprache mit Hr. X vom ...")
     * </pre>
     *
     * <code>.dstore.values.StringValue comment = 10012;</code>
     */
    public function setComment(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->comment = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10013;</code>
     */
    public function getSupplierCharacteristicValue2()
    {
        return $this->supplier_characteristic_value2;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 2. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value2 = 10013;</code>
     */
    public function setSupplierCharacteristicValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->supplier_characteristic_value2 = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10014;</code>
     */
    public function getItemProperty()
    {
        return $this->item_property;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal "&#64;NodeCharacteristicID" (wenn "NULL" für "&#64;NodeCharacteristicID" angegeben wurde, steht hier auch "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue item_property = 10014;</code>
     */
    public function setItemProperty(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->item_property = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10015;</code>
     */
    public function getSupplierCharacteristicValue1()
    {
        return $this->supplier_characteristic_value1;
    }

    /**
     * <pre>
     * Eigenschaft von "SupplierID" zum Merkmal mit der 1. ID, die in "PersonTypSettings" zu "PersonOutputCharacteristics" (zum entsprechenden Typ) konfiguriert und nicht für den Aufrufer komplett lesend gesperrt (s. "pm_GetPChAccRestrForUsers_Ad") ist
     * </pre>
     *
     * <code>.dstore.values.StringValue supplier_characteristic_value1 = 10015;</code>
     */
    public function setSupplierCharacteristicValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->supplier_characteristic_value1 = $var;
    }

    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10016;</code>
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * <pre>
     * Wieviel vom Artikel "NodeID" bestellt werden soll
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10016;</code>
     */
    public function setQuantity(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quantity = $var;
    }

    /**
     * <pre>
     * Name des Benutzers "LastEditedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_by_user_name = 10017;</code>
     */
    public function getLastEditedByUserName()
    {
        return $this->last_edited_by_user_name;
    }

    /**
     * <pre>
     * Name des Benutzers "LastEditedByUserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_by_user_name = 10017;</code>
     */
    public function setLastEditedByUserName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->last_edited_by_user_name = $var;
    }

    /**
     * <pre>
     * ID der Währung, in der "NetSum" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10018;</code>
     */
    public function getCurrencyId()
    {
        return $this->currency_id;
    }

    /**
     * <pre>
     * ID der Währung, in der "NetSum" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue currency_id = 10018;</code>
     */
    public function setCurrencyId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->currency_id = $var;
    }

    /**
     * <pre>
     * Wann wurde die Position "NodeID" der "Queue" hinzugefügt
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10019;</code>
     */
    public function getCreatedAtDateAndTime()
    {
        return $this->created_at_date_and_time;
    }

    /**
     * <pre>
     * Wann wurde die Position "NodeID" der "Queue" hinzugefügt
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10019;</code>
     */
    public function setCreatedAtDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->created_at_date_and_time = $var;
    }

    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" der Queue hinzufügt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10020;</code>
     */
    public function getCreatedByUserId()
    {
        return $this->created_by_user_id;
    }

    /**
     * <pre>
     * ID des dStore-Benutzers (der in "UserInfo" registriert ist), der die Position "NodeID" der Queue hinzufügt hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10020;</code>
     */
    public function setCreatedByUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->created_by_user_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Auftrag-Typs "OrderTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue order_type_description = 10021;</code>
     */
    public function getOrderTypeDescription()
    {
        return $this->order_type_description;
    }

    /**
     * <pre>
     * Bezeichnung des Auftrag-Typs "OrderTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue order_type_description = 10021;</code>
     */
    public function setOrderTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->order_type_description = $var;
    }

    /**
     * <pre>
     * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den mit "NodeDescription" bezeichneten Artikel "NodeID" EINDEUTIG macht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10022;</code>
     */
    public function getHTreeNodeId()
    {
        return $this->h_tree_node_id;
    }

    /**
     * <pre>
     * ID des Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das den mit "NodeDescription" bezeichneten Artikel "NodeID" EINDEUTIG macht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10022;</code>
     */
    public function setHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->h_tree_node_id = $var;
    }

    /**
     * <pre>
     * ID eines Auftrag-Typs (z.B. "Vor-Order" oder Ähnliches). Dient dazu, die "Queues" bzw. die daraus resultierenden Aufträge zu "charakterisieren".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_type_id = 10023;</code>
     */
    public function getOrderTypeId()
    {
        return $this->order_type_id;
    }

    /**
     * <pre>
     * ID eines Auftrag-Typs (z.B. "Vor-Order" oder Ähnliches). Dient dazu, die "Queues" bzw. die daraus resultierenden Aufträge zu "charakterisieren".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_type_id = 10023;</code>
     */
    public function setOrderTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->order_type_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10024;</code>
     */
    public function getItemNo()
    {
        return $this->item_no;
    }

    /**
     * <pre>
     * Eigenschaft des Artikel-Elementes "NodeID" zum Merkmal mit der ID "6" (also die Artikelnummer)
     * </pre>
     *
     * <code>.dstore.values.StringValue item_no = 10024;</code>
     */
    public function setItemNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->item_no = $var;
    }

    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10025;</code>
     */
    public function getSupplCharacVal1RestrByPattern()
    {
        return $this->suppl_charac_val1_restr_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "SupplCharacVal1RestrByPattern" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeich.- "#right(&lt;n&gt;)#" : die LETZTEN n Zeich.("n = 0" =&gt; "SupplCharacVal1RestrByPattern" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue suppl_charac_val1_restr_by_pattern = 10025;</code>
     */
    public function setSupplCharacVal1RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->suppl_charac_val1_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * Wieviel VERSCHIEDENE Artikel ("NodeID"s) sind insgesamt in allen existierenden "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_items = 20001;</code>
     */
    public function getNumberOfItems()
    {
        return $this->number_of_items;
    }

    /**
     * <pre>
     * Wieviel VERSCHIEDENE Artikel ("NodeID"s) sind insgesamt in allen existierenden "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_items = 20001;</code>
     */
    public function setNumberOfItems(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->number_of_items = $var;
    }

    /**
     * <pre>
     * Bei wievielen "Queues" wurde die "OrderDeadline" schon überschritten
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_expired_deadlines = 20002;</code>
     */
    public function getNumberOfExpiredDeadlines()
    {
        return $this->number_of_expired_deadlines;
    }

    /**
     * <pre>
     * Bei wievielen "Queues" wurde die "OrderDeadline" schon überschritten
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_expired_deadlines = 20002;</code>
     */
    public function setNumberOfExpiredDeadlines(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->number_of_expired_deadlines = $var;
    }

    /**
     * <pre>
     * Was ist die nächste (also kleinste in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue min_order_deadline = 20003;</code>
     */
    public function getMinOrderDeadline()
    {
        return $this->min_order_deadline;
    }

    /**
     * <pre>
     * Was ist die nächste (also kleinste in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue min_order_deadline = 20003;</code>
     */
    public function setMinOrderDeadline(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->min_order_deadline = $var;
    }

    /**
     * <pre>
     * Wieviele "Queues" gibt es insgesamt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_queues = 20004;</code>
     */
    public function getNumberOfQueues()
    {
        return $this->number_of_queues;
    }

    /**
     * <pre>
     * Wieviele "Queues" gibt es insgesamt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_queues = 20004;</code>
     */
    public function setNumberOfQueues(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->number_of_queues = $var;
    }

    /**
     * <pre>
     * Was ist die letzte (also größte in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_order_deadline = 20005;</code>
     */
    public function getMaxOrderDeadline()
    {
        return $this->max_order_deadline;
    }

    /**
     * <pre>
     * Was ist die letzte (also größte in der Zukunft liegende) "OrderDeadline"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_order_deadline = 20005;</code>
     */
    public function setMaxOrderDeadline(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->max_order_deadline = $var;
    }

    /**
     * <pre>
     * Bei wieviel VERSCHIEDENEN Lieferanten existieren "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_suppliers = 20006;</code>
     */
    public function getNumberOfSuppliers()
    {
        return $this->number_of_suppliers;
    }

    /**
     * <pre>
     * Bei wieviel VERSCHIEDENEN Lieferanten existieren "Queues"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_suppliers = 20006;</code>
     */
    public function setNumberOfSuppliers(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->number_of_suppliers = $var;
    }

    /**
     * <pre>
     * Gesamt-Netto-Summe (in der durch "CurrencyID" angegebenen Währung) aller Positionen aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_sum = 30002;</code>
     */
    public function getTotalNetSum()
    {
        return $this->total_net_sum;
    }

    /**
     * <pre>
     * Gesamt-Netto-Summe (in der durch "CurrencyID" angegebenen Währung) aller Positionen aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_sum = 30002;</code>
     */
    public function setTotalNetSum(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_net_sum = $var;
    }

    /**
     * <pre>
     * ID des Artikel-Merkmals, zu dem die Einkaufs-Preise (sprich "Einkaufspreis"-Eigenschaften von Artikel-Elementen) des Lieferanten hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 30006;</code>
     */
    public function getPurchasePriceCharacteristicId()
    {
        return $this->purchase_price_characteristic_id;
    }

    /**
     * <pre>
     * ID des Artikel-Merkmals, zu dem die Einkaufs-Preise (sprich "Einkaufspreis"-Eigenschaften von Artikel-Elementen) des Lieferanten hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 30006;</code>
     */
    public function setPurchasePriceCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->purchase_price_characteristic_id = $var;
    }

    /**
     * <pre>
     * Gesamt-Menge aller Artikel aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue total_quantity = 30012;</code>
     */
    public function getTotalQuantity()
    {
        return $this->total_quantity;
    }

    /**
     * <pre>
     * Gesamt-Menge aller Artikel aller "Queues" beim Lieferanten "SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue total_quantity = 30012;</code>
     */
    public function setTotalQuantity(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->total_quantity = $var;
    }

}

