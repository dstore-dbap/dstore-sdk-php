<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_SearchBinaries_Ad.proto

namespace Dstore\Engine\Im_SearchBinaries_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_SearchBinaries_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines gefundenen Binaries
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    private $binary_code_id = null;
    /**
     * <pre>
     * ID eines Artikel-Elementes, dem "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das auf "NodeID" verweist. Hintergrund : Die Zuordnung eines Binaries erfolgt zu einem Artikel-Element, das MEHRFACH im Artikelbaum eingeordnet sein KANN (derzeit aber nur theoretisch).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue chosen_tree_node_id = 10003;</code>
     */
    private $chosen_tree_node_id = null;
    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID3" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    private $value3 = null;
    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value1 = 10005;</code>
     */
    private $binary_value1 = null;
    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID1" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    private $value1 = null;
    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value3 = 10007;</code>
     */
    private $binary_value3 = null;
    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID2" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10008;</code>
     */
    private $value2 = null;
    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value2 = 10009;</code>
     */
    private $binary_value2 = null;
    /**
     * <pre>
     * Das sogenannte "Thumbnail" zur "BinaryCodeID"
     * </pre>
     *
     * <code>.dstore.values.BytesValue thumbnail_code = 20008;</code>
     */
    private $thumbnail_code = null;
    /**
     * <pre>
     * Die Binärdaten selbst
     * </pre>
     *
     * <code>.dstore.values.BytesValue binary_code = 20011;</code>
     */
    private $binary_code = null;
    /**
     * <pre>
     * ID des Merkmals, zu dem "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_characteristic_id = 30002;</code>
     */
    private $node_characteristic_id = null;
    /**
     * <pre>
     * Wert der Eigenschaft "ValueID"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 30003;</code>
     */
    private $value = null;
    /**
     * <pre>
     * ID einer Eigenschaft von Artikel-Elementen, der "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 30005;</code>
     */
    private $value_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImSearchBinariesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines gefundenen Binaries
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    public function getBinaryCodeId()
    {
        return $this->binary_code_id;
    }

    /**
     * <pre>
     * ID eines gefundenen Binaries
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    public function setBinaryCodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_code_id = $var;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, dem "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, dem "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das auf "NodeID" verweist. Hintergrund : Die Zuordnung eines Binaries erfolgt zu einem Artikel-Element, das MEHRFACH im Artikelbaum eingeordnet sein KANN (derzeit aber nur theoretisch).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue chosen_tree_node_id = 10003;</code>
     */
    public function getChosenTreeNodeId()
    {
        return $this->chosen_tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das auf "NodeID" verweist. Hintergrund : Die Zuordnung eines Binaries erfolgt zu einem Artikel-Element, das MEHRFACH im Artikelbaum eingeordnet sein KANN (derzeit aber nur theoretisch).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue chosen_tree_node_id = 10003;</code>
     */
    public function setChosenTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->chosen_tree_node_id = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID3" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    public function getValue3()
    {
        return $this->value3;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID3" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    public function setValue3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value1 = 10005;</code>
     */
    public function getBinaryValue1()
    {
        return $this->binary_value1;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value1 = 10005;</code>
     */
    public function setBinaryValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_value1 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID1" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    public function getValue1()
    {
        return $this->value1;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID1" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    public function setValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value3 = 10007;</code>
     */
    public function getBinaryValue3()
    {
        return $this->binary_value3;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value3 = 10007;</code>
     */
    public function setBinaryValue3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_value3 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID2" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10008;</code>
     */
    public function getValue2()
    {
        return $this->value2;
    }

    /**
     * <pre>
     * Eigenschaft von "ChosenTreeNodeID" zum Merkmal "&#64;NodeCharacteristicID2" (Vererbung wird beachtet, aber ohne rekursive Auswertung)
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10008;</code>
     */
    public function setValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value2 = 10009;</code>
     */
    public function getBinaryValue2()
    {
        return $this->binary_value2;
    }

    /**
     * <pre>
     * Eigenschaft von "BinaryCodeID" zum Merkmal "&#64;OutputBinaryCharacID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_value2 = 10009;</code>
     */
    public function setBinaryValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_value2 = $var;
    }

    /**
     * <pre>
     * Das sogenannte "Thumbnail" zur "BinaryCodeID"
     * </pre>
     *
     * <code>.dstore.values.BytesValue thumbnail_code = 20008;</code>
     */
    public function getThumbnailCode()
    {
        return $this->thumbnail_code;
    }

    /**
     * <pre>
     * Das sogenannte "Thumbnail" zur "BinaryCodeID"
     * </pre>
     *
     * <code>.dstore.values.BytesValue thumbnail_code = 20008;</code>
     */
    public function setThumbnailCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BytesValue::class);
        $this->thumbnail_code = $var;
    }

    /**
     * <pre>
     * Die Binärdaten selbst
     * </pre>
     *
     * <code>.dstore.values.BytesValue binary_code = 20011;</code>
     */
    public function getBinaryCode()
    {
        return $this->binary_code;
    }

    /**
     * <pre>
     * Die Binärdaten selbst
     * </pre>
     *
     * <code>.dstore.values.BytesValue binary_code = 20011;</code>
     */
    public function setBinaryCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BytesValue::class);
        $this->binary_code = $var;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_characteristic_id = 30002;</code>
     */
    public function getNodeCharacteristicId()
    {
        return $this->node_characteristic_id;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_characteristic_id = 30002;</code>
     */
    public function setNodeCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_characteristic_id = $var;
    }

    /**
     * <pre>
     * Wert der Eigenschaft "ValueID"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 30003;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * Wert der Eigenschaft "ValueID"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 30003;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value = $var;
    }

    /**
     * <pre>
     * ID einer Eigenschaft von Artikel-Elementen, der "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 30005;</code>
     */
    public function getValueId()
    {
        return $this->value_id;
    }

    /**
     * <pre>
     * ID einer Eigenschaft von Artikel-Elementen, der "BinaryCodeID" zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 30005;</code>
     */
    public function setValueId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->value_id = $var;
    }

}

