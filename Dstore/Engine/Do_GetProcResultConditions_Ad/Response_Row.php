<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/do_GetProcResultConditions_Ad.proto

namespace Dstore\Engine\Do_GetProcResultConditions_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.do_GetProcResultConditions_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung der Bedingung "ProcedureResultConditionID". Hinweis : Derzeit immer entweder "Parameterunabhängige Rückgabemenge" oder &lt;ProcedureName&gt;_&lt;fortlaufende Nummer&gt; !
     * </pre>
     *
     * <code>.dstore.values.StringValue condition_description = 10001;</code>
     */
    private $condition_description = null;
    /**
     * <pre>
     * Bedingung, die der Parameter "ParameterName" der Prozedur "ProcedureName" beim Aufruf erfüllen muß, damit eine entsprechende Rückgabemenge erzeugt wird
     * </pre>
     *
     * <code>.dstore.values.StringValue condition = 10002;</code>
     */
    private $condition = null;
    /**
     * <pre>
     * ID einer Bedingung, zu der "ProcedureName" eine Rückgabemenge liefert bzw. (wenn "ProcedureName = NULL") eine Prozedur eine Rückgabemenge liefern kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_result_condition_id = 10003;</code>
     */
    private $procedure_result_condition_id = null;
    /**
     * <pre>
     * Name d. Prozedur, die zur "ProcedureResultConditionID" eine Rückgabemenge liefert oder liefern kann - denn es werden auch Bedingungen beachtet, zu denen (noch) für keine Prozedur eine Rückgabemenge dokum. ist. Identisch m. "&#64;ProcedureName" wenn angegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    private $procedure_name = null;
    /**
     * <pre>
     * Name eines Parameters der Prozedur "ProcedureName", dessen Wert beim Aufruf der Prozedur die Bedingung "Condition" erfüllen muß, um eine entsprechende Rückgabemenge zu liefern
     * </pre>
     *
     * <code>.dstore.values.StringValue parameter_name = 10005;</code>
     */
    private $parameter_name = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\DoGetProcResultConditionsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Bedingung "ProcedureResultConditionID". Hinweis : Derzeit immer entweder "Parameterunabhängige Rückgabemenge" oder &lt;ProcedureName&gt;_&lt;fortlaufende Nummer&gt; !
     * </pre>
     *
     * <code>.dstore.values.StringValue condition_description = 10001;</code>
     */
    public function getConditionDescription()
    {
        return $this->condition_description;
    }

    /**
     * <pre>
     * Bezeichnung der Bedingung "ProcedureResultConditionID". Hinweis : Derzeit immer entweder "Parameterunabhängige Rückgabemenge" oder &lt;ProcedureName&gt;_&lt;fortlaufende Nummer&gt; !
     * </pre>
     *
     * <code>.dstore.values.StringValue condition_description = 10001;</code>
     */
    public function setConditionDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->condition_description = $var;
    }

    /**
     * <pre>
     * Bedingung, die der Parameter "ParameterName" der Prozedur "ProcedureName" beim Aufruf erfüllen muß, damit eine entsprechende Rückgabemenge erzeugt wird
     * </pre>
     *
     * <code>.dstore.values.StringValue condition = 10002;</code>
     */
    public function getCondition()
    {
        return $this->condition;
    }

    /**
     * <pre>
     * Bedingung, die der Parameter "ParameterName" der Prozedur "ProcedureName" beim Aufruf erfüllen muß, damit eine entsprechende Rückgabemenge erzeugt wird
     * </pre>
     *
     * <code>.dstore.values.StringValue condition = 10002;</code>
     */
    public function setCondition(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->condition = $var;
    }

    /**
     * <pre>
     * ID einer Bedingung, zu der "ProcedureName" eine Rückgabemenge liefert bzw. (wenn "ProcedureName = NULL") eine Prozedur eine Rückgabemenge liefern kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_result_condition_id = 10003;</code>
     */
    public function getProcedureResultConditionId()
    {
        return $this->procedure_result_condition_id;
    }

    /**
     * <pre>
     * ID einer Bedingung, zu der "ProcedureName" eine Rückgabemenge liefert bzw. (wenn "ProcedureName = NULL") eine Prozedur eine Rückgabemenge liefern kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_result_condition_id = 10003;</code>
     */
    public function setProcedureResultConditionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->procedure_result_condition_id = $var;
    }

    /**
     * <pre>
     * Name d. Prozedur, die zur "ProcedureResultConditionID" eine Rückgabemenge liefert oder liefern kann - denn es werden auch Bedingungen beachtet, zu denen (noch) für keine Prozedur eine Rückgabemenge dokum. ist. Identisch m. "&#64;ProcedureName" wenn angegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    public function getProcedureName()
    {
        return $this->procedure_name;
    }

    /**
     * <pre>
     * Name d. Prozedur, die zur "ProcedureResultConditionID" eine Rückgabemenge liefert oder liefern kann - denn es werden auch Bedingungen beachtet, zu denen (noch) für keine Prozedur eine Rückgabemenge dokum. ist. Identisch m. "&#64;ProcedureName" wenn angegeben.
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    public function setProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_name = $var;
    }

    /**
     * <pre>
     * Name eines Parameters der Prozedur "ProcedureName", dessen Wert beim Aufruf der Prozedur die Bedingung "Condition" erfüllen muß, um eine entsprechende Rückgabemenge zu liefern
     * </pre>
     *
     * <code>.dstore.values.StringValue parameter_name = 10005;</code>
     */
    public function getParameterName()
    {
        return $this->parameter_name;
    }

    /**
     * <pre>
     * Name eines Parameters der Prozedur "ProcedureName", dessen Wert beim Aufruf der Prozedur die Bedingung "Condition" erfüllen muß, um eine entsprechende Rückgabemenge zu liefern
     * </pre>
     *
     * <code>.dstore.values.StringValue parameter_name = 10005;</code>
     */
    public function setParameterName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->parameter_name = $var;
    }

}

