<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetLocales.proto

namespace Dstore\Engine\Mi_GetLocales;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetLocales.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    private $country_id = null;
    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    private $country_description = null;
    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10003;</code>
     */
    private $language_symbol = null;
    /**
     * <pre>
     * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue locale_id = 10004;</code>
     */
    private $locale_id = null;
    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_given_language = 10005;</code>
     */
    private $country_descr_in_given_language = null;
    /**
     * <pre>
     * Bezeichnung der Sprache (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10006;</code>
     */
    private $language = null;
    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_locale_language = 10007;</code>
     */
    private $language_in_locale_language = null;
    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_given_language = 10008;</code>
     */
    private $language_in_given_language = null;
    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10009;</code>
     */
    private $country_code = null;
    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_locale_language = 10010;</code>
     */
    private $country_descr_in_locale_language = null;
    /**
     * <pre>
     * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10011;</code>
     */
    private $language_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetLocales::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    public function getCountryId()
    {
        return $this->country_id;
    }

    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    public function setCountryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->country_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    public function getCountryDescription()
    {
        return $this->country_description;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    public function setCountryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_description = $var;
    }

    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10003;</code>
     */
    public function getLanguageSymbol()
    {
        return $this->language_symbol;
    }

    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10003;</code>
     */
    public function setLanguageSymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language_symbol = $var;
    }

    /**
     * <pre>
     * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue locale_id = 10004;</code>
     */
    public function getLocaleId()
    {
        return $this->locale_id;
    }

    /**
     * <pre>
     * ID eines "locale"-Eintrags - der einfach die Zuordnung eines Landes (-&gt; "CountryID") zu einer Sprache (-&gt; "LanguageID") darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue locale_id = 10004;</code>
     */
    public function setLocaleId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->locale_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_given_language = 10005;</code>
     */
    public function getCountryDescrInGivenLanguage()
    {
        return $this->country_descr_in_given_language;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_given_language = 10005;</code>
     */
    public function setCountryDescrInGivenLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_descr_in_given_language = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10006;</code>
     */
    public function getLanguage()
    {
        return $this->language;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache (in der "DefaultLanguageID")
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10006;</code>
     */
    public function setLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_locale_language = 10007;</code>
     */
    public function getLanguageInLocaleLanguage()
    {
        return $this->language_in_locale_language;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der Sprache "LanguageID" selbst
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_locale_language = 10007;</code>
     */
    public function setLanguageInLocaleLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language_in_locale_language = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_given_language = 10008;</code>
     */
    public function getLanguageInGivenLanguage()
    {
        return $this->language_in_given_language;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID" in der durch "&#64;GetNamesInLanguageID" angegebenen Sprache. Falls "NULL" für besagten Parameter angegeben wurde, wird hier immer "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_in_given_language = 10008;</code>
     */
    public function setLanguageInGivenLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language_in_given_language = $var;
    }

    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10009;</code>
     */
    public function getCountryCode()
    {
        return $this->country_code;
    }

    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10009;</code>
     */
    public function setCountryCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_code = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_locale_language = 10010;</code>
     */
    public function getCountryDescrInLocaleLanguage()
    {
        return $this->country_descr_in_locale_language;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der Sprache "LanguageID", also quasi der "locale"-Sprache
     * </pre>
     *
     * <code>.dstore.values.StringValue country_descr_in_locale_language = 10010;</code>
     */
    public function setCountryDescrInLocaleLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_descr_in_locale_language = $var;
    }

    /**
     * <pre>
     * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10011;</code>
     */
    public function getLanguageId()
    {
        return $this->language_id;
    }

    /**
     * <pre>
     * ID einer Sprache, die zusammen mit "CountryID" einen "locale"-Eintrag darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10011;</code>
     */
    public function setLanguageId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->language_id = $var;
    }

}

