<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_CheckFieldTypeOfValues_Ad.proto

namespace Dstore\Engine\Mi_CheckFieldTypeOfValues_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_CheckFieldTypeOfValues_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines "Feld-Typs" (mögliche Werte : s. "mi_GetFieldTypes_Ad"), der das Format beschreibt, welches "Value" je nach "ErrorCode" erfüllt oder nicht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10001;</code>
     */
    private $field_type_id = null;
    /**
     * <pre>
     * Ein zu untersuchender Wert - entspricht also "&#64;Value" bzw. einem "Value"-Wert aus "tempdb.dbo.CharacteristicValues"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10002;</code>
     */
    private $value = null;
    /**
     * <pre>
     * Das Ergebnis :- "0" : Alles ok, der Wert kann so übernommen werden- "1" : Alles ok, aber der Wert mußte umformatiert werden (-&gt; "AlteredValue"), z.B. bei Datumsangaben, wenn 'german' für "&#64;Country" übergeben wurde- "2" : Falsches Format
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10003;</code>
     */
    private $error_code = null;
    /**
     * <pre>
     * Immer "NULL", außer im Fall "ErrorCode = 1". In diesem Fall würde intern nicht der (ursprünglich) übergebene Wert "Value" gespeichert werden, sondern dieser hier !
     * </pre>
     *
     * <code>.dstore.values.StringValue altered_value = 10004;</code>
     */
    private $altered_value = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiCheckFieldTypeOfValuesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines "Feld-Typs" (mögliche Werte : s. "mi_GetFieldTypes_Ad"), der das Format beschreibt, welches "Value" je nach "ErrorCode" erfüllt oder nicht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10001;</code>
     */
    public function getFieldTypeId()
    {
        return $this->field_type_id;
    }

    /**
     * <pre>
     * ID eines "Feld-Typs" (mögliche Werte : s. "mi_GetFieldTypes_Ad"), der das Format beschreibt, welches "Value" je nach "ErrorCode" erfüllt oder nicht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10001;</code>
     */
    public function setFieldTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->field_type_id = $var;
    }

    /**
     * <pre>
     * Ein zu untersuchender Wert - entspricht also "&#64;Value" bzw. einem "Value"-Wert aus "tempdb.dbo.CharacteristicValues"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10002;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * Ein zu untersuchender Wert - entspricht also "&#64;Value" bzw. einem "Value"-Wert aus "tempdb.dbo.CharacteristicValues"
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10002;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value = $var;
    }

    /**
     * <pre>
     * Das Ergebnis :- "0" : Alles ok, der Wert kann so übernommen werden- "1" : Alles ok, aber der Wert mußte umformatiert werden (-&gt; "AlteredValue"), z.B. bei Datumsangaben, wenn 'german' für "&#64;Country" übergeben wurde- "2" : Falsches Format
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10003;</code>
     */
    public function getErrorCode()
    {
        return $this->error_code;
    }

    /**
     * <pre>
     * Das Ergebnis :- "0" : Alles ok, der Wert kann so übernommen werden- "1" : Alles ok, aber der Wert mußte umformatiert werden (-&gt; "AlteredValue"), z.B. bei Datumsangaben, wenn 'german' für "&#64;Country" übergeben wurde- "2" : Falsches Format
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10003;</code>
     */
    public function setErrorCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->error_code = $var;
    }

    /**
     * <pre>
     * Immer "NULL", außer im Fall "ErrorCode = 1". In diesem Fall würde intern nicht der (ursprünglich) übergebene Wert "Value" gespeichert werden, sondern dieser hier !
     * </pre>
     *
     * <code>.dstore.values.StringValue altered_value = 10004;</code>
     */
    public function getAlteredValue()
    {
        return $this->altered_value;
    }

    /**
     * <pre>
     * Immer "NULL", außer im Fall "ErrorCode = 1". In diesem Fall würde intern nicht der (ursprünglich) übergebene Wert "Value" gespeichert werden, sondern dieser hier !
     * </pre>
     *
     * <code>.dstore.values.StringValue altered_value = 10004;</code>
     */
    public function setAlteredValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->altered_value = $var;
    }

}

