<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/fo_GetPostingReplies_Pu.proto

namespace Dstore\Engine\Fo_GetPostingReplies_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.fo_GetPostingReplies_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
     * </pre>
     *
     * <code>.dstore.values.StringValue small_body = 10001;</code>
     */
    private $small_body = null;
    /**
     * <pre>
     * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue already_read = 10002;</code>
     */
    private $already_read = null;
    /**
     * <pre>
     * ID eines Beitrags, der eine (direkte oder indirekte) Antwort auf "&#64;PostingID" darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue posting_id = 10003;</code>
     */
    private $posting_id = null;
    /**
     * <pre>
     * ID des Postings, auf das "PostingID" eine Antwort darstellt. Falls gleich "PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue reply_to_posting_id = 10004;</code>
     */
    private $reply_to_posting_id = null;
    /**
     * <pre>
     * Der Titel des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue subject = 10005;</code>
     */
    private $subject = null;
    /**
     * <pre>
     * eMail des Verfassers "Author"
     * </pre>
     *
     * <code>.dstore.values.StringValue e_mail_of_author = 10006;</code>
     */
    private $e_mail_of_author = null;
    /**
     * <pre>
     * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue author_person_id = 10007;</code>
     */
    private $author_person_id = null;
    /**
     * <pre>
     * "PostDate" als String im Format : "15.03.2001 20:48:13:545"
     * </pre>
     *
     * <code>.dstore.values.StringValue post_date_char = 10008;</code>
     */
    private $post_date_char = null;
    /**
     * <pre>
     * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visible = 10009;</code>
     */
    private $visible = null;
    /**
     * <pre>
     * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_binaries = 10010;</code>
     */
    private $has_binaries = null;
    /**
     * <pre>
     * Name des Verfassers des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10011;</code>
     */
    private $author = null;
    /**
     * <pre>
     * Datum des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.TimestampValue post_date = 10012;</code>
     */
    private $post_date = null;
    /**
     * <pre>
     * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
     * </pre>
     *
     * <code>.dstore.values.StringValue body = 10013;</code>
     */
    private $body = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\FoGetPostingRepliesPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
     * </pre>
     *
     * <code>.dstore.values.StringValue small_body = 10001;</code>
     */
    public function getSmallBody()
    {
        return $this->small_body;
    }

    /**
     * <pre>
     * Hier erscheint der Beitrag selbst, falls er weniger als 256 Zeichen enthält UND "UseSmallBody" in "ForumSettings" auf "1" gesetzt UND "&#64;IncludePostingBodies = 1" ist. D.h. mindestens EINE der Rückgabespalten "SmallBody" und "Body" ist IMMER "NULL".
     * </pre>
     *
     * <code>.dstore.values.StringValue small_body = 10001;</code>
     */
    public function setSmallBody(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->small_body = $var;
    }

    /**
     * <pre>
     * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue already_read = 10002;</code>
     */
    public function getAlreadyRead()
    {
        return $this->already_read;
    }

    /**
     * <pre>
     * Wurde das Posting vor "HoursAfterPostingsAreRegardedAsRead" (Eintrag in "ForumSettings") Stunden verfaßt ODER gibt es zur Person, die diese Prozedur aufruft, einen Eintrag in "ReadPostingsPerPerson", steht hier der Wert "1"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue already_read = 10002;</code>
     */
    public function setAlreadyRead(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->already_read = $var;
    }

    /**
     * <pre>
     * ID eines Beitrags, der eine (direkte oder indirekte) Antwort auf "&#64;PostingID" darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue posting_id = 10003;</code>
     */
    public function getPostingId()
    {
        return $this->posting_id;
    }

    /**
     * <pre>
     * ID eines Beitrags, der eine (direkte oder indirekte) Antwort auf "&#64;PostingID" darstellt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue posting_id = 10003;</code>
     */
    public function setPostingId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->posting_id = $var;
    }

    /**
     * <pre>
     * ID des Postings, auf das "PostingID" eine Antwort darstellt. Falls gleich "PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue reply_to_posting_id = 10004;</code>
     */
    public function getReplyToPostingId()
    {
        return $this->reply_to_posting_id;
    }

    /**
     * <pre>
     * ID des Postings, auf das "PostingID" eine Antwort darstellt. Falls gleich "PostingID", handelt es sich um einen Haupt-Beitrag, sprich "MainPosting"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue reply_to_posting_id = 10004;</code>
     */
    public function setReplyToPostingId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->reply_to_posting_id = $var;
    }

    /**
     * <pre>
     * Der Titel des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue subject = 10005;</code>
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * <pre>
     * Der Titel des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue subject = 10005;</code>
     */
    public function setSubject(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->subject = $var;
    }

    /**
     * <pre>
     * eMail des Verfassers "Author"
     * </pre>
     *
     * <code>.dstore.values.StringValue e_mail_of_author = 10006;</code>
     */
    public function getEMailOfAuthor()
    {
        return $this->e_mail_of_author;
    }

    /**
     * <pre>
     * eMail des Verfassers "Author"
     * </pre>
     *
     * <code>.dstore.values.StringValue e_mail_of_author = 10006;</code>
     */
    public function setEMailOfAuthor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->e_mail_of_author = $var;
    }

    /**
     * <pre>
     * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue author_person_id = 10007;</code>
     */
    public function getAuthorPersonId()
    {
        return $this->author_person_id;
    }

    /**
     * <pre>
     * (Person)ID des Verfassers "Author" - "0" bedeutet, daß der Verfasser anonym ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue author_person_id = 10007;</code>
     */
    public function setAuthorPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->author_person_id = $var;
    }

    /**
     * <pre>
     * "PostDate" als String im Format : "15.03.2001 20:48:13:545"
     * </pre>
     *
     * <code>.dstore.values.StringValue post_date_char = 10008;</code>
     */
    public function getPostDateChar()
    {
        return $this->post_date_char;
    }

    /**
     * <pre>
     * "PostDate" als String im Format : "15.03.2001 20:48:13:545"
     * </pre>
     *
     * <code>.dstore.values.StringValue post_date_char = 10008;</code>
     */
    public function setPostDateChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->post_date_char = $var;
    }

    /**
     * <pre>
     * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visible = 10009;</code>
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * <pre>
     * Sichtbarkeits-Status des Postings "PostingID" - mögliche Werte : siehe "fo_GetPostingVisibilities"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visible = 10009;</code>
     */
    public function setVisible(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->visible = $var;
    }

    /**
     * <pre>
     * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_binaries = 10010;</code>
     */
    public function getHasBinaries()
    {
        return $this->has_binaries;
    }

    /**
     * <pre>
     * Sind "Binaries" zu dem Posting "PostingID" vorhanden ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_binaries = 10010;</code>
     */
    public function setHasBinaries(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_binaries = $var;
    }

    /**
     * <pre>
     * Name des Verfassers des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10011;</code>
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * <pre>
     * Name des Verfassers des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10011;</code>
     */
    public function setAuthor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->author = $var;
    }

    /**
     * <pre>
     * Datum des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.TimestampValue post_date = 10012;</code>
     */
    public function getPostDate()
    {
        return $this->post_date;
    }

    /**
     * <pre>
     * Datum des Beitrags "PostingID"
     * </pre>
     *
     * <code>.dstore.values.TimestampValue post_date = 10012;</code>
     */
    public function setPostDate(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->post_date = $var;
    }

    /**
     * <pre>
     * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
     * </pre>
     *
     * <code>.dstore.values.StringValue body = 10013;</code>
     */
    public function getBody()
    {
        return $this->body;
    }

    /**
     * <pre>
     * Der Beitrag selbst - "NULL" falls "SmallBody" NICHT "NULL" ist
     * </pre>
     *
     * <code>.dstore.values.StringValue body = 10013;</code>
     */
    public function setBody(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->body = $var;
    }

}

