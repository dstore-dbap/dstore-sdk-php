<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonOutputCharacs_Ad.proto

namespace Dstore\Engine\Pm_GetPersonOutputCharacs_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonOutputCharacs_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Breite der Spalte (für die Darstellung in der Frontend-Applikation) für die Eigenschaften zum Merkmal "CharacteristicID" der Personen, die dargestellt werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue column_width = 10001;</code>
     */
    private $column_width = null;
    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10002;</code>
     */
    private $characteristic_description = null;
    /**
     * <pre>
     * ID eines Personen-Merkmals, das im "PersonTypeSettings"- bzw. "Settings"-Eintrag (je nach "&#64;UserID", s. Beschreibung) zum Schlüssel "PersonOutputCharacteristics" für "&#64;PersonTypeID" bzw. "PersonOutputCharacteristics_Type&lt;&#64;PersonTypeID&gt;" eingetragen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    private $characteristic_id = null;
    /**
     * <pre>
     * Gibt an, wie nach den Eigenschaften zu "CharacteristicID" sortiert werden soll :- "0" : Absteigend- "1" : AufsteigendAnmerkung : Diese Information wird im "dStore" selbst nirgends verwendet
     * </pre>
     *
     * <code>.dstore.values.BooleanValue sort_order = 10004;</code>
     */
    private $sort_order = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonOutputCharacsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Breite der Spalte (für die Darstellung in der Frontend-Applikation) für die Eigenschaften zum Merkmal "CharacteristicID" der Personen, die dargestellt werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue column_width = 10001;</code>
     */
    public function getColumnWidth()
    {
        return $this->column_width;
    }

    /**
     * <pre>
     * Breite der Spalte (für die Darstellung in der Frontend-Applikation) für die Eigenschaften zum Merkmal "CharacteristicID" der Personen, die dargestellt werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue column_width = 10001;</code>
     */
    public function setColumnWidth(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->column_width = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10002;</code>
     */
    public function getCharacteristicDescription()
    {
        return $this->characteristic_description;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10002;</code>
     */
    public function setCharacteristicDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_description = $var;
    }

    /**
     * <pre>
     * ID eines Personen-Merkmals, das im "PersonTypeSettings"- bzw. "Settings"-Eintrag (je nach "&#64;UserID", s. Beschreibung) zum Schlüssel "PersonOutputCharacteristics" für "&#64;PersonTypeID" bzw. "PersonOutputCharacteristics_Type&lt;&#64;PersonTypeID&gt;" eingetragen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    public function getCharacteristicId()
    {
        return $this->characteristic_id;
    }

    /**
     * <pre>
     * ID eines Personen-Merkmals, das im "PersonTypeSettings"- bzw. "Settings"-Eintrag (je nach "&#64;UserID", s. Beschreibung) zum Schlüssel "PersonOutputCharacteristics" für "&#64;PersonTypeID" bzw. "PersonOutputCharacteristics_Type&lt;&#64;PersonTypeID&gt;" eingetragen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    public function setCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->characteristic_id = $var;
    }

    /**
     * <pre>
     * Gibt an, wie nach den Eigenschaften zu "CharacteristicID" sortiert werden soll :- "0" : Absteigend- "1" : AufsteigendAnmerkung : Diese Information wird im "dStore" selbst nirgends verwendet
     * </pre>
     *
     * <code>.dstore.values.BooleanValue sort_order = 10004;</code>
     */
    public function getSortOrder()
    {
        return $this->sort_order;
    }

    /**
     * <pre>
     * Gibt an, wie nach den Eigenschaften zu "CharacteristicID" sortiert werden soll :- "0" : Absteigend- "1" : AufsteigendAnmerkung : Diese Information wird im "dStore" selbst nirgends verwendet
     * </pre>
     *
     * <code>.dstore.values.BooleanValue sort_order = 10004;</code>
     */
    public function setSortOrder(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->sort_order = $var;
    }

}

