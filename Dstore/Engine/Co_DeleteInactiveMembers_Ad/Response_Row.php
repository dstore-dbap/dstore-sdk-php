<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/co_DeleteInactiveMembers_Ad.proto

namespace Dstore\Engine\Co_DeleteInactiveMembers_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.co_DeleteInactiveMembers_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines Mitglieds der Community "&#64;CommunityID", das länger als "&#64;LastLoginXMonthAgo" Monate nicht mehr eingeloggt war bzw. zu dem keine "OnlineTime"-Statistiken mehr vorhanden sind.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    private $community_member_id = null;
    /**
     * <pre>
     * Wann war das Mitglied "CommunityMemberID" zuletzt online
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_login = 10002;</code>
     */
    private $last_login = null;
    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10003;</code>
     */
    private $nickname = null;
    /**
     * <pre>
     * Wann wurde die Person (das Mitglied) angelegt (nicht, wann wurde die Person Mitglied in der Community "&#64;CommuntiyID" !)
     * </pre>
     *
     * <code>.dstore.values.TimestampValue creation_date_and_time = 20003;</code>
     */
    private $creation_date_and_time = null;
    /**
     * <pre>
     * Anzahl aller NICHT-GELÖSCHTEN Beiträge des Mitglieds
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_postings = 20004;</code>
     */
    private $number_of_postings = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\CoDeleteInactiveMembersAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines Mitglieds der Community "&#64;CommunityID", das länger als "&#64;LastLoginXMonthAgo" Monate nicht mehr eingeloggt war bzw. zu dem keine "OnlineTime"-Statistiken mehr vorhanden sind.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    public function getCommunityMemberId()
    {
        return $this->community_member_id;
    }

    /**
     * <pre>
     * ID eines Mitglieds der Community "&#64;CommunityID", das länger als "&#64;LastLoginXMonthAgo" Monate nicht mehr eingeloggt war bzw. zu dem keine "OnlineTime"-Statistiken mehr vorhanden sind.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    public function setCommunityMemberId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->community_member_id = $var;
    }

    /**
     * <pre>
     * Wann war das Mitglied "CommunityMemberID" zuletzt online
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_login = 10002;</code>
     */
    public function getLastLogin()
    {
        return $this->last_login;
    }

    /**
     * <pre>
     * Wann war das Mitglied "CommunityMemberID" zuletzt online
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_login = 10002;</code>
     */
    public function setLastLogin(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_login = $var;
    }

    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10003;</code>
     */
    public function getNickname()
    {
        return $this->nickname;
    }

    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10003;</code>
     */
    public function setNickname(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->nickname = $var;
    }

    /**
     * <pre>
     * Wann wurde die Person (das Mitglied) angelegt (nicht, wann wurde die Person Mitglied in der Community "&#64;CommuntiyID" !)
     * </pre>
     *
     * <code>.dstore.values.TimestampValue creation_date_and_time = 20003;</code>
     */
    public function getCreationDateAndTime()
    {
        return $this->creation_date_and_time;
    }

    /**
     * <pre>
     * Wann wurde die Person (das Mitglied) angelegt (nicht, wann wurde die Person Mitglied in der Community "&#64;CommuntiyID" !)
     * </pre>
     *
     * <code>.dstore.values.TimestampValue creation_date_and_time = 20003;</code>
     */
    public function setCreationDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->creation_date_and_time = $var;
    }

    /**
     * <pre>
     * Anzahl aller NICHT-GELÖSCHTEN Beiträge des Mitglieds
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_postings = 20004;</code>
     */
    public function getNumberOfPostings()
    {
        return $this->number_of_postings;
    }

    /**
     * <pre>
     * Anzahl aller NICHT-GELÖSCHTEN Beiträge des Mitglieds
     * </pre>
     *
     * <code>.dstore.values.IntegerValue number_of_postings = 20004;</code>
     */
    public function setNumberOfPostings(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->number_of_postings = $var;
    }

}

