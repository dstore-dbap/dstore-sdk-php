<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetUsedVoucherCodes_Ad.proto

namespace Dstore\Engine\Om_GetUsedVoucherCodes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetUsedVoucherCodes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Ein Gutschein-Code, der im Auftrag "VisitorOrOrderID" eingelöst (falls "IsOrderID = 1") oder zum Warenkorb hinterlegt (wenn "IsOrderID = 0") wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_code = 10001;</code>
     */
    private $voucher_code = null;
    /**
     * <pre>
     * ID des Auftraggebers ("IsOrderID = 1") bzw. der identifizerten Person ("IsOrderID = 0") vom Auftrag bzw. zum Warenkorb "VisitorOrOrderID". Anmerkung : Bei "IsOrderID = 0" kann hier "NULL" stehen, weil der (zukünftige) Auftraggeber noch nicht bekannt ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Der Zeitpunkt der letzten (erfolgreichen) Validierung des Codes
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_validation_date_and_time = 10003;</code>
     */
    private $last_validation_date_and_time = null;
    /**
     * <pre>
     * ID eines Warenkorbs (wenn "IsOrderID = 0") oder Auftrags (wenn "IsOrderID = 1")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_or_order_id = 10004;</code>
     */
    private $visitor_or_order_id = null;
    /**
     * <pre>
     * Gibt an, ob es sich bei "VisitorOrOrderID" um einen Warenkorb ("0" oder Auftrag ("1") handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue is_order_id = 10005;</code>
     */
    private $is_order_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetUsedVoucherCodesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Ein Gutschein-Code, der im Auftrag "VisitorOrOrderID" eingelöst (falls "IsOrderID = 1") oder zum Warenkorb hinterlegt (wenn "IsOrderID = 0") wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_code = 10001;</code>
     */
    public function getVoucherCode()
    {
        return $this->voucher_code;
    }

    /**
     * <pre>
     * Ein Gutschein-Code, der im Auftrag "VisitorOrOrderID" eingelöst (falls "IsOrderID = 1") oder zum Warenkorb hinterlegt (wenn "IsOrderID = 0") wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_code = 10001;</code>
     */
    public function setVoucherCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->voucher_code = $var;
    }

    /**
     * <pre>
     * ID des Auftraggebers ("IsOrderID = 1") bzw. der identifizerten Person ("IsOrderID = 0") vom Auftrag bzw. zum Warenkorb "VisitorOrOrderID". Anmerkung : Bei "IsOrderID = 0" kann hier "NULL" stehen, weil der (zukünftige) Auftraggeber noch nicht bekannt ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID des Auftraggebers ("IsOrderID = 1") bzw. der identifizerten Person ("IsOrderID = 0") vom Auftrag bzw. zum Warenkorb "VisitorOrOrderID". Anmerkung : Bei "IsOrderID = 0" kann hier "NULL" stehen, weil der (zukünftige) Auftraggeber noch nicht bekannt ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Der Zeitpunkt der letzten (erfolgreichen) Validierung des Codes
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_validation_date_and_time = 10003;</code>
     */
    public function getLastValidationDateAndTime()
    {
        return $this->last_validation_date_and_time;
    }

    /**
     * <pre>
     * Der Zeitpunkt der letzten (erfolgreichen) Validierung des Codes
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_validation_date_and_time = 10003;</code>
     */
    public function setLastValidationDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_validation_date_and_time = $var;
    }

    /**
     * <pre>
     * ID eines Warenkorbs (wenn "IsOrderID = 0") oder Auftrags (wenn "IsOrderID = 1")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_or_order_id = 10004;</code>
     */
    public function getVisitorOrOrderId()
    {
        return $this->visitor_or_order_id;
    }

    /**
     * <pre>
     * ID eines Warenkorbs (wenn "IsOrderID = 0") oder Auftrags (wenn "IsOrderID = 1")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_or_order_id = 10004;</code>
     */
    public function setVisitorOrOrderId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->visitor_or_order_id = $var;
    }

    /**
     * <pre>
     * Gibt an, ob es sich bei "VisitorOrOrderID" um einen Warenkorb ("0" oder Auftrag ("1") handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue is_order_id = 10005;</code>
     */
    public function getIsOrderId()
    {
        return $this->is_order_id;
    }

    /**
     * <pre>
     * Gibt an, ob es sich bei "VisitorOrOrderID" um einen Warenkorb ("0" oder Auftrag ("1") handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue is_order_id = 10005;</code>
     */
    public function setIsOrderId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->is_order_id = $var;
    }

}

