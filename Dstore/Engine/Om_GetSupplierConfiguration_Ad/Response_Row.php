<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetSupplierConfiguration_Ad.proto

namespace Dstore\Engine\Om_GetSupplierConfiguration_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetSupplierConfiguration_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung der "PaymentTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_type_description = 10001;</code>
     */
    private $payment_type_description = null;
    /**
     * <pre>
     * Bezeichnung der "ShippingTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue shipping_type_description = 10002;</code>
     */
    private $shipping_type_description = null;
    /**
     * <pre>
     * ID der Währung in der die Einkaufs-Preise zu verstehen sind (das ist die zur "PurchasePriceCharacteristicID" konfigurierte "UnitID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_currency_id = 10003;</code>
     */
    private $purchase_price_currency_id = null;
    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "PurchasePriceCurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_currency_symbol = 10004;</code>
     */
    private $purchase_price_currency_symbol = null;
    /**
     * <pre>
     * ID des Merkmals, zu dem zu Artikel-Elementen die Einkaufs-Preise des Lieferanten "&#64;SupplierID" hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 10005;</code>
     */
    private $purchase_price_characteristic_id = null;
    /**
     * <pre>
     * ID der Standard-Versandart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue shipping_type_id = 10006;</code>
     */
    private $shipping_type_id = null;
    /**
     * <pre>
     * ID der Standard-Zahlungsart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_type_id = 10007;</code>
     */
    private $payment_type_id = null;
    /**
     * <pre>
     * Bezeichnung der "PurchasePriceCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_charac_description = 10008;</code>
     */
    private $purchase_price_charac_description = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetSupplierConfigurationAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "PaymentTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_type_description = 10001;</code>
     */
    public function getPaymentTypeDescription()
    {
        return $this->payment_type_description;
    }

    /**
     * <pre>
     * Bezeichnung der "PaymentTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_type_description = 10001;</code>
     */
    public function setPaymentTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->payment_type_description = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "ShippingTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue shipping_type_description = 10002;</code>
     */
    public function getShippingTypeDescription()
    {
        return $this->shipping_type_description;
    }

    /**
     * <pre>
     * Bezeichnung der "ShippingTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue shipping_type_description = 10002;</code>
     */
    public function setShippingTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->shipping_type_description = $var;
    }

    /**
     * <pre>
     * ID der Währung in der die Einkaufs-Preise zu verstehen sind (das ist die zur "PurchasePriceCharacteristicID" konfigurierte "UnitID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_currency_id = 10003;</code>
     */
    public function getPurchasePriceCurrencyId()
    {
        return $this->purchase_price_currency_id;
    }

    /**
     * <pre>
     * ID der Währung in der die Einkaufs-Preise zu verstehen sind (das ist die zur "PurchasePriceCharacteristicID" konfigurierte "UnitID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_currency_id = 10003;</code>
     */
    public function setPurchasePriceCurrencyId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->purchase_price_currency_id = $var;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "PurchasePriceCurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_currency_symbol = 10004;</code>
     */
    public function getPurchasePriceCurrencySymbol()
    {
        return $this->purchase_price_currency_symbol;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "PurchasePriceCurrencyID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_currency_symbol = 10004;</code>
     */
    public function setPurchasePriceCurrencySymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->purchase_price_currency_symbol = $var;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem zu Artikel-Elementen die Einkaufs-Preise des Lieferanten "&#64;SupplierID" hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 10005;</code>
     */
    public function getPurchasePriceCharacteristicId()
    {
        return $this->purchase_price_characteristic_id;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem zu Artikel-Elementen die Einkaufs-Preise des Lieferanten "&#64;SupplierID" hinterlegt sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue purchase_price_characteristic_id = 10005;</code>
     */
    public function setPurchasePriceCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->purchase_price_characteristic_id = $var;
    }

    /**
     * <pre>
     * ID der Standard-Versandart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue shipping_type_id = 10006;</code>
     */
    public function getShippingTypeId()
    {
        return $this->shipping_type_id;
    }

    /**
     * <pre>
     * ID der Standard-Versandart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue shipping_type_id = 10006;</code>
     */
    public function setShippingTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->shipping_type_id = $var;
    }

    /**
     * <pre>
     * ID der Standard-Zahlungsart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_type_id = 10007;</code>
     */
    public function getPaymentTypeId()
    {
        return $this->payment_type_id;
    }

    /**
     * <pre>
     * ID der Standard-Zahlungsart für "Einkaufs-Aufträge" beim Lieferanten "&#64;SupplierID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_type_id = 10007;</code>
     */
    public function setPaymentTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->payment_type_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "PurchasePriceCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_charac_description = 10008;</code>
     */
    public function getPurchasePriceCharacDescription()
    {
        return $this->purchase_price_charac_description;
    }

    /**
     * <pre>
     * Bezeichnung der "PurchasePriceCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue purchase_price_charac_description = 10008;</code>
     */
    public function setPurchasePriceCharacDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->purchase_price_charac_description = $var;
    }

}

