<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/st_GetVisitorPersons_Ad.proto

namespace Dstore\Engine\St_GetVisitorPersons_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.st_GetVisitorPersons_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Wie "CharacVal1RestrByPattern" - nur eben auf "CharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val2_restr_by_pattern = 10001;</code>
     */
    private $charac_val2_restr_by_pattern = null;
    /**
     * <pre>
     * ID eines Besuchers, der im Zeitraum "ValidFrom" bis "ValidTo" der Person "PersonID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10002;</code>
     */
    private $visitor_id = null;
    /**
     * <pre>
     * ID einer Person, die im Zeitraum "ValidFrom" bis "ValidTo" dem Besucher "VisitorID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Ende des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115". "NULL" bedeutet, daß die Zuordnung aktuell noch gültig ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_to = 10004;</code>
     */
    private $valid_to = null;
    /**
     * <pre>
     * Beginn des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115"
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_from = 10005;</code>
     */
    private $valid_from = null;
    /**
     * <pre>
     * Bezeichnung des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type = 10006;</code>
     */
    private $person_type = null;
    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 2. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value2 = 10007;</code>
     */
    private $characteristic_value2 = null;
    /**
     * <pre>
     * Was enthält "CharacteristicValue1" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "CharacteristicValue1" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val1_restr_by_pattern = 10008;</code>
     */
    private $charac_val1_restr_by_pattern = null;
    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value1 = 10009;</code>
     */
    private $characteristic_value1 = null;
    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10010;</code>
     */
    private $person_type_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\StGetVisitorPersonsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Wie "CharacVal1RestrByPattern" - nur eben auf "CharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val2_restr_by_pattern = 10001;</code>
     */
    public function getCharacVal2RestrByPattern()
    {
        return $this->charac_val2_restr_by_pattern;
    }

    /**
     * <pre>
     * Wie "CharacVal1RestrByPattern" - nur eben auf "CharacteristicValue2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val2_restr_by_pattern = 10001;</code>
     */
    public function setCharacVal2RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->charac_val2_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * ID eines Besuchers, der im Zeitraum "ValidFrom" bis "ValidTo" der Person "PersonID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10002;</code>
     */
    public function getVisitorId()
    {
        return $this->visitor_id;
    }

    /**
     * <pre>
     * ID eines Besuchers, der im Zeitraum "ValidFrom" bis "ValidTo" der Person "PersonID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue visitor_id = 10002;</code>
     */
    public function setVisitorId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->visitor_id = $var;
    }

    /**
     * <pre>
     * ID einer Person, die im Zeitraum "ValidFrom" bis "ValidTo" dem Besucher "VisitorID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID einer Person, die im Zeitraum "ValidFrom" bis "ValidTo" dem Besucher "VisitorID" zugeordnet war (bzw. immer noch ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10003;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Ende des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115". "NULL" bedeutet, daß die Zuordnung aktuell noch gültig ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_to = 10004;</code>
     */
    public function getValidTo()
    {
        return $this->valid_to;
    }

    /**
     * <pre>
     * Ende des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115". "NULL" bedeutet, daß die Zuordnung aktuell noch gültig ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_to = 10004;</code>
     */
    public function setValidTo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->valid_to = $var;
    }

    /**
     * <pre>
     * Beginn des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115"
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_from = 10005;</code>
     */
    public function getValidFrom()
    {
        return $this->valid_from;
    }

    /**
     * <pre>
     * Beginn des Zeitraums, in dem die Zuordnung "VisitorID"-"PersonID" bestand (bzw. evtl. noch besteht) als "String" im Format "01.04.2001 15:20:55:115"
     * </pre>
     *
     * <code>.dstore.values.StringValue valid_from = 10005;</code>
     */
    public function setValidFrom(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->valid_from = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type = 10006;</code>
     */
    public function getPersonType()
    {
        return $this->person_type;
    }

    /**
     * <pre>
     * Bezeichnung des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type = 10006;</code>
     */
    public function setPersonType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->person_type = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 2. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value2 = 10007;</code>
     */
    public function getCharacteristicValue2()
    {
        return $this->characteristic_value2;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 2. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value2 = 10007;</code>
     */
    public function setCharacteristicValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_value2 = $var;
    }

    /**
     * <pre>
     * Was enthält "CharacteristicValue1" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "CharacteristicValue1" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val1_restr_by_pattern = 10008;</code>
     */
    public function getCharacVal1RestrByPattern()
    {
        return $this->charac_val1_restr_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "CharacteristicValue1" (womögl. wg. Zugriffsbeschr. nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : die LETZTEN n Zeichen("n = 0" =&gt; "CharacteristicValue1" dann "NULL")
     * </pre>
     *
     * <code>.dstore.values.StringValue charac_val1_restr_by_pattern = 10008;</code>
     */
    public function setCharacVal1RestrByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->charac_val1_restr_by_pattern = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value1 = 10009;</code>
     */
    public function getCharacteristicValue1()
    {
        return $this->characteristic_value1;
    }

    /**
     * <pre>
     * Eigenschaft von "PersonID" zum 1. Merkmal, das in "PersonTypeSettings" (zum entspr. Personentyp) zum Schlüssel "PersonCharacteristicIDsGrantedByUniqueID" konfig. ist (u. nicht für den Aufrufer kompl. lesend gesperrt ist, s. "pm_GetPChAccRestrForUsers_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_value1 = 10009;</code>
     */
    public function setCharacteristicValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_value1 = $var;
    }

    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10010;</code>
     */
    public function getPersonTypeId()
    {
        return $this->person_type_id;
    }

    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 10010;</code>
     */
    public function setPersonTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_type_id = $var;
    }

}

