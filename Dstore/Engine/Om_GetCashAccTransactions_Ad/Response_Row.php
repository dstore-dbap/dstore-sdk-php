<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetCashAccTransactions_Ad.proto

namespace Dstore\Engine\Om_GetCashAccTransactions_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetCashAccTransactions_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung des Transaktionstyps "TransactionTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_type = 10001;</code>
     */
    private $transaction_type = null;
    /**
     * <pre>
     * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Zeitpunkt der Transaktion
     * </pre>
     *
     * <code>.dstore.values.TimestampValue transaction_date_and_time = 10003;</code>
     */
    private $transaction_date_and_time = null;
    /**
     * <pre>
     * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue transaction_value = 10004;</code>
     */
    private $transaction_value = null;
    /**
     * <pre>
     * Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_comment = 10005;</code>
     */
    private $transaction_comment = null;
    /**
     * <pre>
     * ID des Transaktionstyps zu der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_type_id = 10006;</code>
     */
    private $transaction_type_id = null;
    /**
     * <pre>
     * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue cash_account_type_id = 10007;</code>
     */
    private $cash_account_type_id = null;
    /**
     * <pre>
     * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue suspended_until = 10008;</code>
     */
    private $suspended_until = null;
    /**
     * <pre>
     * ID einer Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10009;</code>
     */
    private $transaction_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetCashAccTransactionsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Transaktionstyps "TransactionTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_type = 10001;</code>
     */
    public function getTransactionType()
    {
        return $this->transaction_type;
    }

    /**
     * <pre>
     * Bezeichnung des Transaktionstyps "TransactionTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_type = 10001;</code>
     */
    public function setTransactionType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->transaction_type = $var;
    }

    /**
     * <pre>
     * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID der Person, der das Konto zugewiesen ist (also z.Zt. immer "&#64;PersonID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Zeitpunkt der Transaktion
     * </pre>
     *
     * <code>.dstore.values.TimestampValue transaction_date_and_time = 10003;</code>
     */
    public function getTransactionDateAndTime()
    {
        return $this->transaction_date_and_time;
    }

    /**
     * <pre>
     * Zeitpunkt der Transaktion
     * </pre>
     *
     * <code>.dstore.values.TimestampValue transaction_date_and_time = 10003;</code>
     */
    public function setTransactionDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->transaction_date_and_time = $var;
    }

    /**
     * <pre>
     * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue transaction_value = 10004;</code>
     */
    public function getTransactionValue()
    {
        return $this->transaction_value;
    }

    /**
     * <pre>
     * Wert der Transaktion (positiver Wert : "Zubuchung", sonst "Abbuchung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue transaction_value = 10004;</code>
     */
    public function setTransactionValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->transaction_value = $var;
    }

    /**
     * <pre>
     * Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_comment = 10005;</code>
     */
    public function getTransactionComment()
    {
        return $this->transaction_comment;
    }

    /**
     * <pre>
     * Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_comment = 10005;</code>
     */
    public function setTransactionComment(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->transaction_comment = $var;
    }

    /**
     * <pre>
     * ID des Transaktionstyps zu der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_type_id = 10006;</code>
     */
    public function getTransactionTypeId()
    {
        return $this->transaction_type_id;
    }

    /**
     * <pre>
     * ID des Transaktionstyps zu der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_type_id = 10006;</code>
     */
    public function setTransactionTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->transaction_type_id = $var;
    }

    /**
     * <pre>
     * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue cash_account_type_id = 10007;</code>
     */
    public function getCashAccountTypeId()
    {
        return $this->cash_account_type_id;
    }

    /**
     * <pre>
     * ID des Kontotyps (also z.Zt. immer "&#64;CashAccountTypeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue cash_account_type_id = 10007;</code>
     */
    public function setCashAccountTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->cash_account_type_id = $var;
    }

    /**
     * <pre>
     * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue suspended_until = 10008;</code>
     */
    public function getSuspendedUntil()
    {
        return $this->suspended_until;
    }

    /**
     * <pre>
     * Kann "NULL" sein. Steht hier ein Datum, bedeutet dies, dass die Transaktion bis zu diesem Zeitpunkt als "vorgemerkt" aber noch nicht "gebucht" gilt. Liegt das Datum in der Zukunft, ist die Transaktion noch NICHT im aktuellen Kontostand berücksichtigt.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue suspended_until = 10008;</code>
     */
    public function setSuspendedUntil(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->suspended_until = $var;
    }

    /**
     * <pre>
     * ID einer Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10009;</code>
     */
    public function getTransactionId()
    {
        return $this->transaction_id;
    }

    /**
     * <pre>
     * ID einer Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10009;</code>
     */
    public function setTransactionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->transaction_id = $var;
    }

}

