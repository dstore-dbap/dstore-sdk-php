<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/do_GetProcedureDocu_Ad.proto

namespace Dstore\Engine\Do_GetProcedureDocu_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.do_GetProcedureDocu_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Version, auf die sich die Dokumentation "Documentation" bezieht. Die Dokumentation ist natürlich im Regelfall noch für spätere Versionen gültig - solange jedenfalls bis es eine separate Dokumentation für eine höhere Version gibt...
     * </pre>
     *
     * <code>.dstore.values.StringValue dstore_version = 10001;</code>
     */
    private $dstore_version = null;
    /**
     * <pre>
     * Beschreibung, wozu die Prozedur "ProcedureName" dient, sowie evtl. einige Hinweise und Anmerkungen. Im Fall "&#64;GetProcedureHeader = 1" steht hier die "interne Beschreibung" (kompletter "Prozedur-Kopf" des Quelltextes)
     * </pre>
     *
     * <code>.dstore.values.StringValue documentation = 10002;</code>
     */
    private $documentation = null;
    /**
     * <pre>
     * Wann "Documentation" (in der Version "dStoreVersion") zuletzt geändert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10003;</code>
     */
    private $last_edited = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\DoGetProcedureDocuAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Version, auf die sich die Dokumentation "Documentation" bezieht. Die Dokumentation ist natürlich im Regelfall noch für spätere Versionen gültig - solange jedenfalls bis es eine separate Dokumentation für eine höhere Version gibt...
     * </pre>
     *
     * <code>.dstore.values.StringValue dstore_version = 10001;</code>
     */
    public function getDstoreVersion()
    {
        return $this->dstore_version;
    }

    /**
     * <pre>
     * Version, auf die sich die Dokumentation "Documentation" bezieht. Die Dokumentation ist natürlich im Regelfall noch für spätere Versionen gültig - solange jedenfalls bis es eine separate Dokumentation für eine höhere Version gibt...
     * </pre>
     *
     * <code>.dstore.values.StringValue dstore_version = 10001;</code>
     */
    public function setDstoreVersion(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->dstore_version = $var;
    }

    /**
     * <pre>
     * Beschreibung, wozu die Prozedur "ProcedureName" dient, sowie evtl. einige Hinweise und Anmerkungen. Im Fall "&#64;GetProcedureHeader = 1" steht hier die "interne Beschreibung" (kompletter "Prozedur-Kopf" des Quelltextes)
     * </pre>
     *
     * <code>.dstore.values.StringValue documentation = 10002;</code>
     */
    public function getDocumentation()
    {
        return $this->documentation;
    }

    /**
     * <pre>
     * Beschreibung, wozu die Prozedur "ProcedureName" dient, sowie evtl. einige Hinweise und Anmerkungen. Im Fall "&#64;GetProcedureHeader = 1" steht hier die "interne Beschreibung" (kompletter "Prozedur-Kopf" des Quelltextes)
     * </pre>
     *
     * <code>.dstore.values.StringValue documentation = 10002;</code>
     */
    public function setDocumentation(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->documentation = $var;
    }

    /**
     * <pre>
     * Wann "Documentation" (in der Version "dStoreVersion") zuletzt geändert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10003;</code>
     */
    public function getLastEdited()
    {
        return $this->last_edited;
    }

    /**
     * <pre>
     * Wann "Documentation" (in der Version "dStoreVersion") zuletzt geändert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10003;</code>
     */
    public function setLastEdited(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_edited = $var;
    }

}

