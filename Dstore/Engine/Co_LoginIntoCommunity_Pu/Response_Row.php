<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/co_LoginIntoCommunity_Pu.proto

namespace Dstore\Engine\Co_LoginIntoCommunity_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.co_LoginIntoCommunity_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID des identifizierten Community-Mitglieds. Kann "NULL" sein, wenn es einen Fehler gab. Genauso kann hier aber auch ein Wert zurückgegeben werden, OBWOHL nicht alle Identifizierungsdaten (z.B. ein "Paßwort") richtig sind !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    private $community_member_id = null;
    /**
     * <pre>
     * "0", falls der Login-Vorgang erfolgreich war, ansonsten ein entsprechender Fehler-Code (z.B. wenn die Identifizierung fehlgeschlagen ist oder der "sweeper" nicht gestartet ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10002;</code>
     */
    private $error_code = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\CoLoginIntoCommunityPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID des identifizierten Community-Mitglieds. Kann "NULL" sein, wenn es einen Fehler gab. Genauso kann hier aber auch ein Wert zurückgegeben werden, OBWOHL nicht alle Identifizierungsdaten (z.B. ein "Paßwort") richtig sind !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    public function getCommunityMemberId()
    {
        return $this->community_member_id;
    }

    /**
     * <pre>
     * ID des identifizierten Community-Mitglieds. Kann "NULL" sein, wenn es einen Fehler gab. Genauso kann hier aber auch ein Wert zurückgegeben werden, OBWOHL nicht alle Identifizierungsdaten (z.B. ein "Paßwort") richtig sind !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_member_id = 10001;</code>
     */
    public function setCommunityMemberId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->community_member_id = $var;
    }

    /**
     * <pre>
     * "0", falls der Login-Vorgang erfolgreich war, ansonsten ein entsprechender Fehler-Code (z.B. wenn die Identifizierung fehlgeschlagen ist oder der "sweeper" nicht gestartet ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10002;</code>
     */
    public function getErrorCode()
    {
        return $this->error_code;
    }

    /**
     * <pre>
     * "0", falls der Login-Vorgang erfolgreich war, ansonsten ein entsprechender Fehler-Code (z.B. wenn die Identifizierung fehlgeschlagen ist oder der "sweeper" nicht gestartet ist)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue error_code = 10002;</code>
     */
    public function setErrorCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->error_code = $var;
    }

}

