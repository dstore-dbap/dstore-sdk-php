<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_CustomerWhoBoughtAlsoBought.proto

namespace Dstore\Engine\Om_CustomerWhoBoughtAlsoBought;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_CustomerWhoBoughtAlsoBought.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Product"
     * </pre>
     *
     * <code>.dstore.values.StringValue category = 10001;</code>
     */
    private $category = null;
    /**
     * <pre>
     * Wie oft wurde der Artikel "NodeID" bestellt (nicht : wieVIEL wurde von dem Artikel bestellt !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue counter = 10002;</code>
     */
    private $counter = null;
    /**
     * <pre>
     * ID eines Artikel-Elementes, das Kunden bestellt haben, die den Artikel "&#64;VariantOrItemNo" gekauft haben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10004;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue product = 10005;</code>
     */
    private $product = null;
    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Category"
     * </pre>
     *
     * <code>.dstore.values.StringValue domain = 10006;</code>
     */
    private $domain = null;
    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Category") von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue category_tree_node_id = 20001;</code>
     */
    private $category_tree_node_id = null;
    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20002;</code>
     */
    private $active = null;
    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 20005;</code>
     */
    private $level_no = null;
    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Domain") von "CategoryTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue domain_tree_node_id = 20006;</code>
     */
    private $domain_tree_node_id = null;
    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (entweder Produkt oder Variante)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 20011;</code>
     */
    private $level_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmCustomerWhoBoughtAlsoBought::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Product"
     * </pre>
     *
     * <code>.dstore.values.StringValue category = 10001;</code>
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Product"
     * </pre>
     *
     * <code>.dstore.values.StringValue category = 10001;</code>
     */
    public function setCategory(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->category = $var;
    }

    /**
     * <pre>
     * Wie oft wurde der Artikel "NodeID" bestellt (nicht : wieVIEL wurde von dem Artikel bestellt !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue counter = 10002;</code>
     */
    public function getCounter()
    {
        return $this->counter;
    }

    /**
     * <pre>
     * Wie oft wurde der Artikel "NodeID" bestellt (nicht : wieVIEL wurde von dem Artikel bestellt !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue counter = 10002;</code>
     */
    public function setCounter(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->counter = $var;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, das Kunden bestellt haben, die den Artikel "&#64;VariantOrItemNo" gekauft haben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, das Kunden bestellt haben, die den Artikel "&#64;VariantOrItemNo" gekauft haben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10004;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, das "NodeID" als Artikel-Element zugewiesen hat
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10004;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue product = 10005;</code>
     */
    public function getProduct()
    {
        return $this->product;
    }

    /**
     * <pre>
     * Bezeichnung des Artikel-Elementes "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue product = 10005;</code>
     */
    public function setProduct(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->product = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Category"
     * </pre>
     *
     * <code>.dstore.values.StringValue domain = 10006;</code>
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * <pre>
     * Bezeichnung des Vorgänger-Elementes von "Category"
     * </pre>
     *
     * <code>.dstore.values.StringValue domain = 10006;</code>
     */
    public function setDomain(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->domain = $var;
    }

    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Category") von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue category_tree_node_id = 20001;</code>
     */
    public function getCategoryTreeNodeId()
    {
        return $this->category_tree_node_id;
    }

    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Category") von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue category_tree_node_id = 20001;</code>
     */
    public function setCategoryTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->category_tree_node_id = $var;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20002;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20002;</code>
     */
    public function setActive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->active = $var;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 20005;</code>
     */
    public function getLevelNo()
    {
        return $this->level_no;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 20005;</code>
     */
    public function setLevelNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_no = $var;
    }

    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Domain") von "CategoryTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue domain_tree_node_id = 20006;</code>
     */
    public function getDomainTreeNodeId()
    {
        return $this->domain_tree_node_id;
    }

    /**
     * <pre>
     * ID des Vorgänger-Elementes (mit der Bezeichnung "Domain") von "CategoryTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue domain_tree_node_id = 20006;</code>
     */
    public function setDomainTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->domain_tree_node_id = $var;
    }

    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (entweder Produkt oder Variante)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 20011;</code>
     */
    public function getLevelId()
    {
        return $this->level_id;
    }

    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (entweder Produkt oder Variante)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 20011;</code>
     */
    public function setLevelId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_id = $var;
    }

}

