<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_GetBinaryCodeIDsForNode_Pu.proto

namespace Dstore\Engine\Im_GetBinaryCodeIDsForNode_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_GetBinaryCodeIDsForNode_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines "Binaries", das dem Element "&#64;TreeNodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    private $binary_code_id = null;
    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Elementes im Artikelbaum (da es prinzipiell möglich ist, daß es zu einer "NodeID" MEHRERE "TreeNodeID"s gibt, steht hier im Fall "&#64;IsNodeID = 1" die KLEINSTE zur "NodeID" gehörige "TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10002;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Artikel-Elementes (falls "&#64;IsNodeID = 1" ist, steht hier natürlich immer die übergebene "&#64;TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID der Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID". Sofern auch "&#64;BinaryPropertyValueID" angegeben wurde, steht hier der Wert dieses Parameters.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_property_value_id = 20001;</code>
     */
    private $binary_property_value_id = null;
    /**
     * <pre>
     * Die Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_property_value = 20005;</code>
     */
    private $binary_property_value = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImGetBinaryCodeIDsForNodePu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines "Binaries", das dem Element "&#64;TreeNodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    public function getBinaryCodeId()
    {
        return $this->binary_code_id;
    }

    /**
     * <pre>
     * ID eines "Binaries", das dem Element "&#64;TreeNodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_code_id = 10001;</code>
     */
    public function setBinaryCodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_code_id = $var;
    }

    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Elementes im Artikelbaum (da es prinzipiell möglich ist, daß es zu einer "NodeID" MEHRERE "TreeNodeID"s gibt, steht hier im Fall "&#64;IsNodeID = 1" die KLEINSTE zur "NodeID" gehörige "TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10002;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Elementes im Artikelbaum (da es prinzipiell möglich ist, daß es zu einer "NodeID" MEHRERE "TreeNodeID"s gibt, steht hier im Fall "&#64;IsNodeID = 1" die KLEINSTE zur "NodeID" gehörige "TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10002;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Artikel-Elementes (falls "&#64;IsNodeID = 1" ist, steht hier natürlich immer die übergebene "&#64;TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID des zum übergebenen Element zugehörigen Artikel-Elementes (falls "&#64;IsNodeID = 1" ist, steht hier natürlich immer die übergebene "&#64;TreeNodeID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10003;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID der Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID". Sofern auch "&#64;BinaryPropertyValueID" angegeben wurde, steht hier der Wert dieses Parameters.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_property_value_id = 20001;</code>
     */
    public function getBinaryPropertyValueId()
    {
        return $this->binary_property_value_id;
    }

    /**
     * <pre>
     * ID der Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID". Sofern auch "&#64;BinaryPropertyValueID" angegeben wurde, steht hier der Wert dieses Parameters.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_property_value_id = 20001;</code>
     */
    public function setBinaryPropertyValueId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_property_value_id = $var;
    }

    /**
     * <pre>
     * Die Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_property_value = 20005;</code>
     */
    public function getBinaryPropertyValue()
    {
        return $this->binary_property_value;
    }

    /**
     * <pre>
     * Die Eigenschaft der "BinaryCodeID" zum Merkmal "&#64;BinaryCharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_property_value = 20005;</code>
     */
    public function setBinaryPropertyValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_property_value = $var;
    }

}

