<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetCampPersonGroupConds_Ad.proto

namespace Dstore\Engine\Om_GetCampPersonGroupConds_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetCampPersonGroupConds_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Liste von (existierenden) "GroupID"s (mögliche Werte : s. "pm_GetGroups_Ad"), die durch "," getrennt sind
     * </pre>
     *
     * <code>.dstore.values.StringValue filter_by_person_group_ids = 10001;</code>
     */
    private $filter_by_person_group_ids = null;
    /**
     * <pre>
     * Gibt an, ob der Auftraggeber MINDESTENS ("1") einer der Gruppen (in "FilterByPersonGroupIDs") zugeordnet sein muß oder ALLEN ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue any_id_in_filter = 10002;</code>
     */
    private $any_id_in_filter = null;
    /**
     * <pre>
     * ID einer "Personengruppen-Bedingung" (derzeit natürlich immer identisch mit "&#64;ConditionID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10003;</code>
     */
    private $condition_id = null;
    /**
     * <pre>
     * "1" bedeutet eine Negierung der Bedingung, d.h. der Auftraggeber darf entweder KEINER der Gruppen ("AnyIDInFilter = 1") oder er darf NICHT ALLEN Gruppen ("AnyIDInFilter = 0") zugeordnet sein
     * </pre>
     *
     * <code>.dstore.values.BooleanValue negate_filter = 10004;</code>
     */
    private $negate_filter = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetCampPersonGroupCondsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Liste von (existierenden) "GroupID"s (mögliche Werte : s. "pm_GetGroups_Ad"), die durch "," getrennt sind
     * </pre>
     *
     * <code>.dstore.values.StringValue filter_by_person_group_ids = 10001;</code>
     */
    public function getFilterByPersonGroupIds()
    {
        return $this->filter_by_person_group_ids;
    }

    /**
     * <pre>
     * Liste von (existierenden) "GroupID"s (mögliche Werte : s. "pm_GetGroups_Ad"), die durch "," getrennt sind
     * </pre>
     *
     * <code>.dstore.values.StringValue filter_by_person_group_ids = 10001;</code>
     */
    public function setFilterByPersonGroupIds(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->filter_by_person_group_ids = $var;
    }

    /**
     * <pre>
     * Gibt an, ob der Auftraggeber MINDESTENS ("1") einer der Gruppen (in "FilterByPersonGroupIDs") zugeordnet sein muß oder ALLEN ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue any_id_in_filter = 10002;</code>
     */
    public function getAnyIdInFilter()
    {
        return $this->any_id_in_filter;
    }

    /**
     * <pre>
     * Gibt an, ob der Auftraggeber MINDESTENS ("1") einer der Gruppen (in "FilterByPersonGroupIDs") zugeordnet sein muß oder ALLEN ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue any_id_in_filter = 10002;</code>
     */
    public function setAnyIdInFilter(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->any_id_in_filter = $var;
    }

    /**
     * <pre>
     * ID einer "Personengruppen-Bedingung" (derzeit natürlich immer identisch mit "&#64;ConditionID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10003;</code>
     */
    public function getConditionId()
    {
        return $this->condition_id;
    }

    /**
     * <pre>
     * ID einer "Personengruppen-Bedingung" (derzeit natürlich immer identisch mit "&#64;ConditionID")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10003;</code>
     */
    public function setConditionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->condition_id = $var;
    }

    /**
     * <pre>
     * "1" bedeutet eine Negierung der Bedingung, d.h. der Auftraggeber darf entweder KEINER der Gruppen ("AnyIDInFilter = 1") oder er darf NICHT ALLEN Gruppen ("AnyIDInFilter = 0") zugeordnet sein
     * </pre>
     *
     * <code>.dstore.values.BooleanValue negate_filter = 10004;</code>
     */
    public function getNegateFilter()
    {
        return $this->negate_filter;
    }

    /**
     * <pre>
     * "1" bedeutet eine Negierung der Bedingung, d.h. der Auftraggeber darf entweder KEINER der Gruppen ("AnyIDInFilter = 1") oder er darf NICHT ALLEN Gruppen ("AnyIDInFilter = 0") zugeordnet sein
     * </pre>
     *
     * <code>.dstore.values.BooleanValue negate_filter = 10004;</code>
     */
    public function setNegateFilter(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->negate_filter = $var;
    }

}

