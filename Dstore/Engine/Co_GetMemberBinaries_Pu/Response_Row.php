<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/co_GetMemberBinaries_Pu.proto

namespace Dstore\Engine\Co_GetMemberBinaries_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.co_GetMemberBinaries_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    private $value1_restricted_by_pattern = null;
    /**
     * <pre>
     * ID eines "Binaries" aus der Kategorie "&#64;CommunityBinaryCategoryID", das dem Mitglied "&#64;CommunityMemberID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10002;</code>
     */
    private $binary_id = null;
    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10003;</code>
     */
    private $value2_restricted_by_pattern = null;
    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10004;</code>
     */
    private $binary_description = null;
    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10005;</code>
     */
    private $input_date_and_time = null;
    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10006;</code>
     */
    private $content_type = null;
    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10007;</code>
     */
    private $value3 = null;
    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10008;</code>
     */
    private $file_date_and_time = null;
    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10009;</code>
     */
    private $value1 = null;
    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10010;</code>
     */
    private $filesize_in_k_b = null;
    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10011;</code>
     */
    private $value2 = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge des Binärobjektes "BinaryID" innerhalb aller "Binaries", die dem Mitglied "&#64;CommunityMemberID" in der Kategorie zugeordnet sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10012;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * ID eines Community-Mitglieds, von dem die "BinaryID" ursprünglich ist (im Regelfall "&#64;CommunityMemberID" selbst)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_community_member_id = 10013;</code>
     */
    private $from_community_member_id = null;
    /**
     * <pre>
     * Wieviel KiloBytes werden "&#64;CommunityMemberID" auf seine Quota angerechnet ? Dieser Wert entspricht "FilesizeInKB", wenn "FromCommunityMemberID = &#64;CommunityMemberID" ist, ansonsten wird "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10014;</code>
     */
    private $quoted_file_size_in_k_b = null;
    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10015;</code>
     */
    private $m_d5_hash = null;
    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10016;</code>
     */
    private $value3_restricted_by_pattern = null;
    /**
     * <pre>
     * "InputDateAndTime" als String (Format "15.04.2001 20:56:39")
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10017;</code>
     */
    private $input_date_and_time_char = null;
    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10018;</code>
     */
    private $nickname = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\CoGetMemberBinariesPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    public function getValue1RestrictedByPattern()
    {
        return $this->value1_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    public function setValue1RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * ID eines "Binaries" aus der Kategorie "&#64;CommunityBinaryCategoryID", das dem Mitglied "&#64;CommunityMemberID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10002;</code>
     */
    public function getBinaryId()
    {
        return $this->binary_id;
    }

    /**
     * <pre>
     * ID eines "Binaries" aus der Kategorie "&#64;CommunityBinaryCategoryID", das dem Mitglied "&#64;CommunityMemberID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10002;</code>
     */
    public function setBinaryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_id = $var;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10003;</code>
     */
    public function getValue2RestrictedByPattern()
    {
        return $this->value2_restricted_by_pattern;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10003;</code>
     */
    public function setValue2RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10004;</code>
     */
    public function getBinaryDescription()
    {
        return $this->binary_description;
    }

    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10004;</code>
     */
    public function setBinaryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_description = $var;
    }

    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10005;</code>
     */
    public function getInputDateAndTime()
    {
        return $this->input_date_and_time;
    }

    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10005;</code>
     */
    public function setInputDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->input_date_and_time = $var;
    }

    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10006;</code>
     */
    public function getContentType()
    {
        return $this->content_type;
    }

    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10006;</code>
     */
    public function setContentType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->content_type = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10007;</code>
     */
    public function getValue3()
    {
        return $this->value3;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10007;</code>
     */
    public function setValue3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3 = $var;
    }

    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10008;</code>
     */
    public function getFileDateAndTime()
    {
        return $this->file_date_and_time;
    }

    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10008;</code>
     */
    public function setFileDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->file_date_and_time = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10009;</code>
     */
    public function getValue1()
    {
        return $this->value1;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10009;</code>
     */
    public function setValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1 = $var;
    }

    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10010;</code>
     */
    public function getFilesizeInKB()
    {
        return $this->filesize_in_k_b;
    }

    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10010;</code>
     */
    public function setFilesizeInKB(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->filesize_in_k_b = $var;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10011;</code>
     */
    public function getValue2()
    {
        return $this->value2;
    }

    /**
     * <pre>
     * Eigenschaft des Mitglieds "FromCommunityMemberID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10011;</code>
     */
    public function setValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2 = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge des Binärobjektes "BinaryID" innerhalb aller "Binaries", die dem Mitglied "&#64;CommunityMemberID" in der Kategorie zugeordnet sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10012;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge des Binärobjektes "BinaryID" innerhalb aller "Binaries", die dem Mitglied "&#64;CommunityMemberID" in der Kategorie zugeordnet sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10012;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * ID eines Community-Mitglieds, von dem die "BinaryID" ursprünglich ist (im Regelfall "&#64;CommunityMemberID" selbst)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_community_member_id = 10013;</code>
     */
    public function getFromCommunityMemberId()
    {
        return $this->from_community_member_id;
    }

    /**
     * <pre>
     * ID eines Community-Mitglieds, von dem die "BinaryID" ursprünglich ist (im Regelfall "&#64;CommunityMemberID" selbst)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_community_member_id = 10013;</code>
     */
    public function setFromCommunityMemberId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->from_community_member_id = $var;
    }

    /**
     * <pre>
     * Wieviel KiloBytes werden "&#64;CommunityMemberID" auf seine Quota angerechnet ? Dieser Wert entspricht "FilesizeInKB", wenn "FromCommunityMemberID = &#64;CommunityMemberID" ist, ansonsten wird "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10014;</code>
     */
    public function getQuotedFileSizeInKB()
    {
        return $this->quoted_file_size_in_k_b;
    }

    /**
     * <pre>
     * Wieviel KiloBytes werden "&#64;CommunityMemberID" auf seine Quota angerechnet ? Dieser Wert entspricht "FilesizeInKB", wenn "FromCommunityMemberID = &#64;CommunityMemberID" ist, ansonsten wird "0" zurückgegeben.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10014;</code>
     */
    public function setQuotedFileSizeInKB(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quoted_file_size_in_k_b = $var;
    }

    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10015;</code>
     */
    public function getMD5Hash()
    {
        return $this->m_d5_hash;
    }

    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10015;</code>
     */
    public function setMD5Hash(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->m_d5_hash = $var;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10016;</code>
     */
    public function getValue3RestrictedByPattern()
    {
        return $this->value3_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10016;</code>
     */
    public function setValue3RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * "InputDateAndTime" als String (Format "15.04.2001 20:56:39")
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10017;</code>
     */
    public function getInputDateAndTimeChar()
    {
        return $this->input_date_and_time_char;
    }

    /**
     * <pre>
     * "InputDateAndTime" als String (Format "15.04.2001 20:56:39")
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10017;</code>
     */
    public function setInputDateAndTimeChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->input_date_and_time_char = $var;
    }

    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10018;</code>
     */
    public function getNickname()
    {
        return $this->nickname;
    }

    /**
     * <pre>
     * Eigenschaft zu dem Merkmal, anhand dessen die Communitymitglieder sich untereinander unterscheiden bzw. erkennen können. (Eintrag in "CommunitySettings" zum Schlüssel "IdentifyingCharacteristicID")
     * </pre>
     *
     * <code>.dstore.values.StringValue nickname = 10018;</code>
     */
    public function setNickname(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->nickname = $var;
    }

}

