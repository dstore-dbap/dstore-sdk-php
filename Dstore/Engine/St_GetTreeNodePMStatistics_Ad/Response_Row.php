<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/st_GetTreeNodePMStatistics_Ad.proto

namespace Dstore\Engine\St_GetTreeNodePMStatistics_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.st_GetTreeNodePMStatistics_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Ein Monat im Jahr "Year", der im gewünschten Zeitraum liegt. Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue month = 10001;</code>
     */
    private $month = null;
    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value = 10002;</code>
     */
    private $total_value = null;
    /**
     * <pre>
     * Ein Jahr zu dem der Monat "Month" gehört (und das im gewünschten Zeitraum liegt). Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue year = 10003;</code>
     */
    private $year = null;
    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10004;</code>
     */
    private $h_tree_node_id = null;
    /**
     * <pre>
     * Summe der DIREKTEN Einträge für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value = 10005;</code>
     */
    private $direct_value = null;
    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10006;</code>
     */
    private $basic_characteristic_number = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\StGetTreeNodePMStatisticsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Ein Monat im Jahr "Year", der im gewünschten Zeitraum liegt. Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue month = 10001;</code>
     */
    public function getMonth()
    {
        return $this->month;
    }

    /**
     * <pre>
     * Ein Monat im Jahr "Year", der im gewünschten Zeitraum liegt. Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue month = 10001;</code>
     */
    public function setMonth(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->month = $var;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value = 10002;</code>
     */
    public function getTotalValue()
    {
        return $this->total_value;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value = 10002;</code>
     */
    public function setTotalValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value = $var;
    }

    /**
     * <pre>
     * Ein Jahr zu dem der Monat "Month" gehört (und das im gewünschten Zeitraum liegt). Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue year = 10003;</code>
     */
    public function getYear()
    {
        return $this->year;
    }

    /**
     * <pre>
     * Ein Jahr zu dem der Monat "Month" gehört (und das im gewünschten Zeitraum liegt). Immer "NULL", falls "&#64;SummarizeMonths = 1" angegeben wurde.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue year = 10003;</code>
     */
    public function setYear(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->year = $var;
    }

    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10004;</code>
     */
    public function getHTreeNodeId()
    {
        return $this->h_tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10004;</code>
     */
    public function setHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->h_tree_node_id = $var;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value = 10005;</code>
     */
    public function getDirectValue()
    {
        return $this->direct_value;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge für das Element "HTreeNodeID" zur Basis-Kennzahl "BasicCharacteristicNumber" des Tages "Date"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value = 10005;</code>
     */
    public function setDirectValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->direct_value = $var;
    }

    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10006;</code>
     */
    public function getBasicCharacteristicNumber()
    {
        return $this->basic_characteristic_number;
    }

    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10006;</code>
     */
    public function setBasicCharacteristicNumber(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->basic_characteristic_number = $var;
    }

}

