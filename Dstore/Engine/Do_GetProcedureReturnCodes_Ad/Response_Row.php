<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/do_GetProcedureReturnCodes_Ad.proto

namespace Dstore\Engine\Do_GetProcedureReturnCodes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.do_GetProcedureReturnCodes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Ein "dStore"-Return-Code, der von der Prozedur "ProcedureName" bei der Ausführung zurückgegeben werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code = 10001;</code>
     */
    private $return_code = null;
    /**
     * <pre>
     * Kurze Erläuterung der Bedeutung des "ReturnCode"s
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    private $description = null;
    /**
     * <pre>
     * Der "ReturnCode" kann..."0" : ...direkt in der Prozedur auftreten"1" : ...nur durch eine intern aufgerufene Prozedur auftreten"2" : ...sowohl von der Prozedur selbst als auch von einer intern aufgerufenen Prozedur zurückgegeben werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code_occurence = 10003;</code>
     */
    private $return_code_occurence = null;
    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    private $procedure_name = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\DoGetProcedureReturnCodesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Ein "dStore"-Return-Code, der von der Prozedur "ProcedureName" bei der Ausführung zurückgegeben werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code = 10001;</code>
     */
    public function getReturnCode()
    {
        return $this->return_code;
    }

    /**
     * <pre>
     * Ein "dStore"-Return-Code, der von der Prozedur "ProcedureName" bei der Ausführung zurückgegeben werden kann
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code = 10001;</code>
     */
    public function setReturnCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->return_code = $var;
    }

    /**
     * <pre>
     * Kurze Erläuterung der Bedeutung des "ReturnCode"s
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * Kurze Erläuterung der Bedeutung des "ReturnCode"s
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    public function setDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->description = $var;
    }

    /**
     * <pre>
     * Der "ReturnCode" kann..."0" : ...direkt in der Prozedur auftreten"1" : ...nur durch eine intern aufgerufene Prozedur auftreten"2" : ...sowohl von der Prozedur selbst als auch von einer intern aufgerufenen Prozedur zurückgegeben werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code_occurence = 10003;</code>
     */
    public function getReturnCodeOccurence()
    {
        return $this->return_code_occurence;
    }

    /**
     * <pre>
     * Der "ReturnCode" kann..."0" : ...direkt in der Prozedur auftreten"1" : ...nur durch eine intern aufgerufene Prozedur auftreten"2" : ...sowohl von der Prozedur selbst als auch von einer intern aufgerufenen Prozedur zurückgegeben werden
     * </pre>
     *
     * <code>.dstore.values.IntegerValue return_code_occurence = 10003;</code>
     */
    public function setReturnCodeOccurence(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->return_code_occurence = $var;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    public function getProcedureName()
    {
        return $this->procedure_name;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10004;</code>
     */
    public function setProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_name = $var;
    }

}

