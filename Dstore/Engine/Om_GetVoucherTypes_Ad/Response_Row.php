<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetVoucherTypes_Ad.proto

namespace Dstore\Engine\Om_GetVoucherTypes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetVoucherTypes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Die Bezeichnung der Herkunftsart "VCodeOriginTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue v_code_origin_type = 10001;</code>
     */
    private $v_code_origin_type = null;
    /**
     * <pre>
     * Zeitpunkt bis zu dem ein Code der Aktion gültig ist (egal wann er generiert wird). Kann "NULL" sein. Ist gleichzeitig "ValidForXDays" auch "NULL", muß bei Generierung eines Codes die Gültigkeitsdauer angegeben werden (s. "om_CreateVoucherCodes_Ad").
     * </pre>
     *
     * <code>.dstore.values.TimestampValue default_valid_until = 10002;</code>
     */
    private $default_valid_until = null;
    /**
     * <pre>
     * Das Pattern, nach welchem Codes zur Aktion erzeugt werden. Immer "NULL", wenn die Herkunftsart "Importiert" ist, ansonsten entweder eine feste Zeichenkette (d.h. es gibt genau EINEN Code) oder eine "Generierungs-Funktion" (z.B. '#randomstr(10)#').
     * </pre>
     *
     * <code>.dstore.values.StringValue generation_pattern = 10003;</code>
     */
    private $generation_pattern = null;
    /**
     * <pre>
     * Anzahl Tage, die ein Code der Aktion ab dem Zeitpunkt seiner Generierung gültig sein soll. Immer "NULL" wenn "DefaultValidUntil" NICHT "NULL" ist. Das sich hieraus ergebende "Gültig bis"-Datum kann bei der Generierung eines Codes überschrieben werden.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue valid_for_x_days = 10004;</code>
     */
    private $valid_for_x_days = null;
    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10005;</code>
     */
    private $voucher_type_id = null;
    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion von einer Person eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Dieser Wert ist immer "&lt;= XTimesUsable", da ein Code nicht öfter von einer Person eingelöst werden kann als er insgesamt einlösbar ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable_per_person = 10006;</code>
     */
    private $x_times_usable_per_person = null;
    /**
     * <pre>
     * Die Bezeichnung der "VoucherTypeID", also praktisch der Name der Aktion
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10007;</code>
     */
    private $voucher_type_description = null;
    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion generell eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Diese Einstellung gilt unabhängig von "XTimesUsablePerPerson" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable = 10008;</code>
     */
    private $x_times_usable = null;
    /**
     * <pre>
     * ID der Herkunftsart zum "VoucherType". Mögliche Werte s. "om_GetVCodeOriginTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue v_code_origin_type_id = 10009;</code>
     */
    private $v_code_origin_type_id = null;
    /**
     * <pre>
     * Gibt an, ob Codes zur Aktion generiert/importiert werden können bzw. noch gültig sind. Mögliche Werte :- "0" : Erstellung und Einlösung möglich- "1" : Einlösung möglich, aber keine Erstellung- "2" : KEINE Erstellung und Einlösung möglich
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_status = 10010;</code>
     */
    private $code_status = null;
    /**
     * <pre>
     * Bezeichnung der Bonus-Art "BenefitTypeID".
     * </pre>
     *
     * <code>.dstore.values.StringValue benefit_type_description = 10011;</code>
     */
    private $benefit_type_description = null;
    /**
     * <pre>
     * ID einer Art von Bonus, die der Kunde bei Einlösung erhält (z.B. "Bonus-Artikel"). Mögliche Werte s. "om_GetBenefitTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_type_id = 10012;</code>
     */
    private $benefit_type_id = null;
    /**
     * <pre>
     * Der Zeitpunkt, an dem zuletzt ein Code der Aktion generiert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_code_created_at = 20010;</code>
     */
    private $last_code_created_at = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetVoucherTypesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Die Bezeichnung der Herkunftsart "VCodeOriginTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue v_code_origin_type = 10001;</code>
     */
    public function getVCodeOriginType()
    {
        return $this->v_code_origin_type;
    }

    /**
     * <pre>
     * Die Bezeichnung der Herkunftsart "VCodeOriginTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue v_code_origin_type = 10001;</code>
     */
    public function setVCodeOriginType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->v_code_origin_type = $var;
    }

    /**
     * <pre>
     * Zeitpunkt bis zu dem ein Code der Aktion gültig ist (egal wann er generiert wird). Kann "NULL" sein. Ist gleichzeitig "ValidForXDays" auch "NULL", muß bei Generierung eines Codes die Gültigkeitsdauer angegeben werden (s. "om_CreateVoucherCodes_Ad").
     * </pre>
     *
     * <code>.dstore.values.TimestampValue default_valid_until = 10002;</code>
     */
    public function getDefaultValidUntil()
    {
        return $this->default_valid_until;
    }

    /**
     * <pre>
     * Zeitpunkt bis zu dem ein Code der Aktion gültig ist (egal wann er generiert wird). Kann "NULL" sein. Ist gleichzeitig "ValidForXDays" auch "NULL", muß bei Generierung eines Codes die Gültigkeitsdauer angegeben werden (s. "om_CreateVoucherCodes_Ad").
     * </pre>
     *
     * <code>.dstore.values.TimestampValue default_valid_until = 10002;</code>
     */
    public function setDefaultValidUntil(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->default_valid_until = $var;
    }

    /**
     * <pre>
     * Das Pattern, nach welchem Codes zur Aktion erzeugt werden. Immer "NULL", wenn die Herkunftsart "Importiert" ist, ansonsten entweder eine feste Zeichenkette (d.h. es gibt genau EINEN Code) oder eine "Generierungs-Funktion" (z.B. '#randomstr(10)#').
     * </pre>
     *
     * <code>.dstore.values.StringValue generation_pattern = 10003;</code>
     */
    public function getGenerationPattern()
    {
        return $this->generation_pattern;
    }

    /**
     * <pre>
     * Das Pattern, nach welchem Codes zur Aktion erzeugt werden. Immer "NULL", wenn die Herkunftsart "Importiert" ist, ansonsten entweder eine feste Zeichenkette (d.h. es gibt genau EINEN Code) oder eine "Generierungs-Funktion" (z.B. '#randomstr(10)#').
     * </pre>
     *
     * <code>.dstore.values.StringValue generation_pattern = 10003;</code>
     */
    public function setGenerationPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->generation_pattern = $var;
    }

    /**
     * <pre>
     * Anzahl Tage, die ein Code der Aktion ab dem Zeitpunkt seiner Generierung gültig sein soll. Immer "NULL" wenn "DefaultValidUntil" NICHT "NULL" ist. Das sich hieraus ergebende "Gültig bis"-Datum kann bei der Generierung eines Codes überschrieben werden.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue valid_for_x_days = 10004;</code>
     */
    public function getValidForXDays()
    {
        return $this->valid_for_x_days;
    }

    /**
     * <pre>
     * Anzahl Tage, die ein Code der Aktion ab dem Zeitpunkt seiner Generierung gültig sein soll. Immer "NULL" wenn "DefaultValidUntil" NICHT "NULL" ist. Das sich hieraus ergebende "Gültig bis"-Datum kann bei der Generierung eines Codes überschrieben werden.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue valid_for_x_days = 10004;</code>
     */
    public function setValidForXDays(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->valid_for_x_days = $var;
    }

    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10005;</code>
     */
    public function getVoucherTypeId()
    {
        return $this->voucher_type_id;
    }

    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10005;</code>
     */
    public function setVoucherTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->voucher_type_id = $var;
    }

    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion von einer Person eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Dieser Wert ist immer "&lt;= XTimesUsable", da ein Code nicht öfter von einer Person eingelöst werden kann als er insgesamt einlösbar ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable_per_person = 10006;</code>
     */
    public function getXTimesUsablePerPerson()
    {
        return $this->x_times_usable_per_person;
    }

    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion von einer Person eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Dieser Wert ist immer "&lt;= XTimesUsable", da ein Code nicht öfter von einer Person eingelöst werden kann als er insgesamt einlösbar ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable_per_person = 10006;</code>
     */
    public function setXTimesUsablePerPerson(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->x_times_usable_per_person = $var;
    }

    /**
     * <pre>
     * Die Bezeichnung der "VoucherTypeID", also praktisch der Name der Aktion
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10007;</code>
     */
    public function getVoucherTypeDescription()
    {
        return $this->voucher_type_description;
    }

    /**
     * <pre>
     * Die Bezeichnung der "VoucherTypeID", also praktisch der Name der Aktion
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10007;</code>
     */
    public function setVoucherTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->voucher_type_description = $var;
    }

    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion generell eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Diese Einstellung gilt unabhängig von "XTimesUsablePerPerson" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable = 10008;</code>
     */
    public function getXTimesUsable()
    {
        return $this->x_times_usable;
    }

    /**
     * <pre>
     * Gibt an, wie oft ein Code der Aktion generell eingelöst werden kann ("NULL" bedeutet "unendlich oft"). Diese Einstellung gilt unabhängig von "XTimesUsablePerPerson" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue x_times_usable = 10008;</code>
     */
    public function setXTimesUsable(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->x_times_usable = $var;
    }

    /**
     * <pre>
     * ID der Herkunftsart zum "VoucherType". Mögliche Werte s. "om_GetVCodeOriginTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue v_code_origin_type_id = 10009;</code>
     */
    public function getVCodeOriginTypeId()
    {
        return $this->v_code_origin_type_id;
    }

    /**
     * <pre>
     * ID der Herkunftsart zum "VoucherType". Mögliche Werte s. "om_GetVCodeOriginTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue v_code_origin_type_id = 10009;</code>
     */
    public function setVCodeOriginTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->v_code_origin_type_id = $var;
    }

    /**
     * <pre>
     * Gibt an, ob Codes zur Aktion generiert/importiert werden können bzw. noch gültig sind. Mögliche Werte :- "0" : Erstellung und Einlösung möglich- "1" : Einlösung möglich, aber keine Erstellung- "2" : KEINE Erstellung und Einlösung möglich
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_status = 10010;</code>
     */
    public function getCodeStatus()
    {
        return $this->code_status;
    }

    /**
     * <pre>
     * Gibt an, ob Codes zur Aktion generiert/importiert werden können bzw. noch gültig sind. Mögliche Werte :- "0" : Erstellung und Einlösung möglich- "1" : Einlösung möglich, aber keine Erstellung- "2" : KEINE Erstellung und Einlösung möglich
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_status = 10010;</code>
     */
    public function setCodeStatus(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->code_status = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Bonus-Art "BenefitTypeID".
     * </pre>
     *
     * <code>.dstore.values.StringValue benefit_type_description = 10011;</code>
     */
    public function getBenefitTypeDescription()
    {
        return $this->benefit_type_description;
    }

    /**
     * <pre>
     * Bezeichnung der Bonus-Art "BenefitTypeID".
     * </pre>
     *
     * <code>.dstore.values.StringValue benefit_type_description = 10011;</code>
     */
    public function setBenefitTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->benefit_type_description = $var;
    }

    /**
     * <pre>
     * ID einer Art von Bonus, die der Kunde bei Einlösung erhält (z.B. "Bonus-Artikel"). Mögliche Werte s. "om_GetBenefitTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_type_id = 10012;</code>
     */
    public function getBenefitTypeId()
    {
        return $this->benefit_type_id;
    }

    /**
     * <pre>
     * ID einer Art von Bonus, die der Kunde bei Einlösung erhält (z.B. "Bonus-Artikel"). Mögliche Werte s. "om_GetBenefitTypes_Ad".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_type_id = 10012;</code>
     */
    public function setBenefitTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->benefit_type_id = $var;
    }

    /**
     * <pre>
     * Der Zeitpunkt, an dem zuletzt ein Code der Aktion generiert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_code_created_at = 20010;</code>
     */
    public function getLastCodeCreatedAt()
    {
        return $this->last_code_created_at;
    }

    /**
     * <pre>
     * Der Zeitpunkt, an dem zuletzt ein Code der Aktion generiert wurde
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_code_created_at = 20010;</code>
     */
    public function setLastCodeCreatedAt(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_code_created_at = $var;
    }

}

