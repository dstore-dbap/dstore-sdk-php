<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetPaymentCost_Pu.proto

namespace Dstore\Engine\Om_GetPaymentCost_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetPaymentCost_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Die zusätzlich anfallenden (Netto-)Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost = 10001;</code>
     */
    private $payment_cost = null;
    /**
     * <pre>
     * Die zusätzlich anfallenden Brutto-Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost_brutto = 10002;</code>
     */
    private $payment_cost_brutto = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetPaymentCostPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Die zusätzlich anfallenden (Netto-)Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost = 10001;</code>
     */
    public function getPaymentCost()
    {
        return $this->payment_cost;
    }

    /**
     * <pre>
     * Die zusätzlich anfallenden (Netto-)Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost = 10001;</code>
     */
    public function setPaymentCost(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->payment_cost = $var;
    }

    /**
     * <pre>
     * Die zusätzlich anfallenden Brutto-Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost_brutto = 10002;</code>
     */
    public function getPaymentCostBrutto()
    {
        return $this->payment_cost_brutto;
    }

    /**
     * <pre>
     * Die zusätzlich anfallenden Brutto-Kosten, wenn "&#64;PaymentTypeID" als Zahlungsart gewählt wird
     * </pre>
     *
     * <code>.dstore.values.DecimalValue payment_cost_brutto = 10002;</code>
     */
    public function setPaymentCostBrutto(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->payment_cost_brutto = $var;
    }

}

