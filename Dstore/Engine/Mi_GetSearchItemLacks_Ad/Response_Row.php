<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetSearchItemLacks_Ad.proto

namespace Dstore\Engine\Mi_GetSearchItemLacks_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetSearchItemLacks_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * So oft wurde "SearchValue" verwendet
     * </pre>
     *
     * <code>.dstore.values.IntegerValue request_counter = 10001;</code>
     */
    private $request_counter = null;
    /**
     * <pre>
     * Ein Suchbegriff, der zu einem leeren Suchergebnis führte
     * </pre>
     *
     * <code>.dstore.values.StringValue search_value = 10002;</code>
     */
    private $search_value = null;
    /**
     * <pre>
     * ID eines Merkmals (zu dem in der durch "&#64;TableID" symbolisierten Tabelle Eigenschaften hinterlegt sind), in dem nach "SearchValue" erfolglos gesucht wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    private $characteristic_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetSearchItemLacksAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * So oft wurde "SearchValue" verwendet
     * </pre>
     *
     * <code>.dstore.values.IntegerValue request_counter = 10001;</code>
     */
    public function getRequestCounter()
    {
        return $this->request_counter;
    }

    /**
     * <pre>
     * So oft wurde "SearchValue" verwendet
     * </pre>
     *
     * <code>.dstore.values.IntegerValue request_counter = 10001;</code>
     */
    public function setRequestCounter(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->request_counter = $var;
    }

    /**
     * <pre>
     * Ein Suchbegriff, der zu einem leeren Suchergebnis führte
     * </pre>
     *
     * <code>.dstore.values.StringValue search_value = 10002;</code>
     */
    public function getSearchValue()
    {
        return $this->search_value;
    }

    /**
     * <pre>
     * Ein Suchbegriff, der zu einem leeren Suchergebnis führte
     * </pre>
     *
     * <code>.dstore.values.StringValue search_value = 10002;</code>
     */
    public function setSearchValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->search_value = $var;
    }

    /**
     * <pre>
     * ID eines Merkmals (zu dem in der durch "&#64;TableID" symbolisierten Tabelle Eigenschaften hinterlegt sind), in dem nach "SearchValue" erfolglos gesucht wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    public function getCharacteristicId()
    {
        return $this->characteristic_id;
    }

    /**
     * <pre>
     * ID eines Merkmals (zu dem in der durch "&#64;TableID" symbolisierten Tabelle Eigenschaften hinterlegt sind), in dem nach "SearchValue" erfolglos gesucht wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10003;</code>
     */
    public function setCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->characteristic_id = $var;
    }

}

