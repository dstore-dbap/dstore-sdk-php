<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_GetModifiedNodes_Ad.proto

namespace Dstore\Engine\Im_GetModifiedNodes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_GetModifiedNodes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung von "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * ID eines gefundenen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen es für "NodeID" ein Element im Artikelbaum gibt, das eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_t_node = 10003;</code>
     */
    private $matched_info_type_ids_t_node = null;
    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen "NodeID" eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_node = 10004;</code>
     */
    private $matched_info_type_ids_node = null;
    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (immer "&#64;LevelID" wenn angegeben)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10005;</code>
     */
    private $level_id = null;
    /**
     * <pre>
     * Ist das Element aktiviert oder nicht ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20001;</code>
     */
    private $active = null;
    /**
     * <pre>
     * ID eines gefundenen Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 20003;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Beschreibung des Vor-Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue pre_predecessors_description = 20005;</code>
     */
    private $pre_predecessors_description = null;
    /**
     * <pre>
     * TreeNodeID des Vor-Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue pre_predecessors_tree_node_id = 20007;</code>
     */
    private $pre_predecessors_tree_node_id = null;
    /**
     * <pre>
     * TreeNodeID des Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessors_tree_node_id = 20009;</code>
     */
    private $predecessors_tree_node_id = null;
    /**
     * <pre>
     * Beschreibung des Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue predecessors_description = 20010;</code>
     */
    private $predecessors_description = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImGetModifiedNodesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung von "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung von "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * ID eines gefundenen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines gefundenen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10002;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen es für "NodeID" ein Element im Artikelbaum gibt, das eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_t_node = 10003;</code>
     */
    public function getMatchedInfoTypeIdsTNode()
    {
        return $this->matched_info_type_ids_t_node;
    }

    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen es für "NodeID" ein Element im Artikelbaum gibt, das eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_t_node = 10003;</code>
     */
    public function setMatchedInfoTypeIdsTNode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->matched_info_type_ids_t_node = $var;
    }

    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen "NodeID" eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_node = 10004;</code>
     */
    public function getMatchedInfoTypeIdsNode()
    {
        return $this->matched_info_type_ids_node;
    }

    /**
     * <pre>
     * Liste von "MetaInformationTypeID"s (durch "¶" getrennt), zu denen "NodeID" eine "Meta-Information" besitzt, die im angegebenen Zeitraum liegt. Kann aus diversen Gründen "NULL" sein - s. Beschreibung.
     * </pre>
     *
     * <code>.dstore.values.StringValue matched_info_type_ids_node = 10004;</code>
     */
    public function setMatchedInfoTypeIdsNode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->matched_info_type_ids_node = $var;
    }

    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (immer "&#64;LevelID" wenn angegeben)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10005;</code>
     */
    public function getLevelId()
    {
        return $this->level_id;
    }

    /**
     * <pre>
     * ID der Hierarchie von "NodeID" (immer "&#64;LevelID" wenn angegeben)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10005;</code>
     */
    public function setLevelId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_id = $var;
    }

    /**
     * <pre>
     * Ist das Element aktiviert oder nicht ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20001;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Ist das Element aktiviert oder nicht ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 20001;</code>
     */
    public function setActive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->active = $var;
    }

    /**
     * <pre>
     * ID eines gefundenen Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 20003;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines gefundenen Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 20003;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Beschreibung des Vor-Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue pre_predecessors_description = 20005;</code>
     */
    public function getPrePredecessorsDescription()
    {
        return $this->pre_predecessors_description;
    }

    /**
     * <pre>
     * Beschreibung des Vor-Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue pre_predecessors_description = 20005;</code>
     */
    public function setPrePredecessorsDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->pre_predecessors_description = $var;
    }

    /**
     * <pre>
     * TreeNodeID des Vor-Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue pre_predecessors_tree_node_id = 20007;</code>
     */
    public function getPrePredecessorsTreeNodeId()
    {
        return $this->pre_predecessors_tree_node_id;
    }

    /**
     * <pre>
     * TreeNodeID des Vor-Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue pre_predecessors_tree_node_id = 20007;</code>
     */
    public function setPrePredecessorsTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->pre_predecessors_tree_node_id = $var;
    }

    /**
     * <pre>
     * TreeNodeID des Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessors_tree_node_id = 20009;</code>
     */
    public function getPredecessorsTreeNodeId()
    {
        return $this->predecessors_tree_node_id;
    }

    /**
     * <pre>
     * TreeNodeID des Vorgängers
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessors_tree_node_id = 20009;</code>
     */
    public function setPredecessorsTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->predecessors_tree_node_id = $var;
    }

    /**
     * <pre>
     * Beschreibung des Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue predecessors_description = 20010;</code>
     */
    public function getPredecessorsDescription()
    {
        return $this->predecessors_description;
    }

    /**
     * <pre>
     * Beschreibung des Vorgängers des gefundenen Elementes
     * </pre>
     *
     * <code>.dstore.values.StringValue predecessors_description = 20010;</code>
     */
    public function setPredecessorsDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->predecessors_description = $var;
    }

}

