<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetVoucherTypeSurcharges_Ad.proto

namespace Dstore\Engine\Om_GetVoucherTypeSurcharges_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetVoucherTypeSurcharges_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10001;</code>
     */
    private $voucher_type_id = null;
    /**
     * <pre>
     * Die Bezeichnung der Aktion "VoucherTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10002;</code>
     */
    private $voucher_type_description = null;
    /**
     * <pre>
     * Gibt an, was für eine Angabe "SurchargeValue" ist :"0" : Relativer (d.h. prozentualer) Wert"1" : Absolute Währungs-Angabe (in der zur "SurchargeTypeID" konfigurierten Einheit), und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10003;</code>
     */
    private $surcharge_is_absolute_value = null;
    /**
     * <pre>
     * Die Bezeichnung der Kategorie "SurchargeTypeCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10004;</code>
     */
    private $category_description = null;
    /**
     * <pre>
     * Die Bezeichnung der Aufschlags- bzw. Rabattart "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10005;</code>
     */
    private $surcharge_type_description = null;
    /**
     * <pre>
     * Der zur Gutschein-Aktion hinterlegte Rabatt (z.Zt. sind keine Aufschläge erlaubt, s. "om_ModifyVoucherTypeSurch_Ad"), d.h. hier steht immer ein negativer Wert (Rabatte sind "Surcharges" mit negativem Wert)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10006;</code>
     */
    private $surcharge_value = null;
    /**
     * <pre>
     * ID einer Aufschlags- bzw. Rabattart, die für "VoucherTypeID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10007;</code>
     */
    private $surcharge_type_id = null;
    /**
     * <pre>
     * ID der Kategorie, der "SurchargeTypeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_category_id = 10008;</code>
     */
    private $surcharge_type_category_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetVoucherTypeSurchargesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10001;</code>
     */
    public function getVoucherTypeId()
    {
        return $this->voucher_type_id;
    }

    /**
     * <pre>
     * ID einer Gutschein-Aktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue voucher_type_id = 10001;</code>
     */
    public function setVoucherTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->voucher_type_id = $var;
    }

    /**
     * <pre>
     * Die Bezeichnung der Aktion "VoucherTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10002;</code>
     */
    public function getVoucherTypeDescription()
    {
        return $this->voucher_type_description;
    }

    /**
     * <pre>
     * Die Bezeichnung der Aktion "VoucherTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue voucher_type_description = 10002;</code>
     */
    public function setVoucherTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->voucher_type_description = $var;
    }

    /**
     * <pre>
     * Gibt an, was für eine Angabe "SurchargeValue" ist :"0" : Relativer (d.h. prozentualer) Wert"1" : Absolute Währungs-Angabe (in der zur "SurchargeTypeID" konfigurierten Einheit), und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10003;</code>
     */
    public function getSurchargeIsAbsoluteValue()
    {
        return $this->surcharge_is_absolute_value;
    }

    /**
     * <pre>
     * Gibt an, was für eine Angabe "SurchargeValue" ist :"0" : Relativer (d.h. prozentualer) Wert"1" : Absolute Währungs-Angabe (in der zur "SurchargeTypeID" konfigurierten Einheit), und zwar ein NETTO-Wert"2" : Wie "1" nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10003;</code>
     */
    public function setSurchargeIsAbsoluteValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_is_absolute_value = $var;
    }

    /**
     * <pre>
     * Die Bezeichnung der Kategorie "SurchargeTypeCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10004;</code>
     */
    public function getCategoryDescription()
    {
        return $this->category_description;
    }

    /**
     * <pre>
     * Die Bezeichnung der Kategorie "SurchargeTypeCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10004;</code>
     */
    public function setCategoryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->category_description = $var;
    }

    /**
     * <pre>
     * Die Bezeichnung der Aufschlags- bzw. Rabattart "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10005;</code>
     */
    public function getSurchargeTypeDescription()
    {
        return $this->surcharge_type_description;
    }

    /**
     * <pre>
     * Die Bezeichnung der Aufschlags- bzw. Rabattart "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10005;</code>
     */
    public function setSurchargeTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_type_description = $var;
    }

    /**
     * <pre>
     * Der zur Gutschein-Aktion hinterlegte Rabatt (z.Zt. sind keine Aufschläge erlaubt, s. "om_ModifyVoucherTypeSurch_Ad"), d.h. hier steht immer ein negativer Wert (Rabatte sind "Surcharges" mit negativem Wert)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10006;</code>
     */
    public function getSurchargeValue()
    {
        return $this->surcharge_value;
    }

    /**
     * <pre>
     * Der zur Gutschein-Aktion hinterlegte Rabatt (z.Zt. sind keine Aufschläge erlaubt, s. "om_ModifyVoucherTypeSurch_Ad"), d.h. hier steht immer ein negativer Wert (Rabatte sind "Surcharges" mit negativem Wert)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10006;</code>
     */
    public function setSurchargeValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->surcharge_value = $var;
    }

    /**
     * <pre>
     * ID einer Aufschlags- bzw. Rabattart, die für "VoucherTypeID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10007;</code>
     */
    public function getSurchargeTypeId()
    {
        return $this->surcharge_type_id;
    }

    /**
     * <pre>
     * ID einer Aufschlags- bzw. Rabattart, die für "VoucherTypeID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10007;</code>
     */
    public function setSurchargeTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_type_id = $var;
    }

    /**
     * <pre>
     * ID der Kategorie, der "SurchargeTypeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_category_id = 10008;</code>
     */
    public function getSurchargeTypeCategoryId()
    {
        return $this->surcharge_type_category_id;
    }

    /**
     * <pre>
     * ID der Kategorie, der "SurchargeTypeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_category_id = 10008;</code>
     */
    public function setSurchargeTypeCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_type_category_id = $var;
    }

}

