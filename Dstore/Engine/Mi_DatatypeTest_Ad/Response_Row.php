<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_DatatypeTest_Ad.proto

namespace Dstore\Engine\Mi_DatatypeTest_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_DatatypeTest_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Wert "test text      " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text = 10001;</code>
     */
    private $test_text = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDecimal" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_decimal_param_input = 10002;</code>
     */
    private $test_decimal_param_input = null;
    /**
     * <pre>
     * Datum mit Uhrzeit für den Zeitpunkt "23.05.2006 17:42:59:333" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.TimestampValue test_datetime = 10003;</code>
     */
    private $test_datetime = null;
    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestText" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_text_param_input_byte_length = 10004;</code>
     */
    private $test_text_param_input_byte_length = null;
    /**
     * <pre>
     * Es werden die ersten 1000 Bytes des Wertes, der in "&#64;TestText" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input = 10005;</code>
     */
    private $test_text_param_input = null;
    /**
     * <pre>
     * Wert "-17.425923" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_decimal = 10006;</code>
     */
    private $test_decimal = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestSmallint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_smallint_param_input = 10007;</code>
     */
    private $test_smallint_param_input = null;
    /**
     * <pre>
     * Wert "test char           " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char = 10008;</code>
     */
    private $test_char = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestTinyint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_tinyint_param_input = 10009;</code>
     */
    private $test_tinyint_param_input = null;
    /**
     * <pre>
     * Wert "1" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue test_bit = 10010;</code>
     */
    private $test_bit = null;
    /**
     * <pre>
     * Wert "17" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_integer = 10011;</code>
     */
    private $test_integer = null;
    /**
     * <pre>
     * Wert "128" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_tinyint = 10012;</code>
     */
    private $test_tinyint = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestMoney" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_money_param_input = 10013;</code>
     */
    private $test_money_param_input = null;
    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestImage" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_image_param_input_byte_length = 10014;</code>
     */
    private $test_image_param_input_byte_length = null;
    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestText"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input_m_d5 = 10015;</code>
     */
    private $test_text_param_input_m_d5 = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestChar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char_param_input = 10016;</code>
     */
    private $test_char_param_input = null;
    /**
     * <pre>
     * Wert "23" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_smallint = 10017;</code>
     */
    private $test_smallint = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestBit" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_bit_param_input = 10018;</code>
     */
    private $test_bit_param_input = null;
    /**
     * <pre>
     * Icon für die "LevelID = 0", sprich für das "root"-Element des Artikelbaums, wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BytesValue test_image = 10019;</code>
     */
    private $test_image = null;
    /**
     * <pre>
     * Wert "1234567891011" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.LongValue test_bigint = 10020;</code>
     */
    private $test_bigint = null;
    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestImage"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input_m_d5 = 10021;</code>
     */
    private $test_image_param_input_m_d5 = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestInteger" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_integer_param_input = 10022;</code>
     */
    private $test_integer_param_input = null;
    /**
     * <pre>
     * Wert "test sysname" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_sysname = 10023;</code>
     */
    private $test_sysname = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestVarchar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar_param_input = 10024;</code>
     */
    private $test_varchar_param_input = null;
    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDatetime" übergeben wurde (bzw. der default-Wert) als "string" im Format "yyyy.mm.ddThh:mi:ss:mmm" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_datetime_param_input = 10025;</code>
     */
    private $test_datetime_param_input = null;
    /**
     * <pre>
     * Es werden die ersten 500 Bytes des Wertes, der in "&#64;TestImage" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input = 10026;</code>
     */
    private $test_image_param_input = null;
    /**
     * <pre>
     * Wert "17.4259" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_money = 10027;</code>
     */
    private $test_money = null;
    /**
     * <pre>
     * Wert "test varchar                  " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar = 10028;</code>
     */
    private $test_varchar = null;
    /**
     * <pre>
     * Wert "123.45" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_numeric = 10029;</code>
     */
    private $test_numeric = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiDatatypeTestAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Wert "test text      " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text = 10001;</code>
     */
    public function getTestText()
    {
        return $this->test_text;
    }

    /**
     * <pre>
     * Wert "test text      " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text = 10001;</code>
     */
    public function setTestText(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_text = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDecimal" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_decimal_param_input = 10002;</code>
     */
    public function getTestDecimalParamInput()
    {
        return $this->test_decimal_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDecimal" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_decimal_param_input = 10002;</code>
     */
    public function setTestDecimalParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_decimal_param_input = $var;
    }

    /**
     * <pre>
     * Datum mit Uhrzeit für den Zeitpunkt "23.05.2006 17:42:59:333" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.TimestampValue test_datetime = 10003;</code>
     */
    public function getTestDatetime()
    {
        return $this->test_datetime;
    }

    /**
     * <pre>
     * Datum mit Uhrzeit für den Zeitpunkt "23.05.2006 17:42:59:333" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.TimestampValue test_datetime = 10003;</code>
     */
    public function setTestDatetime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->test_datetime = $var;
    }

    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestText" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_text_param_input_byte_length = 10004;</code>
     */
    public function getTestTextParamInputByteLength()
    {
        return $this->test_text_param_input_byte_length;
    }

    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestText" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_text_param_input_byte_length = 10004;</code>
     */
    public function setTestTextParamInputByteLength(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->test_text_param_input_byte_length = $var;
    }

    /**
     * <pre>
     * Es werden die ersten 1000 Bytes des Wertes, der in "&#64;TestText" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input = 10005;</code>
     */
    public function getTestTextParamInput()
    {
        return $this->test_text_param_input;
    }

    /**
     * <pre>
     * Es werden die ersten 1000 Bytes des Wertes, der in "&#64;TestText" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input = 10005;</code>
     */
    public function setTestTextParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_text_param_input = $var;
    }

    /**
     * <pre>
     * Wert "-17.425923" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_decimal = 10006;</code>
     */
    public function getTestDecimal()
    {
        return $this->test_decimal;
    }

    /**
     * <pre>
     * Wert "-17.425923" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_decimal = 10006;</code>
     */
    public function setTestDecimal(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->test_decimal = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestSmallint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_smallint_param_input = 10007;</code>
     */
    public function getTestSmallintParamInput()
    {
        return $this->test_smallint_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestSmallint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_smallint_param_input = 10007;</code>
     */
    public function setTestSmallintParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_smallint_param_input = $var;
    }

    /**
     * <pre>
     * Wert "test char           " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char = 10008;</code>
     */
    public function getTestChar()
    {
        return $this->test_char;
    }

    /**
     * <pre>
     * Wert "test char           " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char = 10008;</code>
     */
    public function setTestChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_char = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestTinyint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_tinyint_param_input = 10009;</code>
     */
    public function getTestTinyintParamInput()
    {
        return $this->test_tinyint_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestTinyint" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_tinyint_param_input = 10009;</code>
     */
    public function setTestTinyintParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_tinyint_param_input = $var;
    }

    /**
     * <pre>
     * Wert "1" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue test_bit = 10010;</code>
     */
    public function getTestBit()
    {
        return $this->test_bit;
    }

    /**
     * <pre>
     * Wert "1" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue test_bit = 10010;</code>
     */
    public function setTestBit(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->test_bit = $var;
    }

    /**
     * <pre>
     * Wert "17" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_integer = 10011;</code>
     */
    public function getTestInteger()
    {
        return $this->test_integer;
    }

    /**
     * <pre>
     * Wert "17" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_integer = 10011;</code>
     */
    public function setTestInteger(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->test_integer = $var;
    }

    /**
     * <pre>
     * Wert "128" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_tinyint = 10012;</code>
     */
    public function getTestTinyint()
    {
        return $this->test_tinyint;
    }

    /**
     * <pre>
     * Wert "128" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_tinyint = 10012;</code>
     */
    public function setTestTinyint(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->test_tinyint = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestMoney" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_money_param_input = 10013;</code>
     */
    public function getTestMoneyParamInput()
    {
        return $this->test_money_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestMoney" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_money_param_input = 10013;</code>
     */
    public function setTestMoneyParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_money_param_input = $var;
    }

    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestImage" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_image_param_input_byte_length = 10014;</code>
     */
    public function getTestImageParamInputByteLength()
    {
        return $this->test_image_param_input_byte_length;
    }

    /**
     * <pre>
     * Die Anzahl Bytes, die in "&#64;TestImage" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_image_param_input_byte_length = 10014;</code>
     */
    public function setTestImageParamInputByteLength(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->test_image_param_input_byte_length = $var;
    }

    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestText"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input_m_d5 = 10015;</code>
     */
    public function getTestTextParamInputMD5()
    {
        return $this->test_text_param_input_m_d5;
    }

    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestText"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_text_param_input_m_d5 = 10015;</code>
     */
    public function setTestTextParamInputMD5(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_text_param_input_m_d5 = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestChar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char_param_input = 10016;</code>
     */
    public function getTestCharParamInput()
    {
        return $this->test_char_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestChar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_char_param_input = 10016;</code>
     */
    public function setTestCharParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_char_param_input = $var;
    }

    /**
     * <pre>
     * Wert "23" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_smallint = 10017;</code>
     */
    public function getTestSmallint()
    {
        return $this->test_smallint;
    }

    /**
     * <pre>
     * Wert "23" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue test_smallint = 10017;</code>
     */
    public function setTestSmallint(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->test_smallint = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestBit" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_bit_param_input = 10018;</code>
     */
    public function getTestBitParamInput()
    {
        return $this->test_bit_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestBit" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_bit_param_input = 10018;</code>
     */
    public function setTestBitParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_bit_param_input = $var;
    }

    /**
     * <pre>
     * Icon für die "LevelID = 0", sprich für das "root"-Element des Artikelbaums, wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BytesValue test_image = 10019;</code>
     */
    public function getTestImage()
    {
        return $this->test_image;
    }

    /**
     * <pre>
     * Icon für die "LevelID = 0", sprich für das "root"-Element des Artikelbaums, wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.BytesValue test_image = 10019;</code>
     */
    public function setTestImage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BytesValue::class);
        $this->test_image = $var;
    }

    /**
     * <pre>
     * Wert "1234567891011" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.LongValue test_bigint = 10020;</code>
     */
    public function getTestBigint()
    {
        return $this->test_bigint;
    }

    /**
     * <pre>
     * Wert "1234567891011" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.LongValue test_bigint = 10020;</code>
     */
    public function setTestBigint(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\LongValue::class);
        $this->test_bigint = $var;
    }

    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestImage"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input_m_d5 = 10021;</code>
     */
    public function getTestImageParamInputMD5()
    {
        return $this->test_image_param_input_m_d5;
    }

    /**
     * <pre>
     * Der MD5-Hash-Wert (als "string") der ersten 16384 Bytes (mehr ist in der aktuellen ASE-Version 15.7 nicht möglich) von "&#64;TestImage"
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input_m_d5 = 10021;</code>
     */
    public function setTestImageParamInputMD5(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_image_param_input_m_d5 = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestInteger" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_integer_param_input = 10022;</code>
     */
    public function getTestIntegerParamInput()
    {
        return $this->test_integer_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestInteger" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_integer_param_input = 10022;</code>
     */
    public function setTestIntegerParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_integer_param_input = $var;
    }

    /**
     * <pre>
     * Wert "test sysname" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_sysname = 10023;</code>
     */
    public function getTestSysname()
    {
        return $this->test_sysname;
    }

    /**
     * <pre>
     * Wert "test sysname" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_sysname = 10023;</code>
     */
    public function setTestSysname(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_sysname = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestVarchar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar_param_input = 10024;</code>
     */
    public function getTestVarcharParamInput()
    {
        return $this->test_varchar_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestVarchar" übergeben wurde (bzw. der default-Wert) ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar_param_input = 10024;</code>
     */
    public function setTestVarcharParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_varchar_param_input = $var;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDatetime" übergeben wurde (bzw. der default-Wert) als "string" im Format "yyyy.mm.ddThh:mi:ss:mmm" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_datetime_param_input = 10025;</code>
     */
    public function getTestDatetimeParamInput()
    {
        return $this->test_datetime_param_input;
    }

    /**
     * <pre>
     * Es wird der Wert, der in "&#64;TestDatetime" übergeben wurde (bzw. der default-Wert) als "string" im Format "yyyy.mm.ddThh:mi:ss:mmm" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_datetime_param_input = 10025;</code>
     */
    public function setTestDatetimeParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_datetime_param_input = $var;
    }

    /**
     * <pre>
     * Es werden die ersten 500 Bytes des Wertes, der in "&#64;TestImage" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input = 10026;</code>
     */
    public function getTestImageParamInput()
    {
        return $this->test_image_param_input;
    }

    /**
     * <pre>
     * Es werden die ersten 500 Bytes des Wertes, der in "&#64;TestImage" übergeben wurde (bzw. der default-Wert) als "string" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.StringValue test_image_param_input = 10026;</code>
     */
    public function setTestImageParamInput(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_image_param_input = $var;
    }

    /**
     * <pre>
     * Wert "17.4259" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_money = 10027;</code>
     */
    public function getTestMoney()
    {
        return $this->test_money;
    }

    /**
     * <pre>
     * Wert "17.4259" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_money = 10027;</code>
     */
    public function setTestMoney(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->test_money = $var;
    }

    /**
     * <pre>
     * Wert "test varchar                  " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar = 10028;</code>
     */
    public function getTestVarchar()
    {
        return $this->test_varchar;
    }

    /**
     * <pre>
     * Wert "test varchar                  " wird zurückgegeben (man beachte die Leerzeichen am Ende)
     * </pre>
     *
     * <code>.dstore.values.StringValue test_varchar = 10028;</code>
     */
    public function setTestVarchar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->test_varchar = $var;
    }

    /**
     * <pre>
     * Wert "123.45" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_numeric = 10029;</code>
     */
    public function getTestNumeric()
    {
        return $this->test_numeric;
    }

    /**
     * <pre>
     * Wert "123.45" wird zurückgegeben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue test_numeric = 10029;</code>
     */
    public function setTestNumeric(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->test_numeric = $var;
    }

}

