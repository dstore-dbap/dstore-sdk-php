<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetOrderInformation_Ad.proto

namespace Dstore\Engine\Om_GetOrderInformation_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetOrderInformation_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID des "dStore"-Benutzers (der in "UserInfo" registriert ist) der die Information hinterlegt hat. Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall steht hier "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10001;</code>
     */
    private $created_by_user_id = null;
    /**
     * <pre>
     * ID eines Informationstyps, also um was es sich bei der Zusatz-Information "Information" handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue information_type_id = 10002;</code>
     */
    private $information_type_id = null;
    /**
     * <pre>
     * ID eines Merkmals, das zur "InformationTypeID" korrespondiert. Hintergrund : Man möchte im Auftrag die Eigenschaft des Auftraggebers zu diesem Merkmal zum Zeitpunkt der Auftragserstellung speichern (denn die Eigenschaft könnte ja geändert werden !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10003;</code>
     */
    private $person_characteristic_id = null;
    /**
     * <pre>
     * ID eines Auftrags (also entweder "&#64;OrderID" bzw. eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_id = 10004;</code>
     */
    private $order_id = null;
    /**
     * <pre>
     * Bezeichnung der "InformationTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue information_type = 10005;</code>
     */
    private $information_type = null;
    /**
     * <pre>
     * Die zum Auftrag "OrderID" hinterlegte Information
     * </pre>
     *
     * <code>.dstore.values.StringValue information = 10006;</code>
     */
    private $information = null;
    /**
     * <pre>
     * Wann wurde die Information "Information" zur "OrderID" hinterlegt ? Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall wird hier "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10007;</code>
     */
    private $created_at_date_and_time = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetOrderInformationAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID des "dStore"-Benutzers (der in "UserInfo" registriert ist) der die Information hinterlegt hat. Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall steht hier "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10001;</code>
     */
    public function getCreatedByUserId()
    {
        return $this->created_by_user_id;
    }

    /**
     * <pre>
     * ID des "dStore"-Benutzers (der in "UserInfo" registriert ist) der die Information hinterlegt hat. Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall steht hier "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue created_by_user_id = 10001;</code>
     */
    public function setCreatedByUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->created_by_user_id = $var;
    }

    /**
     * <pre>
     * ID eines Informationstyps, also um was es sich bei der Zusatz-Information "Information" handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue information_type_id = 10002;</code>
     */
    public function getInformationTypeId()
    {
        return $this->information_type_id;
    }

    /**
     * <pre>
     * ID eines Informationstyps, also um was es sich bei der Zusatz-Information "Information" handelt
     * </pre>
     *
     * <code>.dstore.values.IntegerValue information_type_id = 10002;</code>
     */
    public function setInformationTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->information_type_id = $var;
    }

    /**
     * <pre>
     * ID eines Merkmals, das zur "InformationTypeID" korrespondiert. Hintergrund : Man möchte im Auftrag die Eigenschaft des Auftraggebers zu diesem Merkmal zum Zeitpunkt der Auftragserstellung speichern (denn die Eigenschaft könnte ja geändert werden !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10003;</code>
     */
    public function getPersonCharacteristicId()
    {
        return $this->person_characteristic_id;
    }

    /**
     * <pre>
     * ID eines Merkmals, das zur "InformationTypeID" korrespondiert. Hintergrund : Man möchte im Auftrag die Eigenschaft des Auftraggebers zu diesem Merkmal zum Zeitpunkt der Auftragserstellung speichern (denn die Eigenschaft könnte ja geändert werden !)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10003;</code>
     */
    public function setPersonCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_characteristic_id = $var;
    }

    /**
     * <pre>
     * ID eines Auftrags (also entweder "&#64;OrderID" bzw. eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_id = 10004;</code>
     */
    public function getOrderId()
    {
        return $this->order_id;
    }

    /**
     * <pre>
     * ID eines Auftrags (also entweder "&#64;OrderID" bzw. eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue order_id = 10004;</code>
     */
    public function setOrderId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->order_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "InformationTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue information_type = 10005;</code>
     */
    public function getInformationType()
    {
        return $this->information_type;
    }

    /**
     * <pre>
     * Bezeichnung der "InformationTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue information_type = 10005;</code>
     */
    public function setInformationType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->information_type = $var;
    }

    /**
     * <pre>
     * Die zum Auftrag "OrderID" hinterlegte Information
     * </pre>
     *
     * <code>.dstore.values.StringValue information = 10006;</code>
     */
    public function getInformation()
    {
        return $this->information;
    }

    /**
     * <pre>
     * Die zum Auftrag "OrderID" hinterlegte Information
     * </pre>
     *
     * <code>.dstore.values.StringValue information = 10006;</code>
     */
    public function setInformation(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->information = $var;
    }

    /**
     * <pre>
     * Wann wurde die Information "Information" zur "OrderID" hinterlegt ? Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall wird hier "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10007;</code>
     */
    public function getCreatedAtDateAndTime()
    {
        return $this->created_at_date_and_time;
    }

    /**
     * <pre>
     * Wann wurde die Information "Information" zur "OrderID" hinterlegt ? Anmerkung : Für Daten, die vor dem Einspielen des Updates 4.0.12 angelegt wurden, existiert diese Information nicht - in diesem Fall wird hier "NULL" zurückgegeben !
     * </pre>
     *
     * <code>.dstore.values.TimestampValue created_at_date_and_time = 10007;</code>
     */
    public function setCreatedAtDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->created_at_date_and_time = $var;
    }

}

