<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetPersonSurcharges_Ad.proto

namespace Dstore\Engine\Om_GetPersonSurcharges_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetPersonSurcharges_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    private $value1_restricted_by_pattern = null;
    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10002;</code>
     */
    private $value2_restricted_by_pattern = null;
    /**
     * <pre>
     * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue relative = 10003;</code>
     */
    private $relative = null;
    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    private $value3 = null;
    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10005;</code>
     */
    private $value1 = null;
    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10006;</code>
     */
    private $unit_symbol = null;
    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    private $value2 = null;
    /**
     * <pre>
     * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10008;</code>
     */
    private $surcharge_value = null;
    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    private $active = null;
    /**
     * <pre>
     * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10011;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10012;</code>
     */
    private $unit_id = null;
    /**
     * <pre>
     * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue brutto = 10013;</code>
     */
    private $brutto = null;
    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10014;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10015;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10016;</code>
     */
    private $surcharge_type_description = null;
    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10017;</code>
     */
    private $surcharge_type_id = null;
    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10018;</code>
     */
    private $value3_restricted_by_pattern = null;
    /**
     * <pre>
     * ID der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10019;</code>
     */
    private $level_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetPersonSurchargesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    public function getValue1RestrictedByPattern()
    {
        return $this->value1_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10001;</code>
     */
    public function setValue1RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10002;</code>
     */
    public function getValue2RestrictedByPattern()
    {
        return $this->value2_restricted_by_pattern;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10002;</code>
     */
    public function setValue2RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue relative = 10003;</code>
     */
    public function getRelative()
    {
        return $this->relative;
    }

    /**
     * <pre>
     * Ist der Rabatt/Aufschlag "SurchargeValue" ein absoluter Wert ("0") oder eine relative (d.h. Prozent-) Angabe ("1") ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue relative = 10003;</code>
     */
    public function setRelative(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->relative = $var;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    public function getValue3()
    {
        return $this->value3;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID3"
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10004;</code>
     */
    public function setValue3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3 = $var;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10005;</code>
     */
    public function getValue1()
    {
        return $this->value1;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID1"
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10005;</code>
     */
    public function setValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1 = $var;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10006;</code>
     */
    public function getUnitSymbol()
    {
        return $this->unit_symbol;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit "UnitID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10006;</code>
     */
    public function setUnitSymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->unit_symbol = $var;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    public function getValue2()
    {
        return $this->value2;
    }

    /**
     * <pre>
     * Eigenschaft der Person "PersonID" zum Merkmal "&#64;OutputCharacteristicID2"
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    public function setValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2 = $var;
    }

    /**
     * <pre>
     * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10008;</code>
     */
    public function getSurchargeValue()
    {
        return $this->surcharge_value;
    }

    /**
     * <pre>
     * Der zur Person "PersonID" für das Element "TreeNodeID" hinterlegte Rabatt/Aufschlag. Ein negativer Wert bedeutet, daß es sich um einen Rabatt handelt (z.B. wenn die Rabatt-/Aufschlagsart "Sonder-Rabatt" o.ä. ist).
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10008;</code>
     */
    public function setSurchargeValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->surcharge_value = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    public function setActive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->active = $var;
    }

    /**
     * <pre>
     * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10011;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID einer Person (des Typs "&#64;PersonTypeID" oder gleich "&#64;PersonID"), der "Surcharges" zugewiesen sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10011;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10012;</code>
     */
    public function getUnitId()
    {
        return $this->unit_id;
    }

    /**
     * <pre>
     * ID einer Währungs-Einheit (wenn "Relative = 0") oder der Prozent-Einheit (wenn "Relative = 1" ist) - also die Einheit, in der "SurchargeValue" angegeben ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10012;</code>
     */
    public function setUnitId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->unit_id = $var;
    }

    /**
     * <pre>
     * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue brutto = 10013;</code>
     */
    public function getBrutto()
    {
        return $this->brutto;
    }

    /**
     * <pre>
     * Der Parameter hat nur Bedeutung, wenn "Relative = 0" ist. Er gibt an, ob der Rabatt/Aufschlag "SurchargeValue" als Brutto- oder Nettobetrag angegeben ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue brutto = 10013;</code>
     */
    public function setBrutto(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->brutto = $var;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10014;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum, auf das sich der Rabatt/-Aufschlag "SurchargeTypeID" für die Person "PersonID" bezieht. Dieser gilt dann auch für alle NACHFOLGER (bis auf die, denen direkt eine andere "SurchargeTypeID" zugwiesen ist).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10014;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10015;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10015;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10016;</code>
     */
    public function getSurchargeTypeDescription()
    {
        return $this->surcharge_type_description;
    }

    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10016;</code>
     */
    public function setSurchargeTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_type_description = $var;
    }

    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10017;</code>
     */
    public function getSurchargeTypeId()
    {
        return $this->surcharge_type_id;
    }

    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art (z.B. "Sonder-Rabatt", "Händler-Rabatt" o.ä.), die der Person "PersonID" für das Element "TreeNodeID" (und deren Nachfolger) zugewiesen ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10017;</code>
     */
    public function setSurchargeTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_type_id = $var;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10018;</code>
     */
    public function getValue3RestrictedByPattern()
    {
        return $this->value3_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10018;</code>
     */
    public function setValue3RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * ID der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10019;</code>
     */
    public function getLevelId()
    {
        return $this->level_id;
    }

    /**
     * <pre>
     * ID der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_id = 10019;</code>
     */
    public function setLevelId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_id = $var;
    }

}

