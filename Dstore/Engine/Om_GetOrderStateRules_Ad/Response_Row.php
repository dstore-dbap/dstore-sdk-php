<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetOrderStateRules_Ad.proto

namespace Dstore\Engine\Om_GetOrderStateRules_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetOrderStateRules_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Name des Benutzers "UserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10001;</code>
     */
    private $user_name = null;
    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in diesen Status setzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue to_order_state_id = 10002;</code>
     */
    private $to_order_state_id = null;
    /**
     * <pre>
     * ID eines "dStore"-Benutzers (der in "UserInfo" registriert ist) für den die Regel definiert wurde. "-1" bedeutet, daß die Regel für alle Benutzer gilt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10003;</code>
     */
    private $user_id = null;
    /**
     * <pre>
     * ID einer Zahlungsart-Versandart-Kombination. D.h. die Regel gilt nur für Positionen von Aufträgen, für die diese Versand- und Zahlart ausgewählt wurde. "-1" bedeutet, daß die Regel unabhängig von Versand- und Zahlart gültig ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_for_shipping_id = 10004;</code>
     */
    private $payment_for_shipping_id = null;
    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") aus diesem Status in den Status "ToOrderStateID" umsetzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_order_state_id = 10005;</code>
     */
    private $from_order_state_id = null;
    /**
     * <pre>
     * Bezeichnung des Status "ToOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue to_order_state = 10006;</code>
     */
    private $to_order_state = null;
    /**
     * <pre>
     * Bezeichnung der Zahlungsart-Versandart-Kombination "PaymentForShippingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_for_shipping_description = 10007;</code>
     */
    private $payment_for_shipping_description = null;
    /**
     * <pre>
     * Bezeichnung des Status "FromOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue from_order_state = 10008;</code>
     */
    private $from_order_state = null;
    /**
     * <pre>
     * Darf der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in den Status "ToOrderStateID" setzen ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue allowed = 10009;</code>
     */
    private $allowed = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetOrderStateRulesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Name des Benutzers "UserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10001;</code>
     */
    public function getUserName()
    {
        return $this->user_name;
    }

    /**
     * <pre>
     * Name des Benutzers "UserID"
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10001;</code>
     */
    public function setUserName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->user_name = $var;
    }

    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in diesen Status setzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue to_order_state_id = 10002;</code>
     */
    public function getToOrderStateId()
    {
        return $this->to_order_state_id;
    }

    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in diesen Status setzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue to_order_state_id = 10002;</code>
     */
    public function setToOrderStateId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->to_order_state_id = $var;
    }

    /**
     * <pre>
     * ID eines "dStore"-Benutzers (der in "UserInfo" registriert ist) für den die Regel definiert wurde. "-1" bedeutet, daß die Regel für alle Benutzer gilt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10003;</code>
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * <pre>
     * ID eines "dStore"-Benutzers (der in "UserInfo" registriert ist) für den die Regel definiert wurde. "-1" bedeutet, daß die Regel für alle Benutzer gilt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10003;</code>
     */
    public function setUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->user_id = $var;
    }

    /**
     * <pre>
     * ID einer Zahlungsart-Versandart-Kombination. D.h. die Regel gilt nur für Positionen von Aufträgen, für die diese Versand- und Zahlart ausgewählt wurde. "-1" bedeutet, daß die Regel unabhängig von Versand- und Zahlart gültig ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_for_shipping_id = 10004;</code>
     */
    public function getPaymentForShippingId()
    {
        return $this->payment_for_shipping_id;
    }

    /**
     * <pre>
     * ID einer Zahlungsart-Versandart-Kombination. D.h. die Regel gilt nur für Positionen von Aufträgen, für die diese Versand- und Zahlart ausgewählt wurde. "-1" bedeutet, daß die Regel unabhängig von Versand- und Zahlart gültig ist.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue payment_for_shipping_id = 10004;</code>
     */
    public function setPaymentForShippingId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->payment_for_shipping_id = $var;
    }

    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") aus diesem Status in den Status "ToOrderStateID" umsetzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_order_state_id = 10005;</code>
     */
    public function getFromOrderStateId()
    {
        return $this->from_order_state_id;
    }

    /**
     * <pre>
     * ID eines Auftrags(-Positions)-Status. Gibt an, daß der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") aus diesem Status in den Status "ToOrderStateID" umsetzen darf oder nicht (je nach "Allowed").
     * </pre>
     *
     * <code>.dstore.values.IntegerValue from_order_state_id = 10005;</code>
     */
    public function setFromOrderStateId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->from_order_state_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Status "ToOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue to_order_state = 10006;</code>
     */
    public function getToOrderState()
    {
        return $this->to_order_state;
    }

    /**
     * <pre>
     * Bezeichnung des Status "ToOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue to_order_state = 10006;</code>
     */
    public function setToOrderState(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->to_order_state = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Zahlungsart-Versandart-Kombination "PaymentForShippingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_for_shipping_description = 10007;</code>
     */
    public function getPaymentForShippingDescription()
    {
        return $this->payment_for_shipping_description;
    }

    /**
     * <pre>
     * Bezeichnung der Zahlungsart-Versandart-Kombination "PaymentForShippingID"
     * </pre>
     *
     * <code>.dstore.values.StringValue payment_for_shipping_description = 10007;</code>
     */
    public function setPaymentForShippingDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->payment_for_shipping_description = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Status "FromOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue from_order_state = 10008;</code>
     */
    public function getFromOrderState()
    {
        return $this->from_order_state;
    }

    /**
     * <pre>
     * Bezeichnung des Status "FromOrderStateID"
     * </pre>
     *
     * <code>.dstore.values.StringValue from_order_state = 10008;</code>
     */
    public function setFromOrderState(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->from_order_state = $var;
    }

    /**
     * <pre>
     * Darf der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in den Status "ToOrderStateID" setzen ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue allowed = 10009;</code>
     */
    public function getAllowed()
    {
        return $this->allowed;
    }

    /**
     * <pre>
     * Darf der Benutzer "UserID" eine Auftragsposition (bei Zahlungsart-Versandart-Kombination "PaymentForShippingID") vom Status "FromOrderStateID" in den Status "ToOrderStateID" setzen ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue allowed = 10009;</code>
     */
    public function setAllowed(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->allowed = $var;
    }

}

