<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetTransactionMetaInfo_Ad.proto

namespace Dstore\Engine\Om_GetTransactionMetaInfo_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetTransactionMetaInfo_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID des Benutzers, durch den die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_by_user_id = 10001;</code>
     */
    private $transaction_by_user_id = null;
    /**
     * <pre>
     * Name der Prozedur, durch die die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_by_procedure_name = 10002;</code>
     */
    private $transaction_by_procedure_name = null;
    /**
     * <pre>
     * Ein interner Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue internal_transaction_comment = 10003;</code>
     */
    private $internal_transaction_comment = null;
    /**
     * <pre>
     * Die ID der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10004;</code>
     */
    private $transaction_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetTransactionMetaInfoAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID des Benutzers, durch den die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_by_user_id = 10001;</code>
     */
    public function getTransactionByUserId()
    {
        return $this->transaction_by_user_id;
    }

    /**
     * <pre>
     * ID des Benutzers, durch den die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_by_user_id = 10001;</code>
     */
    public function setTransactionByUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->transaction_by_user_id = $var;
    }

    /**
     * <pre>
     * Name der Prozedur, durch die die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_by_procedure_name = 10002;</code>
     */
    public function getTransactionByProcedureName()
    {
        return $this->transaction_by_procedure_name;
    }

    /**
     * <pre>
     * Name der Prozedur, durch die die Transaktion erzeugt wurde
     * </pre>
     *
     * <code>.dstore.values.StringValue transaction_by_procedure_name = 10002;</code>
     */
    public function setTransactionByProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->transaction_by_procedure_name = $var;
    }

    /**
     * <pre>
     * Ein interner Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue internal_transaction_comment = 10003;</code>
     */
    public function getInternalTransactionComment()
    {
        return $this->internal_transaction_comment;
    }

    /**
     * <pre>
     * Ein interner Kommentar zur Transaktion
     * </pre>
     *
     * <code>.dstore.values.StringValue internal_transaction_comment = 10003;</code>
     */
    public function setInternalTransactionComment(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->internal_transaction_comment = $var;
    }

    /**
     * <pre>
     * Die ID der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10004;</code>
     */
    public function getTransactionId()
    {
        return $this->transaction_id;
    }

    /**
     * <pre>
     * Die ID der Transaktion
     * </pre>
     *
     * <code>.dstore.values.IntegerValue transaction_id = 10004;</code>
     */
    public function setTransactionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->transaction_id = $var;
    }

}

