<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetSQLFunctionCode_Ad.proto

namespace Dstore\Engine\Mi_GetSQLFunctionCode_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetSQLFunctionCode_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Eindeutige Zeilennummer des Codes "CodeLine"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_line_number = 10001;</code>
     */
    private $code_line_number = null;
    /**
     * <pre>
     * Eindeutige Zeilennummer des REINEN Codes "CodePart" (also ohne Kommentare). Wenn hier "NULL" steht, ist "CodePart" auch "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_part_line_number = 10002;</code>
     */
    private $code_part_line_number = null;
    /**
     * <pre>
     * Der komplette Code, der in Zeile "CodeLineNumber" steht. ACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue code_line = 10003;</code>
     */
    private $code_line = null;
    /**
     * <pre>
     * Jeglicher Kommentar in der Code-ZeileACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue comment_part = 10004;</code>
     */
    private $comment_part = null;
    /**
     * <pre>
     * Der "reine" Code der Code-Zeile (ohne Kommentare). Anmerkungen :* Wenn die verbleibenden Zeichen NUR aus "tabs" und/oder "spaces" und/oder "CRs" bestehen, steht hier "NULL"* Ist "&#64;IgnoreComments = 1", erhält man nur Zeilen, die hier NICHT "NULL" enth.
     * </pre>
     *
     * <code>.dstore.values.StringValue code_part = 10005;</code>
     */
    private $code_part = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetSQLFunctionCodeAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Eindeutige Zeilennummer des Codes "CodeLine"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_line_number = 10001;</code>
     */
    public function getCodeLineNumber()
    {
        return $this->code_line_number;
    }

    /**
     * <pre>
     * Eindeutige Zeilennummer des Codes "CodeLine"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_line_number = 10001;</code>
     */
    public function setCodeLineNumber(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->code_line_number = $var;
    }

    /**
     * <pre>
     * Eindeutige Zeilennummer des REINEN Codes "CodePart" (also ohne Kommentare). Wenn hier "NULL" steht, ist "CodePart" auch "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_part_line_number = 10002;</code>
     */
    public function getCodePartLineNumber()
    {
        return $this->code_part_line_number;
    }

    /**
     * <pre>
     * Eindeutige Zeilennummer des REINEN Codes "CodePart" (also ohne Kommentare). Wenn hier "NULL" steht, ist "CodePart" auch "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue code_part_line_number = 10002;</code>
     */
    public function setCodePartLineNumber(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->code_part_line_number = $var;
    }

    /**
     * <pre>
     * Der komplette Code, der in Zeile "CodeLineNumber" steht. ACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue code_line = 10003;</code>
     */
    public function getCodeLine()
    {
        return $this->code_line;
    }

    /**
     * <pre>
     * Der komplette Code, der in Zeile "CodeLineNumber" steht. ACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue code_line = 10003;</code>
     */
    public function setCodeLine(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->code_line = $var;
    }

    /**
     * <pre>
     * Jeglicher Kommentar in der Code-ZeileACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue comment_part = 10004;</code>
     */
    public function getCommentPart()
    {
        return $this->comment_part;
    }

    /**
     * <pre>
     * Jeglicher Kommentar in der Code-ZeileACHTUNG : Ist "&#64;IgnoreComments = 1", steht hier immer "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue comment_part = 10004;</code>
     */
    public function setCommentPart(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->comment_part = $var;
    }

    /**
     * <pre>
     * Der "reine" Code der Code-Zeile (ohne Kommentare). Anmerkungen :* Wenn die verbleibenden Zeichen NUR aus "tabs" und/oder "spaces" und/oder "CRs" bestehen, steht hier "NULL"* Ist "&#64;IgnoreComments = 1", erhält man nur Zeilen, die hier NICHT "NULL" enth.
     * </pre>
     *
     * <code>.dstore.values.StringValue code_part = 10005;</code>
     */
    public function getCodePart()
    {
        return $this->code_part;
    }

    /**
     * <pre>
     * Der "reine" Code der Code-Zeile (ohne Kommentare). Anmerkungen :* Wenn die verbleibenden Zeichen NUR aus "tabs" und/oder "spaces" und/oder "CRs" bestehen, steht hier "NULL"* Ist "&#64;IgnoreComments = 1", erhält man nur Zeilen, die hier NICHT "NULL" enth.
     * </pre>
     *
     * <code>.dstore.values.StringValue code_part = 10005;</code>
     */
    public function setCodePart(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->code_part = $var;
    }

}

