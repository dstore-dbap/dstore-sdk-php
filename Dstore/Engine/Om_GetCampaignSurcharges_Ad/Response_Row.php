<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetCampaignSurcharges_Ad.proto

namespace Dstore\Engine\Om_GetCampaignSurcharges_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetCampaignSurcharges_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID einer Artikel-Bedingung (mögliche Werte : s. "im_GetItemConditions_Ad"). Falls NICHT "NULL" bedeutet dies, daß der Rabatt auf alle Positionen angewandt wird, die ein Artikel-Element enthalten, das die hierdurch gegebene Bedingung erfüllt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue item_condition_id = 10001;</code>
     */
    private $item_condition_id = null;
    /**
     * <pre>
     * ID eines Rabatt-Benefits für Verkaufs-Aktionen  - natürlich identisch mit "&#64;BenefitID" wenn angegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_id = 10002;</code>
     */
    private $benefit_id = null;
    /**
     * <pre>
     * Symbol der Einheit "SurchargeValueUnitID" (z.B. "%" oder "EUR")
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_value_unit_symbol = 10003;</code>
     */
    private $surcharge_value_unit_symbol = null;
    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Personen-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-)Eigenschaft zu diesem Merkmal (der bei der Preis-Ermittlung angegebenen Person) bestimmt
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_person_charac_id = 10004;</code>
     */
    private $derived_from_person_charac_id = null;
    /**
     * <pre>
     * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : relative (d.h. prozentuale) Angabe"1" : absolute Währungs-Angabe in der Einheit "SurchargeValueUnitID", und zwar ein NETTO-Wert"2" : wie "1", nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10005;</code>
     */
    private $surcharge_is_absolute_value = null;
    /**
     * <pre>
     * ID der Einheit, in der "SurchargeValue" angegeben ist. Im Fall "SurchargeIsAbsoluteValue = 0" ist dies immer die "Prozent"-Einheit, ansonsten eine Währungs-Einheit.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_value_unit_id = 10006;</code>
     */
    private $surcharge_value_unit_id = null;
    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Artikel-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-/Währungs-)Eigenschaft (eines in Frage kommenden Artikels) zu diesem Merkmal bestimmt (s. Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_node_charac_id = 10007;</code>
     */
    private $derived_from_node_charac_id = null;
    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10008;</code>
     */
    private $surcharge_type_description = null;
    /**
     * <pre>
     * Der Rabatt-Wert (immer ein negativer Wert, Hintergrund : allgemeine "Surcharges"-Logik, bei der Rabatte negativ und Aufschläge positiv sind) oder die ID eines Personen- bzw. Artikel-Merkmals, das den Rabatt-Wert dynamisch zur Laufzeit bestimmt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10009;</code>
     */
    private $surcharge_value = null;
    /**
     * <pre>
     * Gibt an wie/auf was der Rabatt anzuwenden ist :- "0" : auf Positionen mit einem "ItemConditionID" erfüllenden Artikel- "1" : auf die "erweiterte Artikel-Beding." erfüllende Positionen- "2" : alle Positionen- "3" : Gesamt-Rabatt ("OrderSurcharge")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue apply_to_option = 10010;</code>
     */
    private $apply_to_option = null;
    /**
     * <pre>
     * ID einer Rabatt-/Aufschlags-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10011;</code>
     */
    private $surcharge_type_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetCampaignSurchargesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID einer Artikel-Bedingung (mögliche Werte : s. "im_GetItemConditions_Ad"). Falls NICHT "NULL" bedeutet dies, daß der Rabatt auf alle Positionen angewandt wird, die ein Artikel-Element enthalten, das die hierdurch gegebene Bedingung erfüllt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue item_condition_id = 10001;</code>
     */
    public function getItemConditionId()
    {
        return $this->item_condition_id;
    }

    /**
     * <pre>
     * ID einer Artikel-Bedingung (mögliche Werte : s. "im_GetItemConditions_Ad"). Falls NICHT "NULL" bedeutet dies, daß der Rabatt auf alle Positionen angewandt wird, die ein Artikel-Element enthalten, das die hierdurch gegebene Bedingung erfüllt.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue item_condition_id = 10001;</code>
     */
    public function setItemConditionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->item_condition_id = $var;
    }

    /**
     * <pre>
     * ID eines Rabatt-Benefits für Verkaufs-Aktionen  - natürlich identisch mit "&#64;BenefitID" wenn angegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_id = 10002;</code>
     */
    public function getBenefitId()
    {
        return $this->benefit_id;
    }

    /**
     * <pre>
     * ID eines Rabatt-Benefits für Verkaufs-Aktionen  - natürlich identisch mit "&#64;BenefitID" wenn angegeben
     * </pre>
     *
     * <code>.dstore.values.IntegerValue benefit_id = 10002;</code>
     */
    public function setBenefitId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->benefit_id = $var;
    }

    /**
     * <pre>
     * Symbol der Einheit "SurchargeValueUnitID" (z.B. "%" oder "EUR")
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_value_unit_symbol = 10003;</code>
     */
    public function getSurchargeValueUnitSymbol()
    {
        return $this->surcharge_value_unit_symbol;
    }

    /**
     * <pre>
     * Symbol der Einheit "SurchargeValueUnitID" (z.B. "%" oder "EUR")
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_value_unit_symbol = 10003;</code>
     */
    public function setSurchargeValueUnitSymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_value_unit_symbol = $var;
    }

    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Personen-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-)Eigenschaft zu diesem Merkmal (der bei der Preis-Ermittlung angegebenen Person) bestimmt
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_person_charac_id = 10004;</code>
     */
    public function getDerivedFromPersonCharacId()
    {
        return $this->derived_from_person_charac_id;
    }

    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Personen-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-)Eigenschaft zu diesem Merkmal (der bei der Preis-Ermittlung angegebenen Person) bestimmt
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_person_charac_id = 10004;</code>
     */
    public function setDerivedFromPersonCharacId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->derived_from_person_charac_id = $var;
    }

    /**
     * <pre>
     * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : relative (d.h. prozentuale) Angabe"1" : absolute Währungs-Angabe in der Einheit "SurchargeValueUnitID", und zwar ein NETTO-Wert"2" : wie "1", nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10005;</code>
     */
    public function getSurchargeIsAbsoluteValue()
    {
        return $this->surcharge_is_absolute_value;
    }

    /**
     * <pre>
     * Gibt an, wie "SurchargeValue" zu verstehen ist :"0" : relative (d.h. prozentuale) Angabe"1" : absolute Währungs-Angabe in der Einheit "SurchargeValueUnitID", und zwar ein NETTO-Wert"2" : wie "1", nur als BRUTTO-Wert zu verstehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_is_absolute_value = 10005;</code>
     */
    public function setSurchargeIsAbsoluteValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_is_absolute_value = $var;
    }

    /**
     * <pre>
     * ID der Einheit, in der "SurchargeValue" angegeben ist. Im Fall "SurchargeIsAbsoluteValue = 0" ist dies immer die "Prozent"-Einheit, ansonsten eine Währungs-Einheit.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_value_unit_id = 10006;</code>
     */
    public function getSurchargeValueUnitId()
    {
        return $this->surcharge_value_unit_id;
    }

    /**
     * <pre>
     * ID der Einheit, in der "SurchargeValue" angegeben ist. Im Fall "SurchargeIsAbsoluteValue = 0" ist dies immer die "Prozent"-Einheit, ansonsten eine Währungs-Einheit.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_value_unit_id = 10006;</code>
     */
    public function setSurchargeValueUnitId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_value_unit_id = $var;
    }

    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Artikel-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-/Währungs-)Eigenschaft (eines in Frage kommenden Artikels) zu diesem Merkmal bestimmt (s. Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_node_charac_id = 10007;</code>
     */
    public function getDerivedFromNodeCharacId()
    {
        return $this->derived_from_node_charac_id;
    }

    /**
     * <pre>
     * Steht hier "1", handelt es sich bei "SurchargeValue" um die ID eines Artikel-Merkmals, das dynamisch zur Laufzeit den Rabatt-Wert aufgrund der (Prozent-/Währungs-)Eigenschaft (eines in Frage kommenden Artikels) zu diesem Merkmal bestimmt (s. Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue derived_from_node_charac_id = 10007;</code>
     */
    public function setDerivedFromNodeCharacId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->derived_from_node_charac_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10008;</code>
     */
    public function getSurchargeTypeDescription()
    {
        return $this->surcharge_type_description;
    }

    /**
     * <pre>
     * Bezeichnung der "SurchargeTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_type_description = 10008;</code>
     */
    public function setSurchargeTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_type_description = $var;
    }

    /**
     * <pre>
     * Der Rabatt-Wert (immer ein negativer Wert, Hintergrund : allgemeine "Surcharges"-Logik, bei der Rabatte negativ und Aufschläge positiv sind) oder die ID eines Personen- bzw. Artikel-Merkmals, das den Rabatt-Wert dynamisch zur Laufzeit bestimmt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10009;</code>
     */
    public function getSurchargeValue()
    {
        return $this->surcharge_value;
    }

    /**
     * <pre>
     * Der Rabatt-Wert (immer ein negativer Wert, Hintergrund : allgemeine "Surcharges"-Logik, bei der Rabatte negativ und Aufschläge positiv sind) oder die ID eines Personen- bzw. Artikel-Merkmals, das den Rabatt-Wert dynamisch zur Laufzeit bestimmt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10009;</code>
     */
    public function setSurchargeValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->surcharge_value = $var;
    }

    /**
     * <pre>
     * Gibt an wie/auf was der Rabatt anzuwenden ist :- "0" : auf Positionen mit einem "ItemConditionID" erfüllenden Artikel- "1" : auf die "erweiterte Artikel-Beding." erfüllende Positionen- "2" : alle Positionen- "3" : Gesamt-Rabatt ("OrderSurcharge")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue apply_to_option = 10010;</code>
     */
    public function getApplyToOption()
    {
        return $this->apply_to_option;
    }

    /**
     * <pre>
     * Gibt an wie/auf was der Rabatt anzuwenden ist :- "0" : auf Positionen mit einem "ItemConditionID" erfüllenden Artikel- "1" : auf die "erweiterte Artikel-Beding." erfüllende Positionen- "2" : alle Positionen- "3" : Gesamt-Rabatt ("OrderSurcharge")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue apply_to_option = 10010;</code>
     */
    public function setApplyToOption(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->apply_to_option = $var;
    }

    /**
     * <pre>
     * ID einer Rabatt-/Aufschlags-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10011;</code>
     */
    public function getSurchargeTypeId()
    {
        return $this->surcharge_type_id;
    }

    /**
     * <pre>
     * ID einer Rabatt-/Aufschlags-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10011;</code>
     */
    public function setSurchargeTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_type_id = $var;
    }

}

