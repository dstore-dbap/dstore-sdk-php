<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetCampTrolleyValueCond_Ad.proto

namespace Dstore\Engine\Om_GetCampTrolleyValueCond_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetCampTrolleyValueCond_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb höchstens haben darf, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue to_trolley_value = 10001;</code>
     */
    private $to_trolley_value = null;
    /**
     * <pre>
     * ID einer Verkaufs-Aktions-Bedingung (die auf einer Artikel-Bedingung basiert) - z.Zt. natürlich immer identisch mit "&#64;ConditionID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10002;</code>
     */
    private $condition_id = null;
    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb mindestens haben muss, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue from_trolley_value = 10003;</code>
     */
    private $from_trolley_value = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetCampTrolleyValueCondAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb höchstens haben darf, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue to_trolley_value = 10001;</code>
     */
    public function getToTrolleyValue()
    {
        return $this->to_trolley_value;
    }

    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb höchstens haben darf, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue to_trolley_value = 10001;</code>
     */
    public function setToTrolleyValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->to_trolley_value = $var;
    }

    /**
     * <pre>
     * ID einer Verkaufs-Aktions-Bedingung (die auf einer Artikel-Bedingung basiert) - z.Zt. natürlich immer identisch mit "&#64;ConditionID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10002;</code>
     */
    public function getConditionId()
    {
        return $this->condition_id;
    }

    /**
     * <pre>
     * ID einer Verkaufs-Aktions-Bedingung (die auf einer Artikel-Bedingung basiert) - z.Zt. natürlich immer identisch mit "&#64;ConditionID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue condition_id = 10002;</code>
     */
    public function setConditionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->condition_id = $var;
    }

    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb mindestens haben muss, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue from_trolley_value = 10003;</code>
     */
    public function getFromTrolleyValue()
    {
        return $this->from_trolley_value;
    }

    /**
     * <pre>
     * Der Wert (ob BRUTTO oder NETTO s. Beschreibung), den ein Warenkorb mindestens haben muss, um die Bedingung zu erfüllen
     * </pre>
     *
     * <code>.dstore.values.DecimalValue from_trolley_value = 10003;</code>
     */
    public function setFromTrolleyValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->from_trolley_value = $var;
    }

}

