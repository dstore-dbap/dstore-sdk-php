<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/do_GetProcedureNames_Ad.proto

namespace Dstore\Engine\Do_GetProcedureNames_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.do_GetProcedureNames_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_type = 10001;</code>
     */
    private $procedure_type = null;
    /**
     * <pre>
     * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
     */
    private $procedure_category_id = null;
    /**
     * <pre>
     * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10003;</code>
     */
    private $procedure_function = null;
    /**
     * <pre>
     * Bezeichnung der Kategorie "ProcedureCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_category = 10004;</code>
     */
    private $procedure_category = null;
    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
     * </pre>
     *
     * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
     */
    private $actualdstore_version = null;
    /**
     * <pre>
     * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
     */
    private $procedure_type_id = null;
    /**
     * <pre>
     * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
     */
    private $last_edited_at_char = null;
    /**
     * <pre>
     * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10008;</code>
     */
    private $procedure_name = null;
    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
     * </pre>
     *
     * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
     */
    private $firstdstore_version = null;
    /**
     * <pre>
     * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10010;</code>
     */
    private $author = null;
    /**
     * <pre>
     * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
     */
    private $first_created_at_char = null;
    /**
     * <pre>
     * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
     */
    private $alias_procedure_name = null;
    /**
     * <pre>
     * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
     */
    private $registered_for_docu = null;
    /**
     * <pre>
     * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
     * </pre>
     *
     * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
     */
    private $last_created_at_char = null;
    /**
     * <pre>
     * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
     */
    private $docu_exists = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\DoGetProcedureNamesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_type = 10001;</code>
     */
    public function getProcedureType()
    {
        return $this->procedure_type;
    }

    /**
     * <pre>
     * Bezeichnung des Prozedur-Typs "ProcedureTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_type = 10001;</code>
     */
    public function setProcedureType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_type = $var;
    }

    /**
     * <pre>
     * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
     */
    public function getProcedureCategoryId()
    {
        return $this->procedure_category_id;
    }

    /**
     * <pre>
     * ID einer Kategorie von Prozeduren (siehe "do_GetProcedureCategories_Ad"), der die Prozedur "ProcedureName" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_category_id = 10002;</code>
     */
    public function setProcedureCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->procedure_category_id = $var;
    }

    /**
     * <pre>
     * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10003;</code>
     */
    public function getProcedureFunction()
    {
        return $this->procedure_function;
    }

    /**
     * <pre>
     * Eine kurze Charakterisierung der Prozedur, also welchem Zweck sie dient
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10003;</code>
     */
    public function setProcedureFunction(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_function = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "ProcedureCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_category = 10004;</code>
     */
    public function getProcedureCategory()
    {
        return $this->procedure_category;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "ProcedureCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_category = 10004;</code>
     */
    public function setProcedureCategory(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_category = $var;
    }

    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
     * </pre>
     *
     * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
     */
    public function getActualdstoreVersion()
    {
        return $this->actualdstore_version;
    }

    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" zuletzt geändert
     * </pre>
     *
     * <code>.dstore.values.StringValue actualdstore_version = 10005;</code>
     */
    public function setActualdstoreVersion(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->actualdstore_version = $var;
    }

    /**
     * <pre>
     * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
     */
    public function getProcedureTypeId()
    {
        return $this->procedure_type_id;
    }

    /**
     * <pre>
     * ID eines Prozedur-Typs (siehe "do_GetProcedureTypes_Ad"), von dem die Prozedur "ProcedureName" ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_type_id = 10006;</code>
     */
    public function setProcedureTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->procedure_type_id = $var;
    }

    /**
     * <pre>
     * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
     */
    public function getLastEditedAtChar()
    {
        return $this->last_edited_at_char;
    }

    /**
     * <pre>
     * Datum wann die Prozedur vom Autor als "zuletzt editiert" gekennzeichnet wurde Hinweise : 1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy 2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue last_edited_at_char = 10007;</code>
     */
    public function setLastEditedAtChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->last_edited_at_char = $var;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10008;</code>
     */
    public function getProcedureName()
    {
        return $this->procedure_name;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur, zu der es eine Beschreibung gibt (siehe "do_GetProcedureDocu_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10008;</code>
     */
    public function setProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_name = $var;
    }

    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
     * </pre>
     *
     * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
     */
    public function getFirstdstoreVersion()
    {
        return $this->firstdstore_version;
    }

    /**
     * <pre>
     * In welcher "dStore"-Version wurde die Prozedur "ProcedureName" eingeführt
     * </pre>
     *
     * <code>.dstore.values.StringValue firstdstore_version = 10009;</code>
     */
    public function setFirstdstoreVersion(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->firstdstore_version = $var;
    }

    /**
     * <pre>
     * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10010;</code>
     */
    public function getAuthor()
    {
        return $this->author;
    }

    /**
     * <pre>
     * Autor der Prozedur. Im Fall "DocuExists = 0" wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen.
     * </pre>
     *
     * <code>.dstore.values.StringValue author = 10010;</code>
     */
    public function setAuthor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->author = $var;
    }

    /**
     * <pre>
     * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
     */
    public function getFirstCreatedAtChar()
    {
        return $this->first_created_at_char;
    }

    /**
     * <pre>
     * Wann die Prozedur zum ersten Mal erstellt wurde. Hinweise :1. Nur eine Tagesangabe als "string" im Formt mm/dd/yyyy2. Im Fall "DocuExists = 0"wird diese Info aus dem Quellcode herausgeparst und kann daher u.U. fehlen
     * </pre>
     *
     * <code>.dstore.values.StringValue first_created_at_char = 10011;</code>
     */
    public function setFirstCreatedAtChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->first_created_at_char = $var;
    }

    /**
     * <pre>
     * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
     */
    public function getAliasProcedureName()
    {
        return $this->alias_procedure_name;
    }

    /**
     * <pre>
     * Optionaler Alias-Name für "ProcedureName", der in aller erster Linie den Sinn hat, den "vollständigen" Namen angeben zu können, weil "ProcedureName" häufig Abkürzungen enthält (Beispiel : s. Wert für "pm_GetPChAccRestrForGroups_Ad")
     * </pre>
     *
     * <code>.dstore.values.StringValue alias_procedure_name = 10012;</code>
     */
    public function setAliasProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->alias_procedure_name = $var;
    }

    /**
     * <pre>
     * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
     */
    public function getRegisteredForDocu()
    {
        return $this->registered_for_docu;
    }

    /**
     * <pre>
     * Gibt an, ob ein Datensatz in "dstore.dbo.ProcedureDevelopement" (hier sind alle grundsätzlich dokumentierbaren Prozeduren registriert) existiert ("1") oder nicht ("0"). Insbesondere ist also immer "DocuExists = 0" falls hier "0" zurückgegeben wird.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue registered_for_docu = 10013;</code>
     */
    public function setRegisteredForDocu(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->registered_for_docu = $var;
    }

    /**
     * <pre>
     * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
     * </pre>
     *
     * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
     */
    public function getLastCreatedAtChar()
    {
        return $this->last_created_at_char;
    }

    /**
     * <pre>
     * Wann die Prozedur zuletzt übersetzt wurde. Hinweise :1. Ein "string" im Formt mm/dd/yyyy hh:mi:ss:ms2. Im Fall "DocuExists = 0" kommt diese Info aus einer entsprechenden Systemtabelle (Erstellungsdatum des Objekts)
     * </pre>
     *
     * <code>.dstore.values.StringValue last_created_at_char = 10014;</code>
     */
    public function setLastCreatedAtChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->last_created_at_char = $var;
    }

    /**
     * <pre>
     * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
     */
    public function getDocuExists()
    {
        return $this->docu_exists;
    }

    /**
     * <pre>
     * Gibt an, ob eine (Haupt-)Doku existiert ("1") oder nicht ("0"). Hier steht immer "1" beim Aufruf mit Standardwerten und immer "0" wenn "&#64;GetProcsWithMissingDocu = 1" ist. Bei gegebenem "&#64;ProcedureName" hängt der Wert davon ab, ob eine Doku vorhanden ist.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue docu_exists = 10015;</code>
     */
    public function setDocuExists(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->docu_exists = $var;
    }

}

