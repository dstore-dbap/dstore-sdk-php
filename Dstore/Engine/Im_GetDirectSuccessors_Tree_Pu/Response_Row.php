<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_GetDirectSuccessors_Tree_Pu.proto

namespace Dstore\Engine\Im_GetDirectSuccessors_Tree_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_GetDirectSuccessors_Tree_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    private $tree_level = null;
    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10002;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10003;</code>
     */
    private $predecessor = null;
    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10004;</code>
     */
    private $level_no = null;
    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10005;</code>
     */
    private $has_next_sibling = null;
    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10006;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10007;</code>
     */
    private $has_successors = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImGetDirectSuccessorsTreePu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    public function getTreeLevel()
    {
        return $this->tree_level;
    }

    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    public function setTreeLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_level = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10002;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10002;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10003;</code>
     */
    public function getPredecessor()
    {
        return $this->predecessor;
    }

    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10003;</code>
     */
    public function setPredecessor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->predecessor = $var;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10004;</code>
     */
    public function getLevelNo()
    {
        return $this->level_no;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10004;</code>
     */
    public function setLevelNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_no = $var;
    }

    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10005;</code>
     */
    public function getHasNextSibling()
    {
        return $this->has_next_sibling;
    }

    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10005;</code>
     */
    public function setHasNextSibling(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_next_sibling = $var;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10006;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10006;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10007;</code>
     */
    public function getHasSuccessors()
    {
        return $this->has_successors;
    }

    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10007;</code>
     */
    public function setHasSuccessors(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_successors = $var;
    }

}

