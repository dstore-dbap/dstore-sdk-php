<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonCharacsInCats_Ad.proto

namespace Dstore\Engine\Pm_GetPersonCharacsInCats_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonCharacsInCats_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Standard-Wert, der autom. zu einer Person als Eigenschaft zum Merkmal "PersonCharteristicID" gespeichert wird, wenn Daten der Kategorie "PersonCharacCategoryID" bearbeitet werden, die Person aber KEINE Eigenschaften zu Merkmalen dieser Kategorie besitzt
     * </pre>
     *
     * <code>.dstore.values.StringValue default_value = 10001;</code>
     */
    private $default_value = null;
    /**
     * <pre>
     * Falls "1", so MUSS eine Person, die eine Angabe zu wenigstens einem Merkmal der Kategorie "PersonCharacCategoryID" macht, auf JEDEN FALL auch eine Angabe zum Merkmal "PersonCharacteristicID" machen
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10002;</code>
     */
    private $required = null;
    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    private $characteristic_description = null;
    /**
     * <pre>
     * ID eines der Kategorie "PersonCharacCategoryID" zugeordneten Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10004;</code>
     */
    private $person_characteristic_id = null;
    /**
     * <pre>
     * Bezeichnung der "PersonCharacteristicID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
     * </pre>
     *
     * <code>.dstore.values.StringValue description_for_admin = 10005;</code>
     */
    private $description_for_admin = null;
    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10006;</code>
     */
    private $category_description = null;
    /**
     * <pre>
     * Wieviele Tage sollen Änderungen von Eigenschaften (zum Merkmal "PersonCharacteristicID") von Personen des Typs, dem die Kategorie "PersonCharacCategoryID" zugewiesen ist, gehalten werden ? "NULL" bedeutet, daß keine Historie gepflegt wird.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue keep_properties_history_in_days = 10007;</code>
     */
    private $keep_properties_history_in_days = null;
    /**
     * <pre>
     * Was enthält "DefaultValue" (womöglich wg. Zugriffsbeschränk. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "DefaultValue" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue def_val_restricted_by_pattern = 10008;</code>
     */
    private $def_val_restricted_by_pattern = null;
    /**
     * <pre>
     * ID einer Kategorie von Personen-Merkmalen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10009;</code>
     */
    private $person_charac_category_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonCharacsInCatsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Standard-Wert, der autom. zu einer Person als Eigenschaft zum Merkmal "PersonCharteristicID" gespeichert wird, wenn Daten der Kategorie "PersonCharacCategoryID" bearbeitet werden, die Person aber KEINE Eigenschaften zu Merkmalen dieser Kategorie besitzt
     * </pre>
     *
     * <code>.dstore.values.StringValue default_value = 10001;</code>
     */
    public function getDefaultValue()
    {
        return $this->default_value;
    }

    /**
     * <pre>
     * Standard-Wert, der autom. zu einer Person als Eigenschaft zum Merkmal "PersonCharteristicID" gespeichert wird, wenn Daten der Kategorie "PersonCharacCategoryID" bearbeitet werden, die Person aber KEINE Eigenschaften zu Merkmalen dieser Kategorie besitzt
     * </pre>
     *
     * <code>.dstore.values.StringValue default_value = 10001;</code>
     */
    public function setDefaultValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->default_value = $var;
    }

    /**
     * <pre>
     * Falls "1", so MUSS eine Person, die eine Angabe zu wenigstens einem Merkmal der Kategorie "PersonCharacCategoryID" macht, auf JEDEN FALL auch eine Angabe zum Merkmal "PersonCharacteristicID" machen
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10002;</code>
     */
    public function getRequired()
    {
        return $this->required;
    }

    /**
     * <pre>
     * Falls "1", so MUSS eine Person, die eine Angabe zu wenigstens einem Merkmal der Kategorie "PersonCharacCategoryID" macht, auf JEDEN FALL auch eine Angabe zum Merkmal "PersonCharacteristicID" machen
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10002;</code>
     */
    public function setRequired(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->required = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function getCharacteristicDescription()
    {
        return $this->characteristic_description;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function setCharacteristicDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_description = $var;
    }

    /**
     * <pre>
     * ID eines der Kategorie "PersonCharacCategoryID" zugeordneten Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10004;</code>
     */
    public function getPersonCharacteristicId()
    {
        return $this->person_characteristic_id;
    }

    /**
     * <pre>
     * ID eines der Kategorie "PersonCharacCategoryID" zugeordneten Merkmals. Besteht für ein Merkmal eine komplett lesende Zugriffsbeschränkung (s. "pm_GetPChAccRestrForUsers_Ad") für den Aufrufer, FEHLT der entsprechende Datensatz im Ergebnis !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_characteristic_id = 10004;</code>
     */
    public function setPersonCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_characteristic_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "PersonCharacteristicID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
     * </pre>
     *
     * <code>.dstore.values.StringValue description_for_admin = 10005;</code>
     */
    public function getDescriptionForAdmin()
    {
        return $this->description_for_admin;
    }

    /**
     * <pre>
     * Bezeichnung der "PersonCharacteristicID" für den Administrator. Hintergrund : Merkmale, die von der Bezeichnung her identisch sind, und für einen Administrator bei Konfigurierungen nicht auseinander zu halten wären.
     * </pre>
     *
     * <code>.dstore.values.StringValue description_for_admin = 10005;</code>
     */
    public function setDescriptionForAdmin(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->description_for_admin = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10006;</code>
     */
    public function getCategoryDescription()
    {
        return $this->category_description;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10006;</code>
     */
    public function setCategoryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->category_description = $var;
    }

    /**
     * <pre>
     * Wieviele Tage sollen Änderungen von Eigenschaften (zum Merkmal "PersonCharacteristicID") von Personen des Typs, dem die Kategorie "PersonCharacCategoryID" zugewiesen ist, gehalten werden ? "NULL" bedeutet, daß keine Historie gepflegt wird.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue keep_properties_history_in_days = 10007;</code>
     */
    public function getKeepPropertiesHistoryInDays()
    {
        return $this->keep_properties_history_in_days;
    }

    /**
     * <pre>
     * Wieviele Tage sollen Änderungen von Eigenschaften (zum Merkmal "PersonCharacteristicID") von Personen des Typs, dem die Kategorie "PersonCharacCategoryID" zugewiesen ist, gehalten werden ? "NULL" bedeutet, daß keine Historie gepflegt wird.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue keep_properties_history_in_days = 10007;</code>
     */
    public function setKeepPropertiesHistoryInDays(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->keep_properties_history_in_days = $var;
    }

    /**
     * <pre>
     * Was enthält "DefaultValue" (womöglich wg. Zugriffsbeschränk. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "DefaultValue" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue def_val_restricted_by_pattern = 10008;</code>
     */
    public function getDefValRestrictedByPattern()
    {
        return $this->def_val_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "DefaultValue" (womöglich wg. Zugriffsbeschränk. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "DefaultValue" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue def_val_restricted_by_pattern = 10008;</code>
     */
    public function setDefValRestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->def_val_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * ID einer Kategorie von Personen-Merkmalen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10009;</code>
     */
    public function getPersonCharacCategoryId()
    {
        return $this->person_charac_category_id;
    }

    /**
     * <pre>
     * ID einer Kategorie von Personen-Merkmalen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10009;</code>
     */
    public function setPersonCharacCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_charac_category_id = $var;
    }

}

