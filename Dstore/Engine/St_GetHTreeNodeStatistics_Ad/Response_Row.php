<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/st_GetHTreeNodeStatistics_Ad.proto

namespace Dstore\Engine\St_GetHTreeNodeStatistics_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_all_items = 10001;</code>
     */
    private $percentage_of_all_items = null;
    /**
     * <pre>
     * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    private $description = null;
    /**
     * <pre>
     * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue basic_characteristic = 10003;</code>
     */
    private $basic_characteristic = null;
    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_item_tree = 10004;</code>
     */
    private $percentage_of_item_tree = null;
    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_h_tree_node_id = 10005;</code>
     */
    private $total_value_h_tree_node_id = null;
    /**
     * <pre>
     * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_similar_nodes = 10006;</code>
     */
    private $direct_value_similar_nodes = null;
    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_similar_nodes = 10007;</code>
     */
    private $total_value_similar_nodes = null;
    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10008;</code>
     */
    private $basic_characteristic_number = null;
    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_predecessor = 10009;</code>
     */
    private $percentage_of_predecessor = null;
    /**
     * <pre>
     * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_h_tree_node_id = 10010;</code>
     */
    private $direct_value_h_tree_node_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\StGetHTreeNodeStatisticsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_all_items = 10001;</code>
     */
    public function getPercentageOfAllItems()
    {
        return $this->percentage_of_all_items;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente (also auch inkl. der "HTreeNodeID"s mit "TreeNodeID = 0")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_all_items = 10001;</code>
     */
    public function setPercentageOfAllItems(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->percentage_of_all_items = $var;
    }

    /**
     * <pre>
     * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * Beschreibung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue description = 10002;</code>
     */
    public function setDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->description = $var;
    }

    /**
     * <pre>
     * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue basic_characteristic = 10003;</code>
     */
    public function getBasicCharacteristic()
    {
        return $this->basic_characteristic;
    }

    /**
     * <pre>
     * Kurzbezeichnung der Basis-Kennzahl "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.StringValue basic_characteristic = 10003;</code>
     */
    public function setBasicCharacteristic(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->basic_characteristic = $var;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_item_tree = 10004;</code>
     */
    public function getPercentageOfItemTree()
    {
        return $this->percentage_of_item_tree;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" an der Summe der Werte zur Basis-Kennzahl "BasicCharacteristicNumber" aller Elemente des Artikelbaums
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_item_tree = 10004;</code>
     */
    public function setPercentageOfItemTree(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->percentage_of_item_tree = $var;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_h_tree_node_id = 10005;</code>
     */
    public function getTotalValueHTreeNodeId()
    {
        return $this->total_value_h_tree_node_id;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_h_tree_node_id = 10005;</code>
     */
    public function setTotalValueHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_h_tree_node_id = $var;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_similar_nodes = 10006;</code>
     */
    public function getDirectValueSimilarNodes()
    {
        return $this->direct_value_similar_nodes;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_similar_nodes = 10006;</code>
     */
    public function setDirectValueSimilarNodes(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->direct_value_similar_nodes = $var;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_similar_nodes = 10007;</code>
     */
    public function getTotalValueSimilarNodes()
    {
        return $this->total_value_similar_nodes;
    }

    /**
     * <pre>
     * Summe der GESAMTEN Einträge, also inkl. indirekter Einträge, (zur "BasicCharacteristicNumber") für alle Elemente, die die gleiche "NodeID" wie "&#64;HTreeNodeID" besitzen bzw. die gleiche Eigenschaft zum Merkmal "&#64;NodeCharacteristicID" haben
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_similar_nodes = 10007;</code>
     */
    public function setTotalValueSimilarNodes(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_similar_nodes = $var;
    }

    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10008;</code>
     */
    public function getBasicCharacteristicNumber()
    {
        return $this->basic_characteristic_number;
    }

    /**
     * <pre>
     * Nummer einer Basis-Kennzahl
     * </pre>
     *
     * <code>.dstore.values.IntegerValue basic_characteristic_number = 10008;</code>
     */
    public function setBasicCharacteristicNumber(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->basic_characteristic_number = $var;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_predecessor = 10009;</code>
     */
    public function getPercentageOfPredecessor()
    {
        return $this->percentage_of_predecessor;
    }

    /**
     * <pre>
     * Prozentanteil von "TotalValue_HTreeNodeID" am Wert des Vorgängers von "&#64;HTreeNodeID" (zur Basis-Kennzahl "BasicCharacteristicNumber")
     * </pre>
     *
     * <code>.dstore.values.DecimalValue percentage_of_predecessor = 10009;</code>
     */
    public function setPercentageOfPredecessor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->percentage_of_predecessor = $var;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_h_tree_node_id = 10010;</code>
     */
    public function getDirectValueHTreeNodeId()
    {
        return $this->direct_value_h_tree_node_id;
    }

    /**
     * <pre>
     * Summe der DIREKTEN Einträge für "&#64;HTreeNodeID" zur "BasicCharacteristicNumber"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue direct_value_h_tree_node_id = 10010;</code>
     */
    public function setDirectValueHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->direct_value_h_tree_node_id = $var;
    }

}

