<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetLanguages.proto

namespace Dstore\Engine\Mi_GetLanguages;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetLanguages.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10001;</code>
     */
    private $language_symbol = null;
    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID"
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10002;</code>
     */
    private $language = null;
    /**
     * <pre>
     * ID einer Sprache, die im "dStore" registriert ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10003;</code>
     */
    private $language_id = null;
    /**
     * <pre>
     * Übersetzung der Bezeichnung der Sprache ("Language") in der Sprache selbst. Immer "NULL" falls "&#64;GetLocalLanguageName = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue local_language_name = 10004;</code>
     */
    private $local_language_name = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetLanguages::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10001;</code>
     */
    public function getLanguageSymbol()
    {
        return $this->language_symbol;
    }

    /**
     * <pre>
     * Internationales Symbol der Sprache "LanguageID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 639-1". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue language_symbol = 10001;</code>
     */
    public function setLanguageSymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language_symbol = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID"
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10002;</code>
     */
    public function getLanguage()
    {
        return $this->language;
    }

    /**
     * <pre>
     * Bezeichnung der Sprache "LanguageID"
     * </pre>
     *
     * <code>.dstore.values.StringValue language = 10002;</code>
     */
    public function setLanguage(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->language = $var;
    }

    /**
     * <pre>
     * ID einer Sprache, die im "dStore" registriert ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10003;</code>
     */
    public function getLanguageId()
    {
        return $this->language_id;
    }

    /**
     * <pre>
     * ID einer Sprache, die im "dStore" registriert ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue language_id = 10003;</code>
     */
    public function setLanguageId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->language_id = $var;
    }

    /**
     * <pre>
     * Übersetzung der Bezeichnung der Sprache ("Language") in der Sprache selbst. Immer "NULL" falls "&#64;GetLocalLanguageName = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue local_language_name = 10004;</code>
     */
    public function getLocalLanguageName()
    {
        return $this->local_language_name;
    }

    /**
     * <pre>
     * Übersetzung der Bezeichnung der Sprache ("Language") in der Sprache selbst. Immer "NULL" falls "&#64;GetLocalLanguageName = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue local_language_name = 10004;</code>
     */
    public function setLocalLanguageName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->local_language_name = $var;
    }

}

