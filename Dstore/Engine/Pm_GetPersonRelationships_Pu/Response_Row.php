<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonRelationships_Pu.proto

namespace Dstore\Engine\Pm_GetPersonRelationships_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonRelationships_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Dritte ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id3 = 10001;</code>
     */
    private $output_charac_id3 = null;
    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10002;</code>
     */
    private $value1_restricted_by_pattern = null;
    /**
     * <pre>
     * ID einer Person, die zur identifizierten Person in Beziehung steht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_id = 10003;</code>
     */
    private $related_person_id = null;
    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10004;</code>
     */
    private $value2_restricted_by_pattern = null;
    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_3". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value3RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10005;</code>
     */
    private $value3 = null;
    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_1". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value1RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    private $value1 = null;
    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_2". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value2RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    private $value2 = null;
    /**
     * <pre>
     * Summe von Zugriffsrechten, die die identifizierte Person auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10008;</code>
     */
    private $access_level = null;
    /**
     * <pre>
     * Erste ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id1 = 10009;</code>
     */
    private $output_charac_id1 = null;
    /**
     * <pre>
     * Zweite ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id2 = 10010;</code>
     */
    private $output_charac_id2 = null;
    /**
     * <pre>
     * ID des Personen-Typs von "RelatedPersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_type_id = 10011;</code>
     */
    private $related_person_type_id = null;
    /**
     * <pre>
     * ID der Art in der die identifzierte Person und "RelatedPersonID" in Beziehung stehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue relationship_id = 10012;</code>
     */
    private $relationship_id = null;
    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10013;</code>
     */
    private $value3_restricted_by_pattern = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonRelationshipsPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Dritte ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id3 = 10001;</code>
     */
    public function getOutputCharacId3()
    {
        return $this->output_charac_id3;
    }

    /**
     * <pre>
     * Dritte ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id3 = 10001;</code>
     */
    public function setOutputCharacId3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->output_charac_id3 = $var;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10002;</code>
     */
    public function getValue1RestrictedByPattern()
    {
        return $this->value1_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value1" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value1" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value1_restricted_by_pattern = 10002;</code>
     */
    public function setValue1RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * ID einer Person, die zur identifizierten Person in Beziehung steht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_id = 10003;</code>
     */
    public function getRelatedPersonId()
    {
        return $this->related_person_id;
    }

    /**
     * <pre>
     * ID einer Person, die zur identifizierten Person in Beziehung steht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_id = 10003;</code>
     */
    public function setRelatedPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->related_person_id = $var;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10004;</code>
     */
    public function getValue2RestrictedByPattern()
    {
        return $this->value2_restricted_by_pattern;
    }

    /**
     * <pre>
     * Wie "Value1RestrictedByPattern" - nur eben auf "Value2" bezogen
     * </pre>
     *
     * <code>.dstore.values.StringValue value2_restricted_by_pattern = 10004;</code>
     */
    public function setValue2RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_3". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value3RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10005;</code>
     */
    public function getValue3()
    {
        return $this->value3;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_3". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value3RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value3 = 10005;</code>
     */
    public function setValue3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_1". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value1RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    public function getValue1()
    {
        return $this->value1;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_1". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value1RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value1 = 10006;</code>
     */
    public function setValue1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value1 = $var;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_2". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value2RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    public function getValue2()
    {
        return $this->value2;
    }

    /**
     * <pre>
     * Eigenschaft von "RelatedPersonID" zum Merkmal "OutputCharacID_2". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "Value2RestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value2 = 10007;</code>
     */
    public function setValue2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value2 = $var;
    }

    /**
     * <pre>
     * Summe von Zugriffsrechten, die die identifizierte Person auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10008;</code>
     */
    public function getAccessLevel()
    {
        return $this->access_level;
    }

    /**
     * <pre>
     * Summe von Zugriffsrechten, die die identifizierte Person auf Daten von "RelatedPersonID" hat. Mögliche Einzel-Zugriffsrechte : s. "pm_GetRelationAccessLevels".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue access_level = 10008;</code>
     */
    public function setAccessLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->access_level = $var;
    }

    /**
     * <pre>
     * Erste ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id1 = 10009;</code>
     */
    public function getOutputCharacId1()
    {
        return $this->output_charac_id1;
    }

    /**
     * <pre>
     * Erste ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id1 = 10009;</code>
     */
    public function setOutputCharacId1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->output_charac_id1 = $var;
    }

    /**
     * <pre>
     * Zweite ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id2 = 10010;</code>
     */
    public function getOutputCharacId2()
    {
        return $this->output_charac_id2;
    }

    /**
     * <pre>
     * Zweite ID aus "&#64;OutputCharacteristicIDList", die dem Personentyp "RelatedPersonTypeID" zugeordnet ist, und zu der die identifizierte Person auch via "pm_GetPersonProperties_Pu" Eigenschaften von "RelatedPersonID" ermitteln dürfte
     * </pre>
     *
     * <code>.dstore.values.IntegerValue output_charac_id2 = 10010;</code>
     */
    public function setOutputCharacId2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->output_charac_id2 = $var;
    }

    /**
     * <pre>
     * ID des Personen-Typs von "RelatedPersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_type_id = 10011;</code>
     */
    public function getRelatedPersonTypeId()
    {
        return $this->related_person_type_id;
    }

    /**
     * <pre>
     * ID des Personen-Typs von "RelatedPersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue related_person_type_id = 10011;</code>
     */
    public function setRelatedPersonTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->related_person_type_id = $var;
    }

    /**
     * <pre>
     * ID der Art in der die identifzierte Person und "RelatedPersonID" in Beziehung stehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue relationship_id = 10012;</code>
     */
    public function getRelationshipId()
    {
        return $this->relationship_id;
    }

    /**
     * <pre>
     * ID der Art in der die identifzierte Person und "RelatedPersonID" in Beziehung stehen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue relationship_id = 10012;</code>
     */
    public function setRelationshipId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->relationship_id = $var;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10013;</code>
     */
    public function getValue3RestrictedByPattern()
    {
        return $this->value3_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "Value3" (womöglich wegen Zugriffsbeschränkungen nur einen Teil) ?- NULL : den vollständigen Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "Value3" ist dann NULL
     * </pre>
     *
     * <code>.dstore.values.StringValue value3_restricted_by_pattern = 10013;</code>
     */
    public function setValue3RestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value3_restricted_by_pattern = $var;
    }

}

