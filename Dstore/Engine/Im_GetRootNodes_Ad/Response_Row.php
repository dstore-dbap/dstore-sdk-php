<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_GetRootNodes_Ad.proto

namespace Dstore\Engine\Im_GetRootNodes_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_GetRootNodes_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10002;</code>
     */
    private $active = null;
    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID" (sollte immer "1" sein)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    private $level_no = null;
    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus der Tabelle "dStore"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10004;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID eines "Wurzel"-Elementes. Für den Artikelbaum gibt es nur ein Wurzel-Element, das die ID "0" hat. Alle anderen (sogenannten "PageTreeNodes") haben eine ID kleiner "0".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10005;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Wieviele direkte Nachfolger-Elemente besitzt "TreeNodeID" ? ACHTUNG : Bei der Ermittlung dieser Zahl wird ebenfalls "&#64;OnlyActive" und "&#64;OnlyNotDeleted" entsprechend gefiltert !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue count_successors = 10006;</code>
     */
    private $count_successors = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge innerhalb aller Wurzel-Elemente
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * ID eines Elementes, von dem Eigenschaften geerbt werden - diese Rückgabespalte hat eigentlich für Wurzel-Elemente keine Bedeutung, da im Regelfall immer vom Vorgänger (die genau diese Elemente ja nicht haben) geerbt wird...
     * </pre>
     *
     * <code>.dstore.values.IntegerValue inherits_from = 10008;</code>
     */
    private $inherits_from = null;
    /**
     * <pre>
     * ID eines Symbols, das der "NodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue symbol_id = 10009;</code>
     */
    private $symbol_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImGetRootNodesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10001;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10002;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10002;</code>
     */
    public function setActive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->active = $var;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID" (sollte immer "1" sein)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    public function getLevelNo()
    {
        return $this->level_no;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID" (sollte immer "1" sein)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    public function setLevelNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_no = $var;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus der Tabelle "dStore"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10004;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus der Tabelle "dStore"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10004;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID eines "Wurzel"-Elementes. Für den Artikelbaum gibt es nur ein Wurzel-Element, das die ID "0" hat. Alle anderen (sogenannten "PageTreeNodes") haben eine ID kleiner "0".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10005;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines "Wurzel"-Elementes. Für den Artikelbaum gibt es nur ein Wurzel-Element, das die ID "0" hat. Alle anderen (sogenannten "PageTreeNodes") haben eine ID kleiner "0".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10005;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Wieviele direkte Nachfolger-Elemente besitzt "TreeNodeID" ? ACHTUNG : Bei der Ermittlung dieser Zahl wird ebenfalls "&#64;OnlyActive" und "&#64;OnlyNotDeleted" entsprechend gefiltert !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue count_successors = 10006;</code>
     */
    public function getCountSuccessors()
    {
        return $this->count_successors;
    }

    /**
     * <pre>
     * Wieviele direkte Nachfolger-Elemente besitzt "TreeNodeID" ? ACHTUNG : Bei der Ermittlung dieser Zahl wird ebenfalls "&#64;OnlyActive" und "&#64;OnlyNotDeleted" entsprechend gefiltert !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue count_successors = 10006;</code>
     */
    public function setCountSuccessors(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->count_successors = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge innerhalb aller Wurzel-Elemente
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge innerhalb aller Wurzel-Elemente
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * ID eines Elementes, von dem Eigenschaften geerbt werden - diese Rückgabespalte hat eigentlich für Wurzel-Elemente keine Bedeutung, da im Regelfall immer vom Vorgänger (die genau diese Elemente ja nicht haben) geerbt wird...
     * </pre>
     *
     * <code>.dstore.values.IntegerValue inherits_from = 10008;</code>
     */
    public function getInheritsFrom()
    {
        return $this->inherits_from;
    }

    /**
     * <pre>
     * ID eines Elementes, von dem Eigenschaften geerbt werden - diese Rückgabespalte hat eigentlich für Wurzel-Elemente keine Bedeutung, da im Regelfall immer vom Vorgänger (die genau diese Elemente ja nicht haben) geerbt wird...
     * </pre>
     *
     * <code>.dstore.values.IntegerValue inherits_from = 10008;</code>
     */
    public function setInheritsFrom(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->inherits_from = $var;
    }

    /**
     * <pre>
     * ID eines Symbols, das der "NodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue symbol_id = 10009;</code>
     */
    public function getSymbolId()
    {
        return $this->symbol_id;
    }

    /**
     * <pre>
     * ID eines Symbols, das der "NodeID" zugeordnet ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue symbol_id = 10009;</code>
     */
    public function setSymbolId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->symbol_id = $var;
    }

}

