<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonMetaInformation_Ad.proto

namespace Dstore\Engine\Pm_GetPersonMetaInformation_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonMetaInformation_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID der Informations-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue meta_information_type_id = 10001;</code>
     */
    private $meta_information_type_id = null;
    /**
     * <pre>
     * ID einer Person (entweder "&#64;PersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Art der Information (z.B. "Erstellungsdatum")
     * </pre>
     *
     * <code>.dstore.values.StringValue meta_information_type = 10003;</code>
     */
    private $meta_information_type = null;
    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" wie sie intern gespeichert ist (als Zahl nämlich)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue meta_information = 10004;</code>
     */
    private $meta_information = null;
    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" im "Klartext". Je nach Art der Information steht hier ein Datum im Format "Apr 15 2001 17:55:23:283PM" oder ein "UserName" (aus "UserInfo")
     * </pre>
     *
     * <code>.dstore.values.StringValue translated_meta_information = 10005;</code>
     */
    private $translated_meta_information = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonMetaInformationAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID der Informations-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue meta_information_type_id = 10001;</code>
     */
    public function getMetaInformationTypeId()
    {
        return $this->meta_information_type_id;
    }

    /**
     * <pre>
     * ID der Informations-Art
     * </pre>
     *
     * <code>.dstore.values.IntegerValue meta_information_type_id = 10001;</code>
     */
    public function setMetaInformationTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->meta_information_type_id = $var;
    }

    /**
     * <pre>
     * ID einer Person (entweder "&#64;PersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID einer Person (entweder "&#64;PersonID" oder eine ID, die in "tempdb.dbo.OneID" übergeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10002;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Art der Information (z.B. "Erstellungsdatum")
     * </pre>
     *
     * <code>.dstore.values.StringValue meta_information_type = 10003;</code>
     */
    public function getMetaInformationType()
    {
        return $this->meta_information_type;
    }

    /**
     * <pre>
     * Art der Information (z.B. "Erstellungsdatum")
     * </pre>
     *
     * <code>.dstore.values.StringValue meta_information_type = 10003;</code>
     */
    public function setMetaInformationType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->meta_information_type = $var;
    }

    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" wie sie intern gespeichert ist (als Zahl nämlich)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue meta_information = 10004;</code>
     */
    public function getMetaInformation()
    {
        return $this->meta_information;
    }

    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" wie sie intern gespeichert ist (als Zahl nämlich)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue meta_information = 10004;</code>
     */
    public function setMetaInformation(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->meta_information = $var;
    }

    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" im "Klartext". Je nach Art der Information steht hier ein Datum im Format "Apr 15 2001 17:55:23:283PM" oder ein "UserName" (aus "UserInfo")
     * </pre>
     *
     * <code>.dstore.values.StringValue translated_meta_information = 10005;</code>
     */
    public function getTranslatedMetaInformation()
    {
        return $this->translated_meta_information;
    }

    /**
     * <pre>
     * Die gespeicherte Information (zu "PersonID") zur Art "MetaInformationType" im "Klartext". Je nach Art der Information steht hier ein Datum im Format "Apr 15 2001 17:55:23:283PM" oder ein "UserName" (aus "UserInfo")
     * </pre>
     *
     * <code>.dstore.values.StringValue translated_meta_information = 10005;</code>
     */
    public function setTranslatedMetaInformation(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->translated_meta_information = $var;
    }

}

