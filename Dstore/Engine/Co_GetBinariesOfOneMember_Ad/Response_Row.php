<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto

namespace Dstore\Engine\Co_GetBinariesOfOneMember_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10001;</code>
     */
    private $binary_id = null;
    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10002;</code>
     */
    private $binary_description = null;
    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10003;</code>
     */
    private $input_date_and_time = null;
    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10004;</code>
     */
    private $content_type = null;
    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10005;</code>
     */
    private $file_date_and_time = null;
    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
     */
    private $filesize_in_k_b = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10008;</code>
     */
    private $community_binary_category = null;
    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10009;</code>
     */
    private $community_binary_category_id = null;
    /**
     * <pre>
     * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
     */
    private $quoted_file_size_in_k_b = null;
    /**
     * <pre>
     * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue file_date_and_time_char = 10011;</code>
     */
    private $file_date_and_time_char = null;
    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10012;</code>
     */
    private $m_d5_hash = null;
    /**
     * <pre>
     * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10013;</code>
     */
    private $input_date_and_time_char = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\CoGetBinariesOfOneMemberAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10001;</code>
     */
    public function getBinaryId()
    {
        return $this->binary_id;
    }

    /**
     * <pre>
     * ID eines "Binaries", das zum Mitglied "&#64;CommunityMemberID" in der Kategorie "CommunityBinaryCategoryID" hinterlegt ist
     * </pre>
     *
     * <code>.dstore.values.IntegerValue binary_id = 10001;</code>
     */
    public function setBinaryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->binary_id = $var;
    }

    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10002;</code>
     */
    public function getBinaryDescription()
    {
        return $this->binary_description;
    }

    /**
     * <pre>
     * Beschreibung des Binärobjektes "BinaryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue binary_description = 10002;</code>
     */
    public function setBinaryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->binary_description = $var;
    }

    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10003;</code>
     */
    public function getInputDateAndTime()
    {
        return $this->input_date_and_time;
    }

    /**
     * <pre>
     * Wann wurd das Binärobjekt "BinaryID" dem Mitglied "&#64;CommunityMemberID" zugeordnet
     * </pre>
     *
     * <code>.dstore.values.TimestampValue input_date_and_time = 10003;</code>
     */
    public function setInputDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->input_date_and_time = $var;
    }

    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10004;</code>
     */
    public function getContentType()
    {
        return $this->content_type;
    }

    /**
     * <pre>
     * Um was für einen Dateityp handelt es sich bei dem durch "BinaryID" referenzierten Binärobjekt (z.B. "gif" oder "jpg" etc)
     * </pre>
     *
     * <code>.dstore.values.StringValue content_type = 10004;</code>
     */
    public function setContentType(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->content_type = $var;
    }

    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10005;</code>
     */
    public function getFileDateAndTime()
    {
        return $this->file_date_and_time;
    }

    /**
     * <pre>
     * Erstellungsdatum der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.TimestampValue file_date_and_time = 10005;</code>
     */
    public function setFileDateAndTime(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->file_date_and_time = $var;
    }

    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
     */
    public function getFilesizeInKB()
    {
        return $this->filesize_in_k_b;
    }

    /**
     * <pre>
     * Größe des Binärobjektes "BinaryID" (bzw. der referenzierten Datei, die ja nicht in der Datenbank gespeichert wird !) in KiloBytes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue filesize_in_k_b = 10006;</code>
     */
    public function setFilesizeInKB(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->filesize_in_k_b = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge der "BinaryID" innerhalb aller "Binaries" der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10007;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10008;</code>
     */
    public function getCommunityBinaryCategory()
    {
        return $this->community_binary_category;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "CommunityBinaryCategoryID"
     * </pre>
     *
     * <code>.dstore.values.StringValue community_binary_category = 10008;</code>
     */
    public function setCommunityBinaryCategory(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->community_binary_category = $var;
    }

    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10009;</code>
     */
    public function getCommunityBinaryCategoryId()
    {
        return $this->community_binary_category_id;
    }

    /**
     * <pre>
     * ID einer Kategorie von Binärdateien (z.B. für den "Steckbrief" eines Mitglieds)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue community_binary_category_id = 10009;</code>
     */
    public function setCommunityBinaryCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->community_binary_category_id = $var;
    }

    /**
     * <pre>
     * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
     */
    public function getQuotedFileSizeInKB()
    {
        return $this->quoted_file_size_in_k_b;
    }

    /**
     * <pre>
     * Angabe in KiloBytes, die dem Mitglied auf sein Quota angerechnet wird (Immer gleich "FileSizeInKB" oder "0", wenn quasi nur eine Referenz gespeichert wird auf eine Datei, die ein anderes Mitglied hochgeladen hat)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quoted_file_size_in_k_b = 10010;</code>
     */
    public function setQuotedFileSizeInKB(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quoted_file_size_in_k_b = $var;
    }

    /**
     * <pre>
     * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue file_date_and_time_char = 10011;</code>
     */
    public function getFileDateAndTimeChar()
    {
        return $this->file_date_and_time_char;
    }

    /**
     * <pre>
     * "FileDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue file_date_and_time_char = 10011;</code>
     */
    public function setFileDateAndTimeChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->file_date_and_time_char = $var;
    }

    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10012;</code>
     */
    public function getMD5Hash()
    {
        return $this->m_d5_hash;
    }

    /**
     * <pre>
     * "MD5-Hash" der durch "BinaryID" referenzierten Datei
     * </pre>
     *
     * <code>.dstore.values.StringValue m_d5_hash = 10012;</code>
     */
    public function setMD5Hash(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->m_d5_hash = $var;
    }

    /**
     * <pre>
     * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10013;</code>
     */
    public function getInputDateAndTimeChar()
    {
        return $this->input_date_and_time_char;
    }

    /**
     * <pre>
     * "InputDateAndTime" als "String" - in der Form "15.01.2001 22:16:55"
     * </pre>
     *
     * <code>.dstore.values.StringValue input_date_and_time_char = 10013;</code>
     */
    public function setInputDateAndTimeChar(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->input_date_and_time_char = $var;
    }

}

