<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/pm_GetPersonProperties_Ad.proto

namespace Dstore\Engine\Pm_GetPersonProperties_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.pm_GetPersonProperties_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
     * </pre>
     *
     * <code>.dstore.values.StringValue value_restricted_by_pattern = 10001;</code>
     */
    private $value_restricted_by_pattern = null;
    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten die ID des Wertes "ActualValue" (bzw. so wie tatsächlich intern gespeichert, falls aufgrund von "ValueRestrictedByPattern" nur ein Teil des Wertes zurückgegeben wird).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue actual_value_id = 10002;</code>
     */
    private $actual_value_id = null;
    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    private $characteristic_description = null;
    /**
     * <pre>
     * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10004;</code>
     */
    private $field_type_id = null;
    /**
     * <pre>
     * Immer "0" wenn "&#64;GetDetailsInfo = 0" ist. Sonst steht hier, ob "PersonID" zum Merkmal "CharacteristicID" sogenannte "Details" besitzt ("1") oder nicht ("0") - s.a. "pm_GetPersonDetails_Ad"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue details_exist = 10005;</code>
     */
    private $details_exist = null;
    /**
     * <pre>
     * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10006;</code>
     */
    private $characteristic_id = null;
    /**
     * <pre>
     * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10007;</code>
     */
    private $value_id = null;
    /**
     * <pre>
     * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue modify = 10008;</code>
     */
    private $modify = null;
    /**
     * <pre>
     * Bestimmt die Reihenfolge des Merkmals "CharacteristicID" innerhalb aller Merkmale
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10009;</code>
     */
    private $sort_no = null;
    /**
     * <pre>
     * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue max_length = 10010;</code>
     */
    private $max_length = null;
    /**
     * <pre>
     * Gibt an, ob das Merkmal "CharacteristicID" Pflicht innerhalb der Kategorie "PersonCharacCategoryID" ist ("1") oder nicht ("0"). Hinweis : Ist unabhängig von "&#64;IncludePersonCharacCategoryID" gefüllt !
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required_charac_category = 10011;</code>
     */
    private $required_charac_category = null;
    /**
     * <pre>
     * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10012;</code>
     */
    private $predefined_values = null;
    /**
     * <pre>
     * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist. Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10013;</code>
     */
    private $person_charac_category_id = null;
    /**
     * <pre>
     * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
     * </pre>
     *
     * <code>.dstore.values.StringValue read_access_restriction_pattern = 10014;</code>
     */
    private $read_access_restriction_pattern = null;
    /**
     * <pre>
     * ID einer Person, die via "tempdb.dbo.OneID" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10015;</code>
     */
    private $person_id = null;
    /**
     * <pre>
     * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10016;</code>
     */
    private $required = null;
    /**
     * <pre>
     * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft von "PersonID" zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue actual_value = 10017;</code>
     */
    private $actual_value = null;
    /**
     * <pre>
     * Eigenschaft der Person "&#64;PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10018;</code>
     */
    private $value = null;
    /**
     * <pre>
     * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue visible = 10019;</code>
     */
    private $visible = null;
    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier der Zeitpunkt, an dem die Eigenschaft zum Merkmal "CharacteristicID" zuletzt geändert (d.h. auf den Wert "Value" gesetzt) wurde.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10020;</code>
     */
    private $last_edited = null;
    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID". Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10021;</code>
     */
    private $category_description = null;
    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 20001;</code>
     */
    private $person_type_description = null;
    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 20003;</code>
     */
    private $person_type_id = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\PmGetPersonPropertiesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
     * </pre>
     *
     * <code>.dstore.values.StringValue value_restricted_by_pattern = 10001;</code>
     */
    public function getValueRestrictedByPattern()
    {
        return $this->value_restricted_by_pattern;
    }

    /**
     * <pre>
     * Was enthält "(Actual)Value" (möglicherw. wg. Zugr.beschr. nur einen Teil) ?- NULL : den vollst. Wert- "#left(&lt;n&gt;)#" : nur die ERSTEN n Zeichen- "#right(&lt;n&gt;)#" : nur die LETZTEN n ZeichenAnmerkung : "n = 0" möglich, "(Actual)Value" ist dann "NULL"
     * </pre>
     *
     * <code>.dstore.values.StringValue value_restricted_by_pattern = 10001;</code>
     */
    public function setValueRestrictedByPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value_restricted_by_pattern = $var;
    }

    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten die ID des Wertes "ActualValue" (bzw. so wie tatsächlich intern gespeichert, falls aufgrund von "ValueRestrictedByPattern" nur ein Teil des Wertes zurückgegeben wird).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue actual_value_id = 10002;</code>
     */
    public function getActualValueId()
    {
        return $this->actual_value_id;
    }

    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten die ID des Wertes "ActualValue" (bzw. so wie tatsächlich intern gespeichert, falls aufgrund von "ValueRestrictedByPattern" nur ein Teil des Wertes zurückgegeben wird).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue actual_value_id = 10002;</code>
     */
    public function setActualValueId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->actual_value_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function getCharacteristicDescription()
    {
        return $this->characteristic_description;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function setCharacteristicDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_description = $var;
    }

    /**
     * <pre>
     * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10004;</code>
     */
    public function getFieldTypeId()
    {
        return $this->field_type_id;
    }

    /**
     * <pre>
     * ID eines "Feld-Typs", von dem alle Eigenschaften des Merkmals "CharacteristicID" sein müssen (z.B. "Text mit maximal 20 Zeichen")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue field_type_id = 10004;</code>
     */
    public function setFieldTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->field_type_id = $var;
    }

    /**
     * <pre>
     * Immer "0" wenn "&#64;GetDetailsInfo = 0" ist. Sonst steht hier, ob "PersonID" zum Merkmal "CharacteristicID" sogenannte "Details" besitzt ("1") oder nicht ("0") - s.a. "pm_GetPersonDetails_Ad"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue details_exist = 10005;</code>
     */
    public function getDetailsExist()
    {
        return $this->details_exist;
    }

    /**
     * <pre>
     * Immer "0" wenn "&#64;GetDetailsInfo = 0" ist. Sonst steht hier, ob "PersonID" zum Merkmal "CharacteristicID" sogenannte "Details" besitzt ("1") oder nicht ("0") - s.a. "pm_GetPersonDetails_Ad"
     * </pre>
     *
     * <code>.dstore.values.BooleanValue details_exist = 10005;</code>
     */
    public function setDetailsExist(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->details_exist = $var;
    }

    /**
     * <pre>
     * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10006;</code>
     */
    public function getCharacteristicId()
    {
        return $this->characteristic_id;
    }

    /**
     * <pre>
     * ID eines Personen-Merkmals, auf das sich die Eigenschaft "Value" bezieht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10006;</code>
     */
    public function setCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->characteristic_id = $var;
    }

    /**
     * <pre>
     * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10007;</code>
     */
    public function getValueId()
    {
        return $this->value_id;
    }

    /**
     * <pre>
     * ID der Eigenschaft "Value". Hinweis : KANN "NULL" sein (selbst wenn "Value" NICHT "NULL" ist), falls nicht die aktuellen Eigenschaften ermittelt wurden (wenn also "&#64;DateAndTime" angegeben wurde), weil in der Historie KEINE ID gespeichert wird !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10007;</code>
     */
    public function setValueId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->value_id = $var;
    }

    /**
     * <pre>
     * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue modify = 10008;</code>
     */
    public function getModify()
    {
        return $this->modify;
    }

    /**
     * <pre>
     * Dürfen "publicuser"/"Pu"-Prozed. Eigensch.-Änderung. vornehmen ?- "0" : Nein- "1" : Ja- "2" : Nur Neu-Anlage- "3" : Nur Ändern- "4" : Nur Neu-Anlage u. Ändern- "5" : Nur Löschen- "6" : Nur Neu-Anlage u. Löschen- "7" : Nur Ändern u. Löschen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue modify = 10008;</code>
     */
    public function setModify(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->modify = $var;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge des Merkmals "CharacteristicID" innerhalb aller Merkmale
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10009;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Reihenfolge des Merkmals "CharacteristicID" innerhalb aller Merkmale
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10009;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

    /**
     * <pre>
     * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue max_length = 10010;</code>
     */
    public function getMaxLength()
    {
        return $this->max_length;
    }

    /**
     * <pre>
     * Maximale Anzahl Zeichen, die Eigenschaften/Werte zum Merkmal "CharacteristicID" haben dürfen
     * </pre>
     *
     * <code>.dstore.values.IntegerValue max_length = 10010;</code>
     */
    public function setMaxLength(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->max_length = $var;
    }

    /**
     * <pre>
     * Gibt an, ob das Merkmal "CharacteristicID" Pflicht innerhalb der Kategorie "PersonCharacCategoryID" ist ("1") oder nicht ("0"). Hinweis : Ist unabhängig von "&#64;IncludePersonCharacCategoryID" gefüllt !
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required_charac_category = 10011;</code>
     */
    public function getRequiredCharacCategory()
    {
        return $this->required_charac_category;
    }

    /**
     * <pre>
     * Gibt an, ob das Merkmal "CharacteristicID" Pflicht innerhalb der Kategorie "PersonCharacCategoryID" ist ("1") oder nicht ("0"). Hinweis : Ist unabhängig von "&#64;IncludePersonCharacCategoryID" gefüllt !
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required_charac_category = 10011;</code>
     */
    public function setRequiredCharacCategory(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->required_charac_category = $var;
    }

    /**
     * <pre>
     * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10012;</code>
     */
    public function getPredefinedValues()
    {
        return $this->predefined_values;
    }

    /**
     * <pre>
     * Hat das Merkmal "CharacteristicID" nur vordefinierte Werte ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10012;</code>
     */
    public function setPredefinedValues(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->predefined_values = $var;
    }

    /**
     * <pre>
     * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist. Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10013;</code>
     */
    public function getPersonCharacCategoryId()
    {
        return $this->person_charac_category_id;
    }

    /**
     * <pre>
     * ID der Merkmal-Kategorie, der das Merkmal "CharacteristicID" zugeordnet ist. Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_charac_category_id = 10013;</code>
     */
    public function setPersonCharacCategoryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_charac_category_id = $var;
    }

    /**
     * <pre>
     * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
     * </pre>
     *
     * <code>.dstore.values.StringValue read_access_restriction_pattern = 10014;</code>
     */
    public function getReadAccessRestrictionPattern()
    {
        return $this->read_access_restriction_pattern;
    }

    /**
     * <pre>
     * "NULL" w. "Visible = 1". Welch. Teil v. Eigensch. zu "CharacteristicID" für d. "publicuser" ausgeg. werd. :- "#left(&lt;n&gt;)#" : d. ERSTEN n Zeich. ("n = 0" mögl.)- "#right(&lt;n&gt;)#" : d. LETZTEN n Zeich. ("n = 0" mögl.)- NULL : Datens. zum Merkmal fehlt
     * </pre>
     *
     * <code>.dstore.values.StringValue read_access_restriction_pattern = 10014;</code>
     */
    public function setReadAccessRestrictionPattern(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->read_access_restriction_pattern = $var;
    }

    /**
     * <pre>
     * ID einer Person, die via "tempdb.dbo.OneID" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10015;</code>
     */
    public function getPersonId()
    {
        return $this->person_id;
    }

    /**
     * <pre>
     * ID einer Person, die via "tempdb.dbo.OneID" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_id = 10015;</code>
     */
    public function setPersonId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_id = $var;
    }

    /**
     * <pre>
     * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10016;</code>
     */
    public function getRequired()
    {
        return $this->required;
    }

    /**
     * <pre>
     * Wird hier eine "1" ausgegeben, bedeutet das folgendes : Jede Person eines Personen-Typs, dem das Merkmal "CharacteristicID" zugewiesen ist, MUSS eine Eigenschaft zum Merkmal "CharacteristicID" angeben, ansonsten kann die Person nicht angelegt werden.
     * </pre>
     *
     * <code>.dstore.values.BooleanValue required = 10016;</code>
     */
    public function setRequired(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->required = $var;
    }

    /**
     * <pre>
     * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft von "PersonID" zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue actual_value = 10017;</code>
     */
    public function getActualValue()
    {
        return $this->actual_value;
    }

    /**
     * <pre>
     * "NULL" wenn "&#64;GetActualProperties = 0". Sonst die AKTUELLE Eigenschaft von "PersonID" zu "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue actual_value = 10017;</code>
     */
    public function setActualValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->actual_value = $var;
    }

    /**
     * <pre>
     * Eigenschaft der Person "&#64;PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10018;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * Eigenschaft der Person "&#64;PersonID" zum Merkmal "CharacteristicID". Kann aufgrund von Zugriffsbeschränkungen "NULL" oder unvollständig sein, was dann durch "ValueRestrictedByPattern" gekennzeichnet ist.
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10018;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value = $var;
    }

    /**
     * <pre>
     * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue visible = 10019;</code>
     */
    public function getVisible()
    {
        return $this->visible;
    }

    /**
     * <pre>
     * Wenn "0", werden durch vom "publicuser" ausgeführte Prozeduren bzw. durch "Pu"-Prozeduren (z.B. "pm_GetPersonProperties_Pu") KEINE Eigenschaften/Details bzw. nur Teile von Eigenschaften (s. "ReadAccessRestrictionPattern") zur "CharacteristicID" ausgegeben
     * </pre>
     *
     * <code>.dstore.values.BooleanValue visible = 10019;</code>
     */
    public function setVisible(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->visible = $var;
    }

    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier der Zeitpunkt, an dem die Eigenschaft zum Merkmal "CharacteristicID" zuletzt geändert (d.h. auf den Wert "Value" gesetzt) wurde.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10020;</code>
     */
    public function getLastEdited()
    {
        return $this->last_edited;
    }

    /**
     * <pre>
     * Immer "NULL", falls "&#64;GetActualProperties = 0" übergeben wurde. Ansonsten steht hier der Zeitpunkt, an dem die Eigenschaft zum Merkmal "CharacteristicID" zuletzt geändert (d.h. auf den Wert "Value" gesetzt) wurde.
     * </pre>
     *
     * <code>.dstore.values.TimestampValue last_edited = 10020;</code>
     */
    public function setLastEdited(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\TimestampValue::class);
        $this->last_edited = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID". Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10021;</code>
     */
    public function getCategoryDescription()
    {
        return $this->category_description;
    }

    /**
     * <pre>
     * Bezeichnung der Kategorie "PersonCharacCategoryID". Nur gefüllt bei "&#64;IncludePersonCharacCategoryID = 1", sonst "NULL" !
     * </pre>
     *
     * <code>.dstore.values.StringValue category_description = 10021;</code>
     */
    public function setCategoryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->category_description = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 20001;</code>
     */
    public function getPersonTypeDescription()
    {
        return $this->person_type_description;
    }

    /**
     * <pre>
     * Bezeichnung des Personen-Typs "PersonTypeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue person_type_description = 20001;</code>
     */
    public function setPersonTypeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->person_type_description = $var;
    }

    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 20003;</code>
     */
    public function getPersonTypeId()
    {
        return $this->person_type_id;
    }

    /**
     * <pre>
     * ID des Typs der Person "PersonID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue person_type_id = 20003;</code>
     */
    public function setPersonTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->person_type_id = $var;
    }

}

