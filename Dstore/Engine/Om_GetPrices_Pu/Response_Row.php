<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/om_GetPrices_Pu.proto

namespace Dstore\Engine\Om_GetPrices_Pu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.om_GetPrices_Pu.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_netto_price = 10001;</code>
     */
    private $total_netto_price = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_gross_surcharge = 10002;</code>
     */
    private $precise_abs_unit_gross_surcharge = null;
    /**
     * <pre>
     * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "TreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue price_node_characteristic_id = 10003;</code>
     */
    private $price_node_characteristic_id = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_netto_surcharge = 10004;</code>
     */
    private $absolute_unit_netto_surcharge = null;
    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_gross_price = 10005;</code>
     */
    private $unit_gross_price = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_net_surcharge = 10006;</code>
     */
    private $absolute_total_net_surcharge = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_gross_surcharge = 10007;</code>
     */
    private $absolute_total_gross_surcharge = null;
    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_brutto_price = 10008;</code>
     */
    private $unit_brutto_price = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_gross_price = 10009;</code>
     */
    private $precise_unit_gross_price = null;
    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10010;</code>
     */
    private $unit_net_price = null;
    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_brutto_price = 10011;</code>
     */
    private $total_brutto_price = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_net_surcharge = 10012;</code>
     */
    private $precise_abs_unit_net_surcharge = null;
    /**
     * <pre>
     * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_reason = 10013;</code>
     */
    private $surcharge_reason = null;
    /**
     * <pre>
     * ID eines Artikel-Elementes, zu dem der Verkaufspreis ermittelt wurde (also entweder ein Element, das in "&#64;NodeIDs" übergeben wurde, oder ein Element, das zu einer "TreeNodeID" korrespondiert, die in "&#64;NodeIDs" angegeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * ID eines zur "NodeID" korrespondierenden Elementes im Artikelbaum, das zur Preisermittlung herangezogen wurde bzw. (falls "&#64;IsTreeNodeID = 1") eine ID, die in "&#64;NodeIDs" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_netto_surcharge = 10016;</code>
     */
    private $absolute_total_netto_surcharge = null;
    /**
     * <pre>
     * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag.
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_surcharge = 10017;</code>
     */
    private $relative_surcharge = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_brutto_surcharge = 10018;</code>
     */
    private $absolute_total_brutto_surcharge = null;
    /**
     * <pre>
     * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben. Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist oder keine Rabattierung vorliegt !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_generated_by_camp_ids = 10019;</code>
     */
    private $surcharge_generated_by_camp_ids = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_gross_price = 10020;</code>
     */
    private $precise_total_gross_price = null;
    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_netto_price = 10021;</code>
     */
    private $unit_netto_price = null;
    /**
     * <pre>
     * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue taxes_multiplier = 10022;</code>
     */
    private $taxes_multiplier = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_gross_surcharge = 10023;</code>
     */
    private $precise_abs_total_gross_surcharge = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_net_surcharge = 10024;</code>
     */
    private $precise_abs_total_net_surcharge = null;
    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10025;</code>
     */
    private $total_net_price = null;
    /**
     * <pre>
     * Wieviel von dem Artikel bestellt werden soll. Hier steht also entweder die Zahl, die in "&#64;Quantities" angegeben wurde, oder "1".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10026;</code>
     */
    private $quantity = null;
    /**
     * <pre>
     * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "TreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
     * </pre>
     *
     * <code>.dstore.values.StringValue quantity_per_bundle_item_set_id_list = 10027;</code>
     */
    private $quantity_per_bundle_item_set_id_list = null;
    /**
     * <pre>
     * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10028;</code>
     */
    private $surcharge_value = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_net_surcharge = 10029;</code>
     */
    private $absolute_unit_net_surcharge = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_brutto_surcharge = 10030;</code>
     */
    private $absolute_unit_brutto_surcharge = null;
    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_gross_surcharge = 10031;</code>
     */
    private $absolute_unit_gross_surcharge = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_net_price = 10032;</code>
     */
    private $precise_total_net_price = null;
    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10033;</code>
     */
    private $surcharge_type_id = null;
    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_net_price = 10034;</code>
     */
    private $precise_unit_net_price = null;
    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_gross_price = 10035;</code>
     */
    private $total_gross_price = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\OmGetPricesPu::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_netto_price = 10001;</code>
     */
    public function getTotalNettoPrice()
    {
        return $this->total_netto_price;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_netto_price = 10001;</code>
     */
    public function setTotalNettoPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_netto_price = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_gross_surcharge = 10002;</code>
     */
    public function getPreciseAbsUnitGrossSurcharge()
    {
        return $this->precise_abs_unit_gross_surcharge;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_gross_surcharge = 10002;</code>
     */
    public function setPreciseAbsUnitGrossSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_abs_unit_gross_surcharge = $var;
    }

    /**
     * <pre>
     * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "TreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue price_node_characteristic_id = 10003;</code>
     */
    public function getPriceNodeCharacteristicId()
    {
        return $this->price_node_characteristic_id;
    }

    /**
     * <pre>
     * Merkmal-ID, die den Preis bestimmt hat (genauer : die Eigenschaft von "TreeNodeID" zu diesem Merkmal hat den Preis bestimmt)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue price_node_characteristic_id = 10003;</code>
     */
    public function setPriceNodeCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->price_node_characteristic_id = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_netto_surcharge = 10004;</code>
     */
    public function getAbsoluteUnitNettoSurcharge()
    {
        return $this->absolute_unit_netto_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_netto_surcharge = 10004;</code>
     */
    public function setAbsoluteUnitNettoSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_unit_netto_surcharge = $var;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_gross_price = 10005;</code>
     */
    public function getUnitGrossPrice()
    {
        return $this->unit_gross_price;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_gross_price = 10005;</code>
     */
    public function setUnitGrossPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->unit_gross_price = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_net_surcharge = 10006;</code>
     */
    public function getAbsoluteTotalNetSurcharge()
    {
        return $this->absolute_total_net_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_net_surcharge = 10006;</code>
     */
    public function setAbsoluteTotalNetSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_total_net_surcharge = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_gross_surcharge = 10007;</code>
     */
    public function getAbsoluteTotalGrossSurcharge()
    {
        return $this->absolute_total_gross_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_gross_surcharge = 10007;</code>
     */
    public function setAbsoluteTotalGrossSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_total_gross_surcharge = $var;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_brutto_price = 10008;</code>
     */
    public function getUnitBruttoPrice()
    {
        return $this->unit_brutto_price;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_brutto_price = 10008;</code>
     */
    public function setUnitBruttoPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->unit_brutto_price = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_gross_price = 10009;</code>
     */
    public function getPreciseUnitGrossPrice()
    {
        return $this->precise_unit_gross_price;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_gross_price = 10009;</code>
     */
    public function setPreciseUnitGrossPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_unit_gross_price = $var;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10010;</code>
     */
    public function getUnitNetPrice()
    {
        return $this->unit_net_price;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_net_price = 10010;</code>
     */
    public function setUnitNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->unit_net_price = $var;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_brutto_price = 10011;</code>
     */
    public function getTotalBruttoPrice()
    {
        return $this->total_brutto_price;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_brutto_price = 10011;</code>
     */
    public function setTotalBruttoPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_brutto_price = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_net_surcharge = 10012;</code>
     */
    public function getPreciseAbsUnitNetSurcharge()
    {
        return $this->precise_abs_unit_net_surcharge;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteUnitNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_unit_net_surcharge = 10012;</code>
     */
    public function setPreciseAbsUnitNetSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_abs_unit_net_surcharge = $var;
    }

    /**
     * <pre>
     * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_reason = 10013;</code>
     */
    public function getSurchargeReason()
    {
        return $this->surcharge_reason;
    }

    /**
     * <pre>
     * "Grund" für einen evtl. vorhandenen Rabatt (z.B. ein "Aktionsname", der letztlich von der individuellen Rabatt-Ermittlung durch "_ac_om_GetSurcharges" stammt). Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_reason = 10013;</code>
     */
    public function setSurchargeReason(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_reason = $var;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, zu dem der Verkaufspreis ermittelt wurde (also entweder ein Element, das in "&#64;NodeIDs" übergeben wurde, oder ein Element, das zu einer "TreeNodeID" korrespondiert, die in "&#64;NodeIDs" angegeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID eines Artikel-Elementes, zu dem der Verkaufspreis ermittelt wurde (also entweder ein Element, das in "&#64;NodeIDs" übergeben wurde, oder ein Element, das zu einer "TreeNodeID" korrespondiert, die in "&#64;NodeIDs" angegeben wurde)
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10014;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * ID eines zur "NodeID" korrespondierenden Elementes im Artikelbaum, das zur Preisermittlung herangezogen wurde bzw. (falls "&#64;IsTreeNodeID = 1") eine ID, die in "&#64;NodeIDs" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines zur "NodeID" korrespondierenden Elementes im Artikelbaum, das zur Preisermittlung herangezogen wurde bzw. (falls "&#64;IsTreeNodeID = 1") eine ID, die in "&#64;NodeIDs" übergeben wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10015;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_netto_surcharge = 10016;</code>
     */
    public function getAbsoluteTotalNettoSurcharge()
    {
        return $this->absolute_total_netto_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalNetPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_netto_surcharge = 10016;</code>
     */
    public function setAbsoluteTotalNettoSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_total_netto_surcharge = $var;
    }

    /**
     * <pre>
     * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag.
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_surcharge = 10017;</code>
     */
    public function getRelativeSurcharge()
    {
        return $this->relative_surcharge;
    }

    /**
     * <pre>
     * Relativer Rabatt/Aufschlag in Prozent (der in den Preisen bereits enthalten ist !). Ein negativer Wert bedeutet einen Rabatt, sonst beinhaltet der Verkaufspreis einen Aufschlag.
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_surcharge = 10017;</code>
     */
    public function setRelativeSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->relative_surcharge = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_brutto_surcharge = 10018;</code>
     */
    public function getAbsoluteTotalBruttoSurcharge()
    {
        return $this->absolute_total_brutto_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der im "TotalGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_total_brutto_surcharge = 10018;</code>
     */
    public function setAbsoluteTotalBruttoSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_total_brutto_surcharge = $var;
    }

    /**
     * <pre>
     * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben. Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist oder keine Rabattierung vorliegt !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_generated_by_camp_ids = 10019;</code>
     */
    public function getSurchargeGeneratedByCampIds()
    {
        return $this->surcharge_generated_by_camp_ids;
    }

    /**
     * <pre>
     * Liste von "CampaignID"s der Verkaufsaktionen, die zur Rabattierung der Position geführt haben. Immer "NULL", wenn "&#64;GetAdditionalPriceInfo = 0" ist oder keine Rabattierung vorliegt !
     * </pre>
     *
     * <code>.dstore.values.StringValue surcharge_generated_by_camp_ids = 10019;</code>
     */
    public function setSurchargeGeneratedByCampIds(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->surcharge_generated_by_camp_ids = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_gross_price = 10020;</code>
     */
    public function getPreciseTotalGrossPrice()
    {
        return $this->precise_total_gross_price;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalGrossPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_gross_price = 10020;</code>
     */
    public function setPreciseTotalGrossPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_total_gross_price = $var;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_netto_price = 10021;</code>
     */
    public function getUnitNettoPrice()
    {
        return $this->unit_netto_price;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel EINMAL bestellt (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue unit_netto_price = 10021;</code>
     */
    public function setUnitNettoPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->unit_netto_price = $var;
    }

    /**
     * <pre>
     * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue taxes_multiplier = 10022;</code>
     */
    public function getTaxesMultiplier()
    {
        return $this->taxes_multiplier;
    }

    /**
     * <pre>
     * Mehrwertsteuer als "Multiplikator". D.h. beträgt die Mehrwertsteuer z.B. "16 %", steht hier der Wert "1.16".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue taxes_multiplier = 10022;</code>
     */
    public function setTaxesMultiplier(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->taxes_multiplier = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_gross_surcharge = 10023;</code>
     */
    public function getPreciseAbsTotalGrossSurcharge()
    {
        return $this->precise_abs_total_gross_surcharge;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_gross_surcharge = 10023;</code>
     */
    public function setPreciseAbsTotalGrossSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_abs_total_gross_surcharge = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_net_surcharge = 10024;</code>
     */
    public function getPreciseAbsTotalNetSurcharge()
    {
        return $this->precise_abs_total_net_surcharge;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "AbsoluteTotalNetSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_abs_total_net_surcharge = 10024;</code>
     */
    public function setPreciseAbsTotalNetSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_abs_total_net_surcharge = $var;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10025;</code>
     */
    public function getTotalNetPrice()
    {
        return $this->total_net_price;
    }

    /**
     * <pre>
     * Netto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_net_price = 10025;</code>
     */
    public function setTotalNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_net_price = $var;
    }

    /**
     * <pre>
     * Wieviel von dem Artikel bestellt werden soll. Hier steht also entweder die Zahl, die in "&#64;Quantities" angegeben wurde, oder "1".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10026;</code>
     */
    public function getQuantity()
    {
        return $this->quantity;
    }

    /**
     * <pre>
     * Wieviel von dem Artikel bestellt werden soll. Hier steht also entweder die Zahl, die in "&#64;Quantities" angegeben wurde, oder "1".
     * </pre>
     *
     * <code>.dstore.values.IntegerValue quantity = 10026;</code>
     */
    public function setQuantity(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->quantity = $var;
    }

    /**
     * <pre>
     * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "TreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
     * </pre>
     *
     * <code>.dstore.values.StringValue quantity_per_bundle_item_set_id_list = 10027;</code>
     */
    public function getQuantityPerBundleItemSetIdList()
    {
        return $this->quantity_per_bundle_item_set_id_list;
    }

    /**
     * <pre>
     * Durch ein "," getrennte Liste von Listen, deren Werte wiederum durch "&amp;" getrennt sind, und ein Wert die Form &lt;Menge&gt;x&lt;BundleItemSetID&gt; hat. Dies besagt jeweils, wieviel (&lt;Menge&gt;) von "Quantity" der "TreeNodeID" zu der "&lt;ItemSetID&gt;" des Bundles gehört.
     * </pre>
     *
     * <code>.dstore.values.StringValue quantity_per_bundle_item_set_id_list = 10027;</code>
     */
    public function setQuantityPerBundleItemSetIdList(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->quantity_per_bundle_item_set_id_list = $var;
    }

    /**
     * <pre>
     * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10028;</code>
     */
    public function getSurchargeValue()
    {
        return $this->surcharge_value;
    }

    /**
     * <pre>
     * Der Wert des Aufschlags bzw. Rabattes, der verwendet wurde. Ist die "SurchargeTypeID" relativ definiert, entspricht dieser Wert dem in "RelativeSurcharge", andernfalls dem Wert in "AbsoluteUnitNetSurcharge" bzw. "AbsoluteUnitGrossSurcharge"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue surcharge_value = 10028;</code>
     */
    public function setSurchargeValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->surcharge_value = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_net_surcharge = 10029;</code>
     */
    public function getAbsoluteUnitNetSurcharge()
    {
        return $this->absolute_unit_net_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitNetPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_net_surcharge = 10029;</code>
     */
    public function setAbsoluteUnitNetSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_unit_net_surcharge = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_brutto_surcharge = 10030;</code>
     */
    public function getAbsoluteUnitBruttoSurcharge()
    {
        return $this->absolute_unit_brutto_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist (Englischer Spaltenname ist NICHT korrekt, NICHT mehr verwenden !)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_brutto_surcharge = 10030;</code>
     */
    public function setAbsoluteUnitBruttoSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_unit_brutto_surcharge = $var;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_gross_surcharge = 10031;</code>
     */
    public function getAbsoluteUnitGrossSurcharge()
    {
        return $this->absolute_unit_gross_surcharge;
    }

    /**
     * <pre>
     * Absoluter Rabatt/Aufschlag, der in "UnitGrossPrice" bereits ENTHALTEN ist
     * </pre>
     *
     * <code>.dstore.values.DecimalValue absolute_unit_gross_surcharge = 10031;</code>
     */
    public function setAbsoluteUnitGrossSurcharge(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->absolute_unit_gross_surcharge = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_net_price = 10032;</code>
     */
    public function getPreciseTotalNetPrice()
    {
        return $this->precise_total_net_price;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "TotalNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_total_net_price = 10032;</code>
     */
    public function setPreciseTotalNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_total_net_price = $var;
    }

    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10033;</code>
     */
    public function getSurchargeTypeId()
    {
        return $this->surcharge_type_id;
    }

    /**
     * <pre>
     * ID einer Preis-Aufschlags/Rabatt-Art, die ermittelt und bei der Preis-Ermittlung angewandt wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue surcharge_type_id = 10033;</code>
     */
    public function setSurchargeTypeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->surcharge_type_id = $var;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_net_price = 10034;</code>
     */
    public function getPreciseUnitNetPrice()
    {
        return $this->precise_unit_net_price;
    }

    /**
     * <pre>
     * Exakter (intern gespeicherter) Wert für "UnitNetPrice"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue precise_unit_net_price = 10034;</code>
     */
    public function setPreciseUnitNetPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->precise_unit_net_price = $var;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_gross_price = 10035;</code>
     */
    public function getTotalGrossPrice()
    {
        return $this->total_gross_price;
    }

    /**
     * <pre>
     * Brutto-Preis von "NodeID", wenn man den Artikel "Quantity-Mal" bestellt
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_gross_price = 10035;</code>
     */
    public function setTotalGrossPrice(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_gross_price = $var;
    }

}

