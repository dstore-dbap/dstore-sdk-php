<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetExecuteRights_Ad.proto

namespace Dstore\Engine\Mi_GetExecuteRights_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetExecuteRights_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue procedure_exists = 10001;</code>
     */
    private $procedure_exists = null;
    /**
     * <pre>
     * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_on_database_level = 10002;</code>
     */
    private $user_exec_right_on_database_level = null;
    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue public_exec_right_on_database_level = 10003;</code>
     */
    private $public_exec_right_on_database_level = null;
    /**
     * <pre>
     * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_id = 10004;</code>
     */
    private $procedure_id = null;
    /**
     * <pre>
     * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10005;</code>
     */
    private $user_name = null;
    /**
     * <pre>
     * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue group_exec_right_ondstore_level = 10006;</code>
     */
    private $group_exec_right_ondstore_level = null;
    /**
     * <pre>
     * Name einer Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10007;</code>
     */
    private $procedure_name = null;
    /**
     * <pre>
     * ID des Benutzers "UserName" aus "UserInfo"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10008;</code>
     */
    private $user_id = null;
    /**
     * <pre>
     * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue execute_right = 10009;</code>
     */
    private $execute_right = null;
    /**
     * <pre>
     * Kurz-Beschreibung der Prozedur "ProcedureName"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10010;</code>
     */
    private $procedure_function = null;
    /**
     * <pre>
     * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_ondstore_level = 10011;</code>
     */
    private $user_exec_right_ondstore_level = null;
    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue group_exec_right_on_database_level = 10012;</code>
     */
    private $group_exec_right_on_database_level = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetExecuteRightsAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue procedure_exists = 10001;</code>
     */
    public function getProcedureExists()
    {
        return $this->procedure_exists;
    }

    /**
     * <pre>
     * Handelt es sich bei "ProcedureName" auch um eine existierende Prozedure des "dStore" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue procedure_exists = 10001;</code>
     */
    public function setProcedureExists(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->procedure_exists = $var;
    }

    /**
     * <pre>
     * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_on_database_level = 10002;</code>
     */
    public function getUserExecRightOnDatabaseLevel()
    {
        return $this->user_exec_right_on_database_level;
    }

    /**
     * <pre>
     * Ausführungsrecht für den Benutzer auf Datenbank-Ebene. Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_on_database_level = 10002;</code>
     */
    public function setUserExecRightOnDatabaseLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->user_exec_right_on_database_level = $var;
    }

    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue public_exec_right_on_database_level = 10003;</code>
     */
    public function getPublicExecRightOnDatabaseLevel()
    {
        return $this->public_exec_right_on_database_level;
    }

    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die "public"-Gruppe (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue public_exec_right_on_database_level = 10003;</code>
     */
    public function setPublicExecRightOnDatabaseLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->public_exec_right_on_database_level = $var;
    }

    /**
     * <pre>
     * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_id = 10004;</code>
     */
    public function getProcedureId()
    {
        return $this->procedure_id;
    }

    /**
     * <pre>
     * ID der Prozedur aus "RegisteredProcedures". Falls "NULL" ausgegeben wird, bedeutet dies, daß auf "dStore"-Ebene keine Rechte-Überprüfung stattfindet (entweder weil es keine "Ad"-Prozedur ist oder es sich beim "UserName" um den "Super-Admin" handelt).
     * </pre>
     *
     * <code>.dstore.values.IntegerValue procedure_id = 10004;</code>
     */
    public function setProcedureId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->procedure_id = $var;
    }

    /**
     * <pre>
     * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10005;</code>
     */
    public function getUserName()
    {
        return $this->user_name;
    }

    /**
     * <pre>
     * Ein "dStore"-Benutzer, der also in "UserInfo" (siehe "mi_GetUserInfo_Ad") registriert ist
     * </pre>
     *
     * <code>.dstore.values.StringValue user_name = 10005;</code>
     */
    public function setUserName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->user_name = $var;
    }

    /**
     * <pre>
     * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue group_exec_right_ondstore_level = 10006;</code>
     */
    public function getGroupExecRightOndstoreLevel()
    {
        return $this->group_exec_right_ondstore_level;
    }

    /**
     * <pre>
     * Gibt an, ob mindestens eine Gruppe existiert, in die der "dStore"-Benutzer "UserID" eingeordnet ist, für die das Recht, die Prozedur direkt ausführen zu können, konfiguriert ist ("1") oder nicht ("0")
     * </pre>
     *
     * <code>.dstore.values.BooleanValue group_exec_right_ondstore_level = 10006;</code>
     */
    public function setGroupExecRightOndstoreLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->group_exec_right_ondstore_level = $var;
    }

    /**
     * <pre>
     * Name einer Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10007;</code>
     */
    public function getProcedureName()
    {
        return $this->procedure_name;
    }

    /**
     * <pre>
     * Name einer Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10007;</code>
     */
    public function setProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_name = $var;
    }

    /**
     * <pre>
     * ID des Benutzers "UserName" aus "UserInfo"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10008;</code>
     */
    public function getUserId()
    {
        return $this->user_id;
    }

    /**
     * <pre>
     * ID des Benutzers "UserName" aus "UserInfo"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_id = 10008;</code>
     */
    public function setUserId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->user_id = $var;
    }

    /**
     * <pre>
     * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue execute_right = 10009;</code>
     */
    public function getExecuteRight()
    {
        return $this->execute_right;
    }

    /**
     * <pre>
     * Hat der Benutzer "UserName" Ausführungsrechte für die Prozedur "ProcedureName" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue execute_right = 10009;</code>
     */
    public function setExecuteRight(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->execute_right = $var;
    }

    /**
     * <pre>
     * Kurz-Beschreibung der Prozedur "ProcedureName"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10010;</code>
     */
    public function getProcedureFunction()
    {
        return $this->procedure_function;
    }

    /**
     * <pre>
     * Kurz-Beschreibung der Prozedur "ProcedureName"
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_function = 10010;</code>
     */
    public function setProcedureFunction(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_function = $var;
    }

    /**
     * <pre>
     * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_ondstore_level = 10011;</code>
     */
    public function getUserExecRightOndstoreLevel()
    {
        return $this->user_exec_right_ondstore_level;
    }

    /**
     * <pre>
     * Ausführungsrecht im "dStore" für den Benutzer "UserID". Mögliche Werte :- "NULL" : es ist nichts (explizit) konfiguriert- "0" : explizites Ausführungsverbot- "1" : explizites Ausführungsrecht
     * </pre>
     *
     * <code>.dstore.values.IntegerValue user_exec_right_ondstore_level = 10011;</code>
     */
    public function setUserExecRightOndstoreLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->user_exec_right_ondstore_level = $var;
    }

    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue group_exec_right_on_database_level = 10012;</code>
     */
    public function getGroupExecRightOnDatabaseLevel()
    {
        return $this->group_exec_right_on_database_level;
    }

    /**
     * <pre>
     * Ausführungsrecht (auf Datenbank-Ebene) für die Gruppe, der der Benutzer angehört (mögliche Werte : s. "UserExecRightOnDatabaseLevel")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue group_exec_right_on_database_level = 10012;</code>
     */
    public function setGroupExecRightOnDatabaseLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->group_exec_right_on_database_level = $var;
    }

}

