<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/st_GetDirectSuccessors_Tree_Ad.proto

namespace Dstore\Engine\St_GetDirectSuccessors_Tree_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.st_GetDirectSuccessors_Tree_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    private $tree_level = null;
    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10002;</code>
     */
    private $predecessor = null;
    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    private $level_no = null;
    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no3 = 10004;</code>
     */
    private $relative_value_basic_charac_no3 = null;
    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no2 = 10005;</code>
     */
    private $relative_value_basic_charac_no2 = null;
    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no1 = 10006;</code>
     */
    private $relative_value_basic_charac_no1 = null;
    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_index = 10007;</code>
     */
    private $total_value_index = null;
    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_index = 10008;</code>
     */
    private $relative_value_index = null;
    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    private $node_description = null;
    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    private $active = null;
    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10011;</code>
     */
    private $has_next_sibling = null;
    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no1 = 10012;</code>
     */
    private $total_value_basic_charac_no1 = null;
    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10013;</code>
     */
    private $h_tree_node_id = null;
    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no2 = 10014;</code>
     */
    private $total_value_basic_charac_no2 = null;
    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no3 = 10015;</code>
     */
    private $total_value_basic_charac_no3 = null;
    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_per_predecessor = 10016;</code>
     */
    private $max_relative_value_per_predecessor = null;
    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10017;</code>
     */
    private $tree_node_id = null;
    /**
     * <pre>
     * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10018;</code>
     */
    private $node_id = null;
    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_index_per_pred = 10019;</code>
     */
    private $max_relative_value_index_per_pred = null;
    /**
     * <pre>
     * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue from_date = 10020;</code>
     */
    private $from_date = null;
    /**
     * <pre>
     * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue to_date = 10021;</code>
     */
    private $to_date = null;
    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10022;</code>
     */
    private $has_successors = null;
    /**
     * <pre>
     * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue deleted = 10023;</code>
     */
    private $deleted = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\StGetDirectSuccessorsTreeAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    public function getTreeLevel()
    {
        return $this->tree_level;
    }

    /**
     * <pre>
     * Anzahl Vorgänger von "TreeNodeID" plus 1
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_level = 10001;</code>
     */
    public function setTreeLevel(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_level = $var;
    }

    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10002;</code>
     */
    public function getPredecessor()
    {
        return $this->predecessor;
    }

    /**
     * <pre>
     * ID des Vorgängers von "TreeNodeID" (im Zeitraum "FromDate" bis "ToDate")
     * </pre>
     *
     * <code>.dstore.values.IntegerValue predecessor = 10002;</code>
     */
    public function setPredecessor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->predecessor = $var;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    public function getLevelNo()
    {
        return $this->level_no;
    }

    /**
     * <pre>
     * Nummer der Hierarchie der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_no = 10003;</code>
     */
    public function setLevelNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_no = $var;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no3 = 10004;</code>
     */
    public function getRelativeValueBasicCharacNo3()
    {
        return $this->relative_value_basic_charac_no3;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo3" zur Summe von "TotalValue_BasicCharacNo3" aller Elemente mit dem Vorgänger "Predesessor". Wurde für "&#64;BasicCharacteristicNo2" oder "&#64;BasicCharacteristicNo3" "NULL" angegeben, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no3 = 10004;</code>
     */
    public function setRelativeValueBasicCharacNo3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->relative_value_basic_charac_no3 = $var;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no2 = 10005;</code>
     */
    public function getRelativeValueBasicCharacNo2()
    {
        return $this->relative_value_basic_charac_no2;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo2" (der "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo2" aller Elemente mit dem Vorgänger-Element "Predesessor". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no2 = 10005;</code>
     */
    public function setRelativeValueBasicCharacNo2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->relative_value_basic_charac_no2 = $var;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no1 = 10006;</code>
     */
    public function getRelativeValueBasicCharacNo1()
    {
        return $this->relative_value_basic_charac_no1;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_BasicCharacNo1" (des Elementes "HTreeNodeID") zur Summe von "TotalValue_BasicCharacNo1" aller Elemente mit dem Vorgänger-Element "Predesessor"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_basic_charac_no1 = 10006;</code>
     */
    public function setRelativeValueBasicCharacNo1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->relative_value_basic_charac_no1 = $var;
    }

    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_index = 10007;</code>
     */
    public function getTotalValueIndex()
    {
        return $this->total_value_index;
    }

    /**
     * <pre>
     * Zusammengesetzte Kennzahl nach der Formel :(TotalValue_BasicCharacNo1 * &#64;Weight_BasicCharacteristicNo1) + (TotalValue_BasicCharacNo2 * &#64;Weight_BasicCharacteristicNo2) + (TotalValue_BasicCharacNo3 * &#64;Weight_BasicCharacteristicNo3)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_index = 10007;</code>
     */
    public function setTotalValueIndex(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_index = $var;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_index = 10008;</code>
     */
    public function getRelativeValueIndex()
    {
        return $this->relative_value_index;
    }

    /**
     * <pre>
     * Prozentualer Anteil von "TotalValue_Index" zur Summe von "TotalValue_Index" aller Elemente mit dem Vorgänger "Predesessor".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue relative_value_index = 10008;</code>
     */
    public function setRelativeValueIndex(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->relative_value_index = $var;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    public function getNodeDescription()
    {
        return $this->node_description;
    }

    /**
     * <pre>
     * Bezeichnung der "NodeID"
     * </pre>
     *
     * <code>.dstore.values.StringValue node_description = 10009;</code>
     */
    public function setNodeDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->node_description = $var;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" z.Zt. aktiviert ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue active = 10010;</code>
     */
    public function setActive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->active = $var;
    }

    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10011;</code>
     */
    public function getHasNextSibling()
    {
        return $this->has_next_sibling;
    }

    /**
     * <pre>
     * Gibt es ein nächstes "Geschwister-Element", also ein anderes Element des Artikelbaums, das ebenfalls "Predecessor" als Vorgänger hat und dessen "SortNo" um 1 niedriger ist als die "SortNo" von "TreeNodeID" ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_next_sibling = 10011;</code>
     */
    public function setHasNextSibling(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_next_sibling = $var;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no1 = 10012;</code>
     */
    public function getTotalValueBasicCharacNo1()
    {
        return $this->total_value_basic_charac_no1;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo1" zum Element "HTreeNodeID"
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no1 = 10012;</code>
     */
    public function setTotalValueBasicCharacNo1(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_basic_charac_no1 = $var;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10013;</code>
     */
    public function getHTreeNodeId()
    {
        return $this->h_tree_node_id;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" zugehörigen Elementes aus "HistoryTreeView" (in dieser ist die Historie des gesamten Artikelbaums abgebildet), das im Zeitraum "FromDate" bis "ToDate" gültig ist/war
     * </pre>
     *
     * <code>.dstore.values.IntegerValue h_tree_node_id = 10013;</code>
     */
    public function setHTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->h_tree_node_id = $var;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no2 = 10014;</code>
     */
    public function getTotalValueBasicCharacNo2()
    {
        return $this->total_value_basic_charac_no2;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo2" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no2 = 10014;</code>
     */
    public function setTotalValueBasicCharacNo2(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_basic_charac_no2 = $var;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no3 = 10015;</code>
     */
    public function getTotalValueBasicCharacNo3()
    {
        return $this->total_value_basic_charac_no3;
    }

    /**
     * <pre>
     * Wert zur Basis-Kenzahl "&#64;BasicCharacteristicNo3" zum Element "HTreeNodeID". Falls "&#64;BasicCharacteristicNo2 = NULL" oder "&#64;BasciCharacteristicNo3 = NULL" angegeben wurde, steht hier immer "0.00".
     * </pre>
     *
     * <code>.dstore.values.DecimalValue total_value_basic_charac_no3 = 10015;</code>
     */
    public function setTotalValueBasicCharacNo3(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->total_value_basic_charac_no3 = $var;
    }

    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_per_predecessor = 10016;</code>
     */
    public function getMaxRelativeValuePerPredecessor()
    {
        return $this->max_relative_value_per_predecessor;
    }

    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_BasicCharacNo1", "RelativeValue_BasicCharacNo2", "RelativeValue_BasicCharacNo3" und "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_per_predecessor = 10016;</code>
     */
    public function setMaxRelativeValuePerPredecessor(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->max_relative_value_per_predecessor = $var;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10017;</code>
     */
    public function getTreeNodeId()
    {
        return $this->tree_node_id;
    }

    /**
     * <pre>
     * ID eines Elementes im Artikelbaum
     * </pre>
     *
     * <code>.dstore.values.IntegerValue tree_node_id = 10017;</code>
     */
    public function setTreeNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->tree_node_id = $var;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10018;</code>
     */
    public function getNodeId()
    {
        return $this->node_id;
    }

    /**
     * <pre>
     * ID des zur "TreeNodeID" gehörenden Artikel-Elementes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue node_id = 10018;</code>
     */
    public function setNodeId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->node_id = $var;
    }

    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_index_per_pred = 10019;</code>
     */
    public function getMaxRelativeValueIndexPerPred()
    {
        return $this->max_relative_value_index_per_pred;
    }

    /**
     * <pre>
     * Das Maximum aller Werte für "RelativeValue_Index" von Elementen, die als Vorgänger ebenfalls "Predecessor" besitzen (siehe Beschreibung)
     * </pre>
     *
     * <code>.dstore.values.DecimalValue max_relative_value_index_per_pred = 10019;</code>
     */
    public function setMaxRelativeValueIndexPerPred(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\DecimalValue::class);
        $this->max_relative_value_index_per_pred = $var;
    }

    /**
     * <pre>
     * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue from_date = 10020;</code>
     */
    public function getFromDate()
    {
        return $this->from_date;
    }

    /**
     * <pre>
     * Beginn des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue from_date = 10020;</code>
     */
    public function setFromDate(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->from_date = $var;
    }

    /**
     * <pre>
     * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue to_date = 10021;</code>
     */
    public function getToDate()
    {
        return $this->to_date;
    }

    /**
     * <pre>
     * Ende des Gültigkeitszeitraums für "HTreeNodeID" als String (Format "12.04.2000 17:44:13")
     * </pre>
     *
     * <code>.dstore.values.StringValue to_date = 10021;</code>
     */
    public function setToDate(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->to_date = $var;
    }

    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10022;</code>
     */
    public function getHasSuccessors()
    {
        return $this->has_successors;
    }

    /**
     * <pre>
     * Hat "TreeNodeID" selbst Nachfolger ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_successors = 10022;</code>
     */
    public function setHasSuccessors(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_successors = $var;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue deleted = 10023;</code>
     */
    public function getDeleted()
    {
        return $this->deleted;
    }

    /**
     * <pre>
     * Ist "TreeNodeID" bereits gelöscht ? ("0" : Nein, "1" : Ja)
     * </pre>
     *
     * <code>.dstore.values.BooleanValue deleted = 10023;</code>
     */
    public function setDeleted(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->deleted = $var;
    }

}

