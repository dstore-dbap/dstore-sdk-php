<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/im_GetCommonNodeProperties_Ad.proto

namespace Dstore\Engine\Im_GetCommonNodeProperties_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.im_GetCommonNodeProperties_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Ist die Eigenschaft geerbt oder direkt zugewiesen ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue is_inherited = 10001;</code>
     */
    private $is_inherited = null;
    /**
     * <pre>
     * ID der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10002;</code>
     */
    private $unit_id = null;
    /**
     * <pre>
     * Bezeichnung des Merkmals "CharacteristicID" (in der Standardsprache)
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    private $characteristic_description = null;
    /**
     * <pre>
     * Sind zur Eigenschaft "ValueID" noch Details (wie z.B. eine Produktbeschreibung) hinterlegt ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_details = 10004;</code>
     */
    private $has_details = null;
    /**
     * <pre>
     * Gemeinsame Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10005;</code>
     */
    private $value = null;
    /**
     * <pre>
     * Sprache, in der alle Eigenschaften des Merkmals "CharacteristicID" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_language_id = 10006;</code>
     */
    private $value_language_id = null;
    /**
     * <pre>
     * ID des Merkmals, zu dem die gemeinsame Eigenschaft "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10007;</code>
     */
    private $characteristic_id = null;
    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10008;</code>
     */
    private $unit_symbol = null;
    /**
     * <pre>
     * ID der gemeinsamen Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10009;</code>
     */
    private $value_id = null;
    /**
     * <pre>
     * Ist das Merkmal "CharacteristicID" ein rekursives Merkmal ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue recursive = 10010;</code>
     */
    private $recursive = null;
    /**
     * <pre>
     * Hat "CharacteristicID" nur vordefinierte Eigenschaften ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10011;</code>
     */
    private $predefined_values = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\ImGetCommonNodePropertiesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Ist die Eigenschaft geerbt oder direkt zugewiesen ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue is_inherited = 10001;</code>
     */
    public function getIsInherited()
    {
        return $this->is_inherited;
    }

    /**
     * <pre>
     * Ist die Eigenschaft geerbt oder direkt zugewiesen ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue is_inherited = 10001;</code>
     */
    public function setIsInherited(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->is_inherited = $var;
    }

    /**
     * <pre>
     * ID der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10002;</code>
     */
    public function getUnitId()
    {
        return $this->unit_id;
    }

    /**
     * <pre>
     * ID der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.IntegerValue unit_id = 10002;</code>
     */
    public function setUnitId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->unit_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Merkmals "CharacteristicID" (in der Standardsprache)
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function getCharacteristicDescription()
    {
        return $this->characteristic_description;
    }

    /**
     * <pre>
     * Bezeichnung des Merkmals "CharacteristicID" (in der Standardsprache)
     * </pre>
     *
     * <code>.dstore.values.StringValue characteristic_description = 10003;</code>
     */
    public function setCharacteristicDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->characteristic_description = $var;
    }

    /**
     * <pre>
     * Sind zur Eigenschaft "ValueID" noch Details (wie z.B. eine Produktbeschreibung) hinterlegt ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_details = 10004;</code>
     */
    public function getHasDetails()
    {
        return $this->has_details;
    }

    /**
     * <pre>
     * Sind zur Eigenschaft "ValueID" noch Details (wie z.B. eine Produktbeschreibung) hinterlegt ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue has_details = 10004;</code>
     */
    public function setHasDetails(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->has_details = $var;
    }

    /**
     * <pre>
     * Gemeinsame Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10005;</code>
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * <pre>
     * Gemeinsame Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.StringValue value = 10005;</code>
     */
    public function setValue(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->value = $var;
    }

    /**
     * <pre>
     * Sprache, in der alle Eigenschaften des Merkmals "CharacteristicID" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_language_id = 10006;</code>
     */
    public function getValueLanguageId()
    {
        return $this->value_language_id;
    }

    /**
     * <pre>
     * Sprache, in der alle Eigenschaften des Merkmals "CharacteristicID" angegeben sind
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_language_id = 10006;</code>
     */
    public function setValueLanguageId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->value_language_id = $var;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem die gemeinsame Eigenschaft "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10007;</code>
     */
    public function getCharacteristicId()
    {
        return $this->characteristic_id;
    }

    /**
     * <pre>
     * ID des Merkmals, zu dem die gemeinsame Eigenschaft "ValueID" gehört
     * </pre>
     *
     * <code>.dstore.values.IntegerValue characteristic_id = 10007;</code>
     */
    public function setCharacteristicId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->characteristic_id = $var;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10008;</code>
     */
    public function getUnitSymbol()
    {
        return $this->unit_symbol;
    }

    /**
     * <pre>
     * Symbol (im Regelfall der ISO-Code) der Einheit des Merkmals "CharacteristicID"
     * </pre>
     *
     * <code>.dstore.values.StringValue unit_symbol = 10008;</code>
     */
    public function setUnitSymbol(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->unit_symbol = $var;
    }

    /**
     * <pre>
     * ID der gemeinsamen Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10009;</code>
     */
    public function getValueId()
    {
        return $this->value_id;
    }

    /**
     * <pre>
     * ID der gemeinsamen Eigenschaft
     * </pre>
     *
     * <code>.dstore.values.IntegerValue value_id = 10009;</code>
     */
    public function setValueId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->value_id = $var;
    }

    /**
     * <pre>
     * Ist das Merkmal "CharacteristicID" ein rekursives Merkmal ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue recursive = 10010;</code>
     */
    public function getRecursive()
    {
        return $this->recursive;
    }

    /**
     * <pre>
     * Ist das Merkmal "CharacteristicID" ein rekursives Merkmal ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue recursive = 10010;</code>
     */
    public function setRecursive(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->recursive = $var;
    }

    /**
     * <pre>
     * Hat "CharacteristicID" nur vordefinierte Eigenschaften ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10011;</code>
     */
    public function getPredefinedValues()
    {
        return $this->predefined_values;
    }

    /**
     * <pre>
     * Hat "CharacteristicID" nur vordefinierte Eigenschaften ("0" : Nein, "1" : Ja) ?
     * </pre>
     *
     * <code>.dstore.values.BooleanValue predefined_values = 10011;</code>
     */
    public function setPredefinedValues(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\BooleanValue::class);
        $this->predefined_values = $var;
    }

}

