<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/do_GetProcedureDependencies_Ad.proto

namespace Dstore\Engine\Do_GetProcedureDependencies_Ad;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.do_GetProcedureDependencies_Ad.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * Kennzeichnet den "Grad der Abhängigkeit" :"1" : "UsedProcedure" wird DIREKT aufgerufen"2" : "UsedProcedure" wird von einer Prozedur aufgerufen, die auch in dieser Rückgabemenge (in "UsedProcedure") ist, und zwar mit "LevelOfDependence = 1"usw.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_of_dependence = 10001;</code>
     */
    private $level_of_dependence = null;
    /**
     * <pre>
     * Name einer "dStore"-Prozedur, die von der durch "ProcedureName" bezeichneten Prozedur aufgerufen wird
     * </pre>
     *
     * <code>.dstore.values.StringValue used_procedure = 10002;</code>
     */
    private $used_procedure = null;
    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10003;</code>
     */
    private $procedure_name = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\DoGetProcedureDependenciesAd::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * Kennzeichnet den "Grad der Abhängigkeit" :"1" : "UsedProcedure" wird DIREKT aufgerufen"2" : "UsedProcedure" wird von einer Prozedur aufgerufen, die auch in dieser Rückgabemenge (in "UsedProcedure") ist, und zwar mit "LevelOfDependence = 1"usw.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_of_dependence = 10001;</code>
     */
    public function getLevelOfDependence()
    {
        return $this->level_of_dependence;
    }

    /**
     * <pre>
     * Kennzeichnet den "Grad der Abhängigkeit" :"1" : "UsedProcedure" wird DIREKT aufgerufen"2" : "UsedProcedure" wird von einer Prozedur aufgerufen, die auch in dieser Rückgabemenge (in "UsedProcedure") ist, und zwar mit "LevelOfDependence = 1"usw.
     * </pre>
     *
     * <code>.dstore.values.IntegerValue level_of_dependence = 10001;</code>
     */
    public function setLevelOfDependence(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->level_of_dependence = $var;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur, die von der durch "ProcedureName" bezeichneten Prozedur aufgerufen wird
     * </pre>
     *
     * <code>.dstore.values.StringValue used_procedure = 10002;</code>
     */
    public function getUsedProcedure()
    {
        return $this->used_procedure;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur, die von der durch "ProcedureName" bezeichneten Prozedur aufgerufen wird
     * </pre>
     *
     * <code>.dstore.values.StringValue used_procedure = 10002;</code>
     */
    public function setUsedProcedure(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->used_procedure = $var;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10003;</code>
     */
    public function getProcedureName()
    {
        return $this->procedure_name;
    }

    /**
     * <pre>
     * Name einer "dStore"-Prozedur
     * </pre>
     *
     * <code>.dstore.values.StringValue procedure_name = 10003;</code>
     */
    public function setProcedureName(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->procedure_name = $var;
    }

}

