<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/engine/procedures/mi_GetCountries.proto

namespace Dstore\Engine\Mi_GetCountries;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>dstore.engine.mi_GetCountries.Response.Row</code>
 */
class Response_Row extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>int32 row_id = 10000;</code>
     */
    private $row_id = 0;
    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    private $country_id = null;
    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;LanguageID" angegebenen Sprache bzw. die "Default"-Bezeichnung (aus "Countries")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    private $country_description = null;
    /**
     * <pre>
     * Bezeichnung der Region "RegionID"
     * </pre>
     *
     * <code>.dstore.values.StringValue region = 10003;</code>
     */
    private $region = null;
    /**
     * <pre>
     * ID einer Region, die dem Land zugeordnet wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue region_id = 10004;</code>
     */
    private $region_id = null;
    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10005;</code>
     */
    private $country_code = null;
    /**
     * <pre>
     * Bestimmt die Sortier-Reihenfolge von "CountryID" innerhalb aller Länder
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    private $sort_no = null;

    public function __construct() {
        \GPBMetadata\Dstore\Engine\Procedures\MiGetCountries::initOnce();
        parent::__construct();
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function getRowId()
    {
        return $this->row_id;
    }

    /**
     * <code>int32 row_id = 10000;</code>
     */
    public function setRowId($var)
    {
        GPBUtil::checkInt32($var);
        $this->row_id = $var;
    }

    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    public function getCountryId()
    {
        return $this->country_id;
    }

    /**
     * <pre>
     * ID eines Landes
     * </pre>
     *
     * <code>.dstore.values.IntegerValue country_id = 10001;</code>
     */
    public function setCountryId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->country_id = $var;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;LanguageID" angegebenen Sprache bzw. die "Default"-Bezeichnung (aus "Countries")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    public function getCountryDescription()
    {
        return $this->country_description;
    }

    /**
     * <pre>
     * Bezeichnung des Landes "CountryID" in der durch "&#64;LanguageID" angegebenen Sprache bzw. die "Default"-Bezeichnung (aus "Countries")
     * </pre>
     *
     * <code>.dstore.values.StringValue country_description = 10002;</code>
     */
    public function setCountryDescription(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_description = $var;
    }

    /**
     * <pre>
     * Bezeichnung der Region "RegionID"
     * </pre>
     *
     * <code>.dstore.values.StringValue region = 10003;</code>
     */
    public function getRegion()
    {
        return $this->region;
    }

    /**
     * <pre>
     * Bezeichnung der Region "RegionID"
     * </pre>
     *
     * <code>.dstore.values.StringValue region = 10003;</code>
     */
    public function setRegion(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->region = $var;
    }

    /**
     * <pre>
     * ID einer Region, die dem Land zugeordnet wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue region_id = 10004;</code>
     */
    public function getRegionId()
    {
        return $this->region_id;
    }

    /**
     * <pre>
     * ID einer Region, die dem Land zugeordnet wurde
     * </pre>
     *
     * <code>.dstore.values.IntegerValue region_id = 10004;</code>
     */
    public function setRegionId(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->region_id = $var;
    }

    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10005;</code>
     */
    public function getCountryCode()
    {
        return $this->country_code;
    }

    /**
     * <pre>
     * Internationales Symbol des Landes "CountryID". Bei Neu-Installationen ab Version 5.5.2 sind die Werte gemäß "ISO 3166-1 alpha-2". An diesen Standard sollte man sich halten bzw. die Werte bei bestehenden Installationen anpassen !
     * </pre>
     *
     * <code>.dstore.values.StringValue country_code = 10005;</code>
     */
    public function setCountryCode(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\StringValue::class);
        $this->country_code = $var;
    }

    /**
     * <pre>
     * Bestimmt die Sortier-Reihenfolge von "CountryID" innerhalb aller Länder
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    public function getSortNo()
    {
        return $this->sort_no;
    }

    /**
     * <pre>
     * Bestimmt die Sortier-Reihenfolge von "CountryID" innerhalb aller Länder
     * </pre>
     *
     * <code>.dstore.values.IntegerValue sort_no = 10006;</code>
     */
    public function setSortNo(&$var)
    {
        GPBUtil::checkMessage($var, \Dstore\Values\IntegerValue::class);
        $this->sort_no = $var;
    }

}

