<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPersonSurcharges_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_GetPersonSurcharges_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var boolean */
    public $tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id1 = null;
    
    /**  @var boolean */
    public $output_characteristic_id1_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id2 = null;
    
    /**  @var boolean */
    public $output_characteristic_id2_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id3 = null;
    
    /**  @var boolean */
    public $output_characteristic_id3_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPersonSurcharges_Ad.Parameters');

      // OPTIONAL MESSAGE person_type_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id1 = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "output_characteristic_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id1_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "output_characteristic_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id2 = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "output_characteristic_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id2_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "output_characteristic_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id3 = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "output_characteristic_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id3_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "output_characteristic_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setPersonTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(2);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearTreeNodeId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(3);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <tree_node_id_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearTreeNodeIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <tree_node_id_null> value
     *
     * @return boolean
     */
    public function getTreeNodeIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setTreeNodeIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <output_characteristic_id1> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1(){
      return $this->_has(4);
    }
    
    /**
     * Clear <output_characteristic_id1> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId1(){
      return $this->_clear(4);
    }
    
    /**
     * Get <output_characteristic_id1> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId1(){
      return $this->_get(4);
    }
    
    /**
     * Set <output_characteristic_id1> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId1(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <output_characteristic_id1_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1Null(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <output_characteristic_id1_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId1Null(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <output_characteristic_id1_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId1Null(){
      return $this->_get(1004);
    }
    
    /**
     * Set <output_characteristic_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId1Null( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <output_characteristic_id2> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2(){
      return $this->_has(5);
    }
    
    /**
     * Clear <output_characteristic_id2> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId2(){
      return $this->_clear(5);
    }
    
    /**
     * Get <output_characteristic_id2> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId2(){
      return $this->_get(5);
    }
    
    /**
     * Set <output_characteristic_id2> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId2(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <output_characteristic_id2_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2Null(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <output_characteristic_id2_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId2Null(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <output_characteristic_id2_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId2Null(){
      return $this->_get(1005);
    }
    
    /**
     * Set <output_characteristic_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId2Null( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <output_characteristic_id3> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3(){
      return $this->_has(6);
    }
    
    /**
     * Clear <output_characteristic_id3> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId3(){
      return $this->_clear(6);
    }
    
    /**
     * Get <output_characteristic_id3> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId3(){
      return $this->_get(6);
    }
    
    /**
     * Set <output_characteristic_id3> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId3(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <output_characteristic_id3_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3Null(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <output_characteristic_id3_null> value
     *
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function clearOutputCharacteristicId3Null(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <output_characteristic_id3_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId3Null(){
      return $this->_get(1006);
    }
    
    /**
     * Set <output_characteristic_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPersonSurcharges_Ad\Parameters
     */
    public function setOutputCharacteristicId3Null( $value){
      return $this->_set(1006, $value);
    }
  }
}

