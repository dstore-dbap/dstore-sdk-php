<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_GetPersonRelationships_Ad.proto
//   Date: 2016-05-19 08:07:55

namespace dstore\engine\pm_GetPersonRelationships_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $related_person_id = null;
    
    /**  @var boolean */
    public $related_person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $relationship_id = null;
    
    /**  @var boolean */
    public $relationship_id_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $only_relations_currently_valid = null;
    
    /**  @var boolean */
    public $only_relations_currently_valid_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $related_person_type_id = null;
    
    /**  @var boolean */
    public $related_person_type_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_GetPersonRelationships_Ad.Parameters');

      // OPTIONAL MESSAGE person_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE related_person_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "related_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL related_person_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "related_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE relationship_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "relationship_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL relationship_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "relationship_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_relations_currently_valid = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "only_relations_currently_valid";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_relations_currently_valid_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "only_relations_currently_valid_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE related_person_type_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "related_person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL related_person_type_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "related_person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <related_person_id> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <related_person_id> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelatedPersonId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <related_person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRelatedPersonId(){
      return $this->_get(2);
    }
    
    /**
     * Set <related_person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelatedPersonId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <related_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <related_person_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelatedPersonIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <related_person_id_null> value
     *
     * @return boolean
     */
    public function getRelatedPersonIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <related_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelatedPersonIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <relationship_id> has a value
     *
     * @return boolean
     */
    public function hasRelationshipId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <relationship_id> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelationshipId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <relationship_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRelationshipId(){
      return $this->_get(3);
    }
    
    /**
     * Set <relationship_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelationshipId(\dstore\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <relationship_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelationshipIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <relationship_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelationshipIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <relationship_id_null> value
     *
     * @return boolean
     */
    public function getRelationshipIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <relationship_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelationshipIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(4);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(4);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(4);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setFromDate(\dstore\values\timestampValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(5);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(5);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(5);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setToDate(\dstore\values\timestampValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <only_relations_currently_valid> has a value
     *
     * @return boolean
     */
    public function hasOnlyRelationsCurrentlyValid(){
      return $this->_has(6);
    }
    
    /**
     * Clear <only_relations_currently_valid> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearOnlyRelationsCurrentlyValid(){
      return $this->_clear(6);
    }
    
    /**
     * Get <only_relations_currently_valid> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOnlyRelationsCurrentlyValid(){
      return $this->_get(6);
    }
    
    /**
     * Set <only_relations_currently_valid> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setOnlyRelationsCurrentlyValid(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <only_relations_currently_valid_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyRelationsCurrentlyValidNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <only_relations_currently_valid_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearOnlyRelationsCurrentlyValidNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <only_relations_currently_valid_null> value
     *
     * @return boolean
     */
    public function getOnlyRelationsCurrentlyValidNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <only_relations_currently_valid_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setOnlyRelationsCurrentlyValidNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <related_person_type_id> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonTypeId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <related_person_type_id> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelatedPersonTypeId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <related_person_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRelatedPersonTypeId(){
      return $this->_get(7);
    }
    
    /**
     * Set <related_person_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelatedPersonTypeId(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <related_person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonTypeIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <related_person_type_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function clearRelatedPersonTypeIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <related_person_type_id_null> value
     *
     * @return boolean
     */
    public function getRelatedPersonTypeIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <related_person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonRelationships_Ad\Parameters
     */
    public function setRelatedPersonTypeIdNull( $value){
      return $this->_set(1007, $value);
    }
  }
}

