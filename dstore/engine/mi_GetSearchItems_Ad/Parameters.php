<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_GetSearchItems_Ad.proto
//   Date: 2016-05-19 08:07:45

namespace dstore\engine\mi_GetSearchItems_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $table_id = null;
    
    /**  @var boolean */
    public $table_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $characteristic_id = null;
    
    /**  @var boolean */
    public $characteristic_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $search_value = null;
    
    /**  @var boolean */
    public $search_value_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $matching_value = null;
    
    /**  @var boolean */
    public $matching_value_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_GetSearchItems_Ad.Parameters');

      // OPTIONAL MESSAGE table_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL table_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "table_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characteristic_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_value = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "search_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_value_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "search_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE matching_value = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "matching_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL matching_value_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "matching_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_id> has a value
     *
     * @return boolean
     */
    public function hasTableId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_id> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearTableId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getTableId(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setTableId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <table_id_null> has a value
     *
     * @return boolean
     */
    public function hasTableIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <table_id_null> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearTableIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <table_id_null> value
     *
     * @return boolean
     */
    public function getTableIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <table_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setTableIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <characteristic_id> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearCharacteristicId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCharacteristicId(){
      return $this->_get(2);
    }
    
    /**
     * Set <characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <characteristic_id_null> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearCharacteristicIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <characteristic_id_null> value
     *
     * @return boolean
     */
    public function getCharacteristicIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setCharacteristicIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <search_value> has a value
     *
     * @return boolean
     */
    public function hasSearchValue(){
      return $this->_has(3);
    }
    
    /**
     * Clear <search_value> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearSearchValue(){
      return $this->_clear(3);
    }
    
    /**
     * Get <search_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSearchValue(){
      return $this->_get(3);
    }
    
    /**
     * Set <search_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setSearchValue(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <search_value_null> has a value
     *
     * @return boolean
     */
    public function hasSearchValueNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <search_value_null> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearSearchValueNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <search_value_null> value
     *
     * @return boolean
     */
    public function getSearchValueNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <search_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setSearchValueNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <matching_value> has a value
     *
     * @return boolean
     */
    public function hasMatchingValue(){
      return $this->_has(4);
    }
    
    /**
     * Clear <matching_value> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearMatchingValue(){
      return $this->_clear(4);
    }
    
    /**
     * Get <matching_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getMatchingValue(){
      return $this->_get(4);
    }
    
    /**
     * Set <matching_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setMatchingValue(\dstore\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <matching_value_null> has a value
     *
     * @return boolean
     */
    public function hasMatchingValueNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <matching_value_null> value
     *
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function clearMatchingValueNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <matching_value_null> value
     *
     * @return boolean
     */
    public function getMatchingValueNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <matching_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSearchItems_Ad\Parameters
     */
    public function setMatchingValueNull( $value){
      return $this->_set(1004, $value);
    }
  }
}

