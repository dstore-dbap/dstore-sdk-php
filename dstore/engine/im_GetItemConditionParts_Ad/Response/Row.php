<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetItemConditionParts_Ad.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\im_GetItemConditionParts_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $used_in_an_item_condition_group = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $used_in_campaign_item_cond_parts = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $condition_part_id = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $edited_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $created_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition_part_description = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator2 = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $recursive_evaluation = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $domain_tree_node_ids = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_characteristic_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $level_ids = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $inherit_depth = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetItemConditionParts_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE used_in_an_item_condition_group = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "used_in_an_item_condition_group";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE used_in_campaign_item_cond_parts = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "used_in_campaign_item_cond_parts";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_part_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "condition_part_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE edited_at_date_and_time = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "edited_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE created_at_date_and_time = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "created_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_part_description = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "condition_part_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator1 = 30001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30001;
      $f->name      = "operator1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition1 = 30002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30002;
      $f->name      = "condition1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition2 = 30003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30003;
      $f->name      = "condition2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator2 = 30004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30004;
      $f->name      = "operator2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation = 30006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30006;
      $f->name      = "recursive_evaluation";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE domain_tree_node_ids = 30007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30007;
      $f->name      = "domain_tree_node_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id = 30008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30008;
      $f->name      = "node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_ids = 30011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30011;
      $f->name      = "level_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth = 30014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30014;
      $f->name      = "inherit_depth";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <used_in_an_item_condition_group> has a value
     *
     * @return boolean
     */
    public function hasUsedInAnItemConditionGroup(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <used_in_an_item_condition_group> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearUsedInAnItemConditionGroup(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <used_in_an_item_condition_group> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getUsedInAnItemConditionGroup(){
      return $this->_get(10001);
    }
    
    /**
     * Set <used_in_an_item_condition_group> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setUsedInAnItemConditionGroup(\dstore\engine\values\booleanValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <used_in_campaign_item_cond_parts> has a value
     *
     * @return boolean
     */
    public function hasUsedInCampaignItemCondParts(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <used_in_campaign_item_cond_parts> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearUsedInCampaignItemCondParts(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <used_in_campaign_item_cond_parts> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getUsedInCampaignItemCondParts(){
      return $this->_get(10002);
    }
    
    /**
     * Set <used_in_campaign_item_cond_parts> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setUsedInCampaignItemCondParts(\dstore\engine\values\booleanValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <condition_part_id> has a value
     *
     * @return boolean
     */
    public function hasConditionPartId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <condition_part_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearConditionPartId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <condition_part_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionPartId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <condition_part_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setConditionPartId(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <edited_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasEditedAtDateAndTime(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <edited_at_date_and_time> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearEditedAtDateAndTime(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <edited_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getEditedAtDateAndTime(){
      return $this->_get(10004);
    }
    
    /**
     * Set <edited_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setEditedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <created_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasCreatedAtDateAndTime(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <created_at_date_and_time> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearCreatedAtDateAndTime(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <created_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getCreatedAtDateAndTime(){
      return $this->_get(10005);
    }
    
    /**
     * Set <created_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setCreatedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <condition_part_description> has a value
     *
     * @return boolean
     */
    public function hasConditionPartDescription(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <condition_part_description> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearConditionPartDescription(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <condition_part_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getConditionPartDescription(){
      return $this->_get(10006);
    }
    
    /**
     * Set <condition_part_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setConditionPartDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <operator1> has a value
     *
     * @return boolean
     */
    public function hasOperator1(){
      return $this->_has(30001);
    }
    
    /**
     * Clear <operator1> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearOperator1(){
      return $this->_clear(30001);
    }
    
    /**
     * Get <operator1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator1(){
      return $this->_get(30001);
    }
    
    /**
     * Set <operator1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setOperator1(\dstore\engine\values\stringValue $value){
      return $this->_set(30001, $value);
    }
    
    /**
     * Check if <condition1> has a value
     *
     * @return boolean
     */
    public function hasCondition1(){
      return $this->_has(30002);
    }
    
    /**
     * Clear <condition1> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearCondition1(){
      return $this->_clear(30002);
    }
    
    /**
     * Get <condition1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition1(){
      return $this->_get(30002);
    }
    
    /**
     * Set <condition1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setCondition1(\dstore\engine\values\stringValue $value){
      return $this->_set(30002, $value);
    }
    
    /**
     * Check if <condition2> has a value
     *
     * @return boolean
     */
    public function hasCondition2(){
      return $this->_has(30003);
    }
    
    /**
     * Clear <condition2> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearCondition2(){
      return $this->_clear(30003);
    }
    
    /**
     * Get <condition2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition2(){
      return $this->_get(30003);
    }
    
    /**
     * Set <condition2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setCondition2(\dstore\engine\values\stringValue $value){
      return $this->_set(30003, $value);
    }
    
    /**
     * Check if <operator2> has a value
     *
     * @return boolean
     */
    public function hasOperator2(){
      return $this->_has(30004);
    }
    
    /**
     * Clear <operator2> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearOperator2(){
      return $this->_clear(30004);
    }
    
    /**
     * Get <operator2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator2(){
      return $this->_get(30004);
    }
    
    /**
     * Set <operator2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setOperator2(\dstore\engine\values\stringValue $value){
      return $this->_set(30004, $value);
    }
    
    /**
     * Check if <recursive_evaluation> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluation(){
      return $this->_has(30006);
    }
    
    /**
     * Clear <recursive_evaluation> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearRecursiveEvaluation(){
      return $this->_clear(30006);
    }
    
    /**
     * Get <recursive_evaluation> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRecursiveEvaluation(){
      return $this->_get(30006);
    }
    
    /**
     * Set <recursive_evaluation> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setRecursiveEvaluation(\dstore\engine\values\integerValue $value){
      return $this->_set(30006, $value);
    }
    
    /**
     * Check if <domain_tree_node_ids> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeIds(){
      return $this->_has(30007);
    }
    
    /**
     * Clear <domain_tree_node_ids> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearDomainTreeNodeIds(){
      return $this->_clear(30007);
    }
    
    /**
     * Get <domain_tree_node_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDomainTreeNodeIds(){
      return $this->_get(30007);
    }
    
    /**
     * Set <domain_tree_node_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setDomainTreeNodeIds(\dstore\engine\values\stringValue $value){
      return $this->_set(30007, $value);
    }
    
    /**
     * Check if <node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId(){
      return $this->_has(30008);
    }
    
    /**
     * Clear <node_characteristic_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearNodeCharacteristicId(){
      return $this->_clear(30008);
    }
    
    /**
     * Get <node_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeCharacteristicId(){
      return $this->_get(30008);
    }
    
    /**
     * Set <node_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setNodeCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(30008, $value);
    }
    
    /**
     * Check if <level_ids> has a value
     *
     * @return boolean
     */
    public function hasLevelIds(){
      return $this->_has(30011);
    }
    
    /**
     * Clear <level_ids> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearLevelIds(){
      return $this->_clear(30011);
    }
    
    /**
     * Get <level_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getLevelIds(){
      return $this->_get(30011);
    }
    
    /**
     * Set <level_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setLevelIds(\dstore\engine\values\stringValue $value){
      return $this->_set(30011, $value);
    }
    
    /**
     * Check if <inherit_depth> has a value
     *
     * @return boolean
     */
    public function hasInheritDepth(){
      return $this->_has(30014);
    }
    
    /**
     * Clear <inherit_depth> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function clearInheritDepth(){
      return $this->_clear(30014);
    }
    
    /**
     * Get <inherit_depth> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getInheritDepth(){
      return $this->_get(30014);
    }
    
    /**
     * Set <inherit_depth> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Response\Row
     */
    public function setInheritDepth(\dstore\engine\values\integerValue $value){
      return $this->_set(30014, $value);
    }
  }
}

