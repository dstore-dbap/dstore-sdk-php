<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetItemConditionParts_Ad.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\im_GetItemConditionParts_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $condition_part_id = null;
    
    /**  @var boolean */
    public $condition_part_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition_part_description_like = null;
    
    /**  @var boolean */
    public $condition_part_description_like_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_unused_condition_parts = null;
    
    /**  @var boolean */
    public $get_unused_condition_parts_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_by = null;
    
    /**  @var boolean */
    public $order_by_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $only_cond_parts_with_node_charac_id = null;
    
    /**  @var boolean */
    public $only_cond_parts_with_node_charac_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $only_cond_parts_with_dom_t_node_id1 = null;
    
    /**  @var boolean */
    public $only_cond_parts_with_dom_t_node_id1_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $only_cond_parts_with_dom_t_node_id2 = null;
    
    /**  @var boolean */
    public $only_cond_parts_with_dom_t_node_id2_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $only_cond_parts_with_dom_t_node_id3 = null;
    
    /**  @var boolean */
    public $only_cond_parts_with_dom_t_node_id3_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetItemConditionParts_Ad.Parameters');

      // OPTIONAL MESSAGE condition_part_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition_part_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_part_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "condition_part_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_part_description_like = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition_part_description_like";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_part_description_like_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "condition_part_description_like_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_unused_condition_parts = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "get_unused_condition_parts";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_unused_condition_parts_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "get_unused_condition_parts_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_by = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "order_by";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "order_by_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_cond_parts_with_node_charac_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "only_cond_parts_with_node_charac_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_cond_parts_with_node_charac_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "only_cond_parts_with_node_charac_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_cond_parts_with_dom_t_node_id1 = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "only_cond_parts_with_dom_t_node_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_cond_parts_with_dom_t_node_id1_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "only_cond_parts_with_dom_t_node_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_cond_parts_with_dom_t_node_id2 = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "only_cond_parts_with_dom_t_node_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_cond_parts_with_dom_t_node_id2_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "only_cond_parts_with_dom_t_node_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_cond_parts_with_dom_t_node_id3 = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "only_cond_parts_with_dom_t_node_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_cond_parts_with_dom_t_node_id3_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "only_cond_parts_with_dom_t_node_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition_part_id> has a value
     *
     * @return boolean
     */
    public function hasConditionPartId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition_part_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearConditionPartId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition_part_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionPartId(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition_part_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setConditionPartId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition_part_id_null> has a value
     *
     * @return boolean
     */
    public function hasConditionPartIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <condition_part_id_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearConditionPartIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <condition_part_id_null> value
     *
     * @return boolean
     */
    public function getConditionPartIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <condition_part_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setConditionPartIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <condition_part_description_like> has a value
     *
     * @return boolean
     */
    public function hasConditionPartDescriptionLike(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition_part_description_like> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearConditionPartDescriptionLike(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition_part_description_like> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getConditionPartDescriptionLike(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition_part_description_like> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setConditionPartDescriptionLike(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <condition_part_description_like_null> has a value
     *
     * @return boolean
     */
    public function hasConditionPartDescriptionLikeNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <condition_part_description_like_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearConditionPartDescriptionLikeNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <condition_part_description_like_null> value
     *
     * @return boolean
     */
    public function getConditionPartDescriptionLikeNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <condition_part_description_like_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setConditionPartDescriptionLikeNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <get_unused_condition_parts> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedConditionParts(){
      return $this->_has(3);
    }
    
    /**
     * Clear <get_unused_condition_parts> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearGetUnusedConditionParts(){
      return $this->_clear(3);
    }
    
    /**
     * Get <get_unused_condition_parts> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetUnusedConditionParts(){
      return $this->_get(3);
    }
    
    /**
     * Set <get_unused_condition_parts> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setGetUnusedConditionParts(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <get_unused_condition_parts_null> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedConditionPartsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <get_unused_condition_parts_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearGetUnusedConditionPartsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <get_unused_condition_parts_null> value
     *
     * @return boolean
     */
    public function getGetUnusedConditionPartsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <get_unused_condition_parts_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setGetUnusedConditionPartsNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <order_by> has a value
     *
     * @return boolean
     */
    public function hasOrderBy(){
      return $this->_has(4);
    }
    
    /**
     * Clear <order_by> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOrderBy(){
      return $this->_clear(4);
    }
    
    /**
     * Get <order_by> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderBy(){
      return $this->_get(4);
    }
    
    /**
     * Set <order_by> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOrderBy(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <order_by_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <order_by_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOrderByNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <order_by_null> value
     *
     * @return boolean
     */
    public function getOrderByNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <order_by_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOrderByNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(5);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(5);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(5);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_node_charac_id> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithNodeCharacId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <only_cond_parts_with_node_charac_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithNodeCharacId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <only_cond_parts_with_node_charac_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlyCondPartsWithNodeCharacId(){
      return $this->_get(6);
    }
    
    /**
     * Set <only_cond_parts_with_node_charac_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithNodeCharacId(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_node_charac_id_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithNodeCharacIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <only_cond_parts_with_node_charac_id_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithNodeCharacIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <only_cond_parts_with_node_charac_id_null> value
     *
     * @return boolean
     */
    public function getOnlyCondPartsWithNodeCharacIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <only_cond_parts_with_node_charac_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithNodeCharacIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id1> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId1(){
      return $this->_has(7);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id1> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId1(){
      return $this->_clear(7);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id1> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlyCondPartsWithDomTNodeId1(){
      return $this->_get(7);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id1> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId1(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id1_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId1Null(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id1_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId1Null(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id1_null> value
     *
     * @return boolean
     */
    public function getOnlyCondPartsWithDomTNodeId1Null(){
      return $this->_get(1007);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId1Null( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id2> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId2(){
      return $this->_has(8);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id2> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId2(){
      return $this->_clear(8);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id2> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlyCondPartsWithDomTNodeId2(){
      return $this->_get(8);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id2> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId2(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id2_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId2Null(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id2_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId2Null(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id2_null> value
     *
     * @return boolean
     */
    public function getOnlyCondPartsWithDomTNodeId2Null(){
      return $this->_get(1008);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId2Null( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id3> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId3(){
      return $this->_has(9);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id3> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId3(){
      return $this->_clear(9);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id3> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlyCondPartsWithDomTNodeId3(){
      return $this->_get(9);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id3> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId3(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <only_cond_parts_with_dom_t_node_id3_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyCondPartsWithDomTNodeId3Null(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <only_cond_parts_with_dom_t_node_id3_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOnlyCondPartsWithDomTNodeId3Null(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <only_cond_parts_with_dom_t_node_id3_null> value
     *
     * @return boolean
     */
    public function getOnlyCondPartsWithDomTNodeId3Null(){
      return $this->_get(1009);
    }
    
    /**
     * Set <only_cond_parts_with_dom_t_node_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOnlyCondPartsWithDomTNodeId3Null( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(10);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(10);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(10);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOutputIntoOneId(\dstore\engine\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditionParts_Ad\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

