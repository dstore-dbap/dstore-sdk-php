<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetVoucherTypes_Ad.proto
//   Date: 2016-05-19 08:07:51

namespace dstore\engine\om_GetVoucherTypes_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $v_code_origin_type = null;
    
    /**  @var \dstore\values\timestampValue */
    public $default_valid_until = null;
    
    /**  @var \dstore\values\stringValue */
    public $generation_pattern = null;
    
    /**  @var \dstore\values\integerValue */
    public $valid_for_x_days = null;
    
    /**  @var \dstore\values\integerValue */
    public $voucher_type_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $x_times_usable_per_person = null;
    
    /**  @var \dstore\values\stringValue */
    public $voucher_type_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $x_times_usable = null;
    
    /**  @var \dstore\values\integerValue */
    public $v_code_origin_type_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $code_status = null;
    
    /**  @var \dstore\values\stringValue */
    public $benefit_type_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $benefit_type_id = null;
    
    /**  @var \dstore\values\timestampValue */
    public $last_code_created_at = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetVoucherTypes_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE v_code_origin_type = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "v_code_origin_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_valid_until = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "default_valid_until";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE generation_pattern = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "generation_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE valid_for_x_days = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "valid_for_x_days";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE voucher_type_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "voucher_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_times_usable_per_person = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "x_times_usable_per_person";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE voucher_type_description = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "voucher_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_times_usable = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "x_times_usable";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE v_code_origin_type_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "v_code_origin_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE code_status = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "code_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_type_description = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "benefit_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_type_id = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "benefit_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_code_created_at = 20010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20010;
      $f->name      = "last_code_created_at";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <v_code_origin_type> has a value
     *
     * @return boolean
     */
    public function hasVCodeOriginType(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <v_code_origin_type> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearVCodeOriginType(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <v_code_origin_type> value
     *
     * @return \dstore\values\stringValue
     */
    public function getVCodeOriginType(){
      return $this->_get(10001);
    }
    
    /**
     * Set <v_code_origin_type> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setVCodeOriginType(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <default_valid_until> has a value
     *
     * @return boolean
     */
    public function hasDefaultValidUntil(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <default_valid_until> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearDefaultValidUntil(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <default_valid_until> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getDefaultValidUntil(){
      return $this->_get(10002);
    }
    
    /**
     * Set <default_valid_until> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setDefaultValidUntil(\dstore\values\timestampValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <generation_pattern> has a value
     *
     * @return boolean
     */
    public function hasGenerationPattern(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <generation_pattern> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearGenerationPattern(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <generation_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getGenerationPattern(){
      return $this->_get(10003);
    }
    
    /**
     * Set <generation_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setGenerationPattern(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <valid_for_x_days> has a value
     *
     * @return boolean
     */
    public function hasValidForXDays(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <valid_for_x_days> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearValidForXDays(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <valid_for_x_days> value
     *
     * @return \dstore\values\integerValue
     */
    public function getValidForXDays(){
      return $this->_get(10004);
    }
    
    /**
     * Set <valid_for_x_days> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setValidForXDays(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <voucher_type_id> has a value
     *
     * @return boolean
     */
    public function hasVoucherTypeId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <voucher_type_id> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearVoucherTypeId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <voucher_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getVoucherTypeId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <voucher_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setVoucherTypeId(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <x_times_usable_per_person> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsablePerPerson(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <x_times_usable_per_person> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearXTimesUsablePerPerson(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <x_times_usable_per_person> value
     *
     * @return \dstore\values\integerValue
     */
    public function getXTimesUsablePerPerson(){
      return $this->_get(10006);
    }
    
    /**
     * Set <x_times_usable_per_person> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setXTimesUsablePerPerson(\dstore\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <voucher_type_description> has a value
     *
     * @return boolean
     */
    public function hasVoucherTypeDescription(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <voucher_type_description> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearVoucherTypeDescription(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <voucher_type_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getVoucherTypeDescription(){
      return $this->_get(10007);
    }
    
    /**
     * Set <voucher_type_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setVoucherTypeDescription(\dstore\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <x_times_usable> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsable(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <x_times_usable> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearXTimesUsable(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <x_times_usable> value
     *
     * @return \dstore\values\integerValue
     */
    public function getXTimesUsable(){
      return $this->_get(10008);
    }
    
    /**
     * Set <x_times_usable> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setXTimesUsable(\dstore\values\integerValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <v_code_origin_type_id> has a value
     *
     * @return boolean
     */
    public function hasVCodeOriginTypeId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <v_code_origin_type_id> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearVCodeOriginTypeId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <v_code_origin_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getVCodeOriginTypeId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <v_code_origin_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setVCodeOriginTypeId(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <code_status> has a value
     *
     * @return boolean
     */
    public function hasCodeStatus(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <code_status> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearCodeStatus(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <code_status> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCodeStatus(){
      return $this->_get(10010);
    }
    
    /**
     * Set <code_status> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setCodeStatus(\dstore\values\integerValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <benefit_type_description> has a value
     *
     * @return boolean
     */
    public function hasBenefitTypeDescription(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <benefit_type_description> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearBenefitTypeDescription(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <benefit_type_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getBenefitTypeDescription(){
      return $this->_get(10011);
    }
    
    /**
     * Set <benefit_type_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setBenefitTypeDescription(\dstore\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <benefit_type_id> has a value
     *
     * @return boolean
     */
    public function hasBenefitTypeId(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <benefit_type_id> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearBenefitTypeId(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <benefit_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBenefitTypeId(){
      return $this->_get(10012);
    }
    
    /**
     * Set <benefit_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setBenefitTypeId(\dstore\values\integerValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <last_code_created_at> has a value
     *
     * @return boolean
     */
    public function hasLastCodeCreatedAt(){
      return $this->_has(20010);
    }
    
    /**
     * Clear <last_code_created_at> value
     *
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function clearLastCodeCreatedAt(){
      return $this->_clear(20010);
    }
    
    /**
     * Get <last_code_created_at> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getLastCodeCreatedAt(){
      return $this->_get(20010);
    }
    
    /**
     * Set <last_code_created_at> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetVoucherTypes_Ad\Response\Row
     */
    public function setLastCodeCreatedAt(\dstore\values\timestampValue $value){
      return $this->_set(20010, $value);
    }
  }
}

