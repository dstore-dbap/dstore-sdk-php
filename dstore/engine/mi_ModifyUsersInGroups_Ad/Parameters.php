<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_ModifyUsersInGroups_Ad.proto
//   Date: 2015-10-06 11:19:54

namespace dstore\engine\mi_ModifyUsersInGroups_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $user_id = null;
    
    /**  @var boolean */
    public $user_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $user_group_id = null;
    
    /**  @var boolean */
    public $user_group_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $move_priority = null;
    
    /**  @var boolean */
    public $move_priority_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_ModifyUsersInGroups_Ad.Parameters');

      // OPTIONAL MESSAGE user_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "user_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL user_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "user_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user_group_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "user_group_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL user_group_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "user_group_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE move_priority = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "move_priority";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL move_priority_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "move_priority_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <user_id> has a value
     *
     * @return boolean
     */
    public function hasUserId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <user_id> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearUserId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <user_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getUserId(){
      return $this->_get(1);
    }
    
    /**
     * Set <user_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setUserId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <user_id_null> has a value
     *
     * @return boolean
     */
    public function hasUserIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <user_id_null> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearUserIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <user_id_null> value
     *
     * @return boolean
     */
    public function getUserIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <user_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setUserIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <user_group_id> has a value
     *
     * @return boolean
     */
    public function hasUserGroupId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <user_group_id> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearUserGroupId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <user_group_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getUserGroupId(){
      return $this->_get(2);
    }
    
    /**
     * Set <user_group_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setUserGroupId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <user_group_id_null> has a value
     *
     * @return boolean
     */
    public function hasUserGroupIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <user_group_id_null> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearUserGroupIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <user_group_id_null> value
     *
     * @return boolean
     */
    public function getUserGroupIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <user_group_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setUserGroupIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <move_priority> has a value
     *
     * @return boolean
     */
    public function hasMovePriority(){
      return $this->_has(3);
    }
    
    /**
     * Clear <move_priority> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearMovePriority(){
      return $this->_clear(3);
    }
    
    /**
     * Get <move_priority> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMovePriority(){
      return $this->_get(3);
    }
    
    /**
     * Set <move_priority> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setMovePriority(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <move_priority_null> has a value
     *
     * @return boolean
     */
    public function hasMovePriorityNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <move_priority_null> value
     *
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function clearMovePriorityNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <move_priority_null> value
     *
     * @return boolean
     */
    public function getMovePriorityNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <move_priority_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyUsersInGroups_Ad\Parameters
     */
    public function setMovePriorityNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

