<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetBonusItemSets_Ad.proto
//   Date: 2016-05-19 08:07:48

namespace dstore\engine\om_GetBonusItemSets_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $item_set_id = null;
    
    /**  @var boolean */
    public $item_set_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $item_condition_id = null;
    
    /**  @var boolean */
    public $item_condition_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_unused_sets = null;
    
    /**  @var boolean */
    public $get_unused_sets_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetBonusItemSets_Ad.Parameters');

      // OPTIONAL MESSAGE item_set_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "item_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL item_set_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "item_set_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "item_condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL item_condition_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "item_condition_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_unused_sets = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "get_unused_sets";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_unused_sets_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "get_unused_sets_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <item_set_id> has a value
     *
     * @return boolean
     */
    public function hasItemSetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <item_set_id> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearItemSetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <item_set_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getItemSetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <item_set_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setItemSetId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <item_set_id_null> has a value
     *
     * @return boolean
     */
    public function hasItemSetIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <item_set_id_null> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearItemSetIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <item_set_id_null> value
     *
     * @return boolean
     */
    public function getItemSetIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <item_set_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setItemSetIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <item_condition_id> has a value
     *
     * @return boolean
     */
    public function hasItemConditionId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <item_condition_id> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearItemConditionId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <item_condition_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getItemConditionId(){
      return $this->_get(2);
    }
    
    /**
     * Set <item_condition_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setItemConditionId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <item_condition_id_null> has a value
     *
     * @return boolean
     */
    public function hasItemConditionIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <item_condition_id_null> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearItemConditionIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <item_condition_id_null> value
     *
     * @return boolean
     */
    public function getItemConditionIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <item_condition_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setItemConditionIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <get_unused_sets> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedSets(){
      return $this->_has(3);
    }
    
    /**
     * Clear <get_unused_sets> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearGetUnusedSets(){
      return $this->_clear(3);
    }
    
    /**
     * Get <get_unused_sets> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetUnusedSets(){
      return $this->_get(3);
    }
    
    /**
     * Set <get_unused_sets> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setGetUnusedSets(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <get_unused_sets_null> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedSetsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <get_unused_sets_null> value
     *
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function clearGetUnusedSetsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <get_unused_sets_null> value
     *
     * @return boolean
     */
    public function getGetUnusedSetsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <get_unused_sets_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetBonusItemSets_Ad\Parameters
     */
    public function setGetUnusedSetsNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

