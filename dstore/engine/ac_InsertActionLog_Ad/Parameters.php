<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/ac_InsertActionLog_Ad.proto
//   Date: 2016-05-19 08:07:39

namespace dstore\engine\ac_InsertActionLog_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $result = null;
    
    /**  @var boolean */
    public $result_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $action_id = null;
    
    /**  @var boolean */
    public $action_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $replace_last_log_part = null;
    
    /**  @var boolean */
    public $replace_last_log_part_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $maintain_search_postings = null;
    
    /**  @var boolean */
    public $maintain_search_postings_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $save_posting_properties = null;
    
    /**  @var boolean */
    public $save_posting_properties_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.ac_InsertActionLog_Ad.Parameters');

      // OPTIONAL MESSAGE result = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL result_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "result_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE action_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "action_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL action_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "action_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE replace_last_log_part = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "replace_last_log_part";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL replace_last_log_part_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "replace_last_log_part_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE maintain_search_postings = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "maintain_search_postings";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL maintain_search_postings_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "maintain_search_postings_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE save_posting_properties = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "save_posting_properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL save_posting_properties_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "save_posting_properties_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <result> has a value
     *
     * @return boolean
     */
    public function hasResult(){
      return $this->_has(1);
    }
    
    /**
     * Clear <result> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearResult(){
      return $this->_clear(1);
    }
    
    /**
     * Get <result> value
     *
     * @return \dstore\values\integerValue
     */
    public function getResult(){
      return $this->_get(1);
    }
    
    /**
     * Set <result> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setResult(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <result_null> has a value
     *
     * @return boolean
     */
    public function hasResultNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <result_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearResultNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <result_null> value
     *
     * @return boolean
     */
    public function getResultNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <result_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setResultNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <action_id> has a value
     *
     * @return boolean
     */
    public function hasActionId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <action_id> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearActionId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <action_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getActionId(){
      return $this->_get(2);
    }
    
    /**
     * Set <action_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setActionId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <action_id_null> has a value
     *
     * @return boolean
     */
    public function hasActionIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <action_id_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearActionIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <action_id_null> value
     *
     * @return boolean
     */
    public function getActionIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <action_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setActionIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <replace_last_log_part> has a value
     *
     * @return boolean
     */
    public function hasReplaceLastLogPart(){
      return $this->_has(3);
    }
    
    /**
     * Clear <replace_last_log_part> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearReplaceLastLogPart(){
      return $this->_clear(3);
    }
    
    /**
     * Get <replace_last_log_part> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getReplaceLastLogPart(){
      return $this->_get(3);
    }
    
    /**
     * Set <replace_last_log_part> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setReplaceLastLogPart(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <replace_last_log_part_null> has a value
     *
     * @return boolean
     */
    public function hasReplaceLastLogPartNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <replace_last_log_part_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearReplaceLastLogPartNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <replace_last_log_part_null> value
     *
     * @return boolean
     */
    public function getReplaceLastLogPartNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <replace_last_log_part_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setReplaceLastLogPartNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <maintain_search_postings> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchPostings(){
      return $this->_has(4);
    }
    
    /**
     * Clear <maintain_search_postings> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearMaintainSearchPostings(){
      return $this->_clear(4);
    }
    
    /**
     * Get <maintain_search_postings> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getMaintainSearchPostings(){
      return $this->_get(4);
    }
    
    /**
     * Set <maintain_search_postings> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setMaintainSearchPostings(\dstore\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <maintain_search_postings_null> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchPostingsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <maintain_search_postings_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearMaintainSearchPostingsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <maintain_search_postings_null> value
     *
     * @return boolean
     */
    public function getMaintainSearchPostingsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <maintain_search_postings_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setMaintainSearchPostingsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <save_posting_properties> has a value
     *
     * @return boolean
     */
    public function hasSavePostingProperties(){
      return $this->_has(5);
    }
    
    /**
     * Clear <save_posting_properties> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearSavePostingProperties(){
      return $this->_clear(5);
    }
    
    /**
     * Get <save_posting_properties> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSavePostingProperties(){
      return $this->_get(5);
    }
    
    /**
     * Set <save_posting_properties> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setSavePostingProperties(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <save_posting_properties_null> has a value
     *
     * @return boolean
     */
    public function hasSavePostingPropertiesNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <save_posting_properties_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearSavePostingPropertiesNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <save_posting_properties_null> value
     *
     * @return boolean
     */
    public function getSavePostingPropertiesNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <save_posting_properties_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setSavePostingPropertiesNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(6);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(6);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(6);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertActionLog_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

