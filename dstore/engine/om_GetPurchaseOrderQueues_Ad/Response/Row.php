<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPurchaseOrderQueues_Ad.proto
//   Date: 2015-10-06 11:19:59

namespace dstore\engine\om_GetPurchaseOrderQueues_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $suppl_charac_val2_restr_by_pattern = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $last_edited_by_user_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $currency_symbol = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $last_edited_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $supplier_id = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $net_sum = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $node_description = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $order_deadline = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $created_by_user_name = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $comment = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $supplier_characteristic_value2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_property = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $supplier_characteristic_value1 = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $quantity = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $last_edited_by_user_name = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $currency_id = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $created_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $created_by_user_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $order_type_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $h_tree_node_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_type_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_no = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $suppl_charac_val1_restr_by_pattern = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $number_of_items = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $number_of_expired_deadlines = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $min_order_deadline = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $number_of_queues = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $max_order_deadline = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $number_of_suppliers = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $total_net_sum = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $purchase_price_characteristic_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $total_quantity = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPurchaseOrderQueues_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE suppl_charac_val2_restr_by_pattern = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "suppl_charac_val2_restr_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_edited_by_user_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "last_edited_by_user_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_symbol = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "currency_symbol";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_edited_at_date_and_time = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "last_edited_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "supplier_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE net_sum = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "net_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_description = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "node_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_deadline = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "order_deadline";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE created_by_user_name = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "created_by_user_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE comment = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "comment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_characteristic_value2 = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "supplier_characteristic_value2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_property = 10014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10014;
      $f->name      = "item_property";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_characteristic_value1 = 10015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10015;
      $f->name      = "supplier_characteristic_value1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quantity = 10016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10016;
      $f->name      = "quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_edited_by_user_name = 10017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10017;
      $f->name      = "last_edited_by_user_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 10018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10018;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE created_at_date_and_time = 10019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10019;
      $f->name      = "created_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE created_by_user_id = 10020
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10020;
      $f->name      = "created_by_user_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_type_description = 10021
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10021;
      $f->name      = "order_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE h_tree_node_id = 10022
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10022;
      $f->name      = "h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_type_id = 10023
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10023;
      $f->name      = "order_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_no = 10024
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10024;
      $f->name      = "item_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE suppl_charac_val1_restr_by_pattern = 10025
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10025;
      $f->name      = "suppl_charac_val1_restr_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE number_of_items = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "number_of_items";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE number_of_expired_deadlines = 20002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20002;
      $f->name      = "number_of_expired_deadlines";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE min_order_deadline = 20003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20003;
      $f->name      = "min_order_deadline";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE number_of_queues = 20004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20004;
      $f->name      = "number_of_queues";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_order_deadline = 20005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20005;
      $f->name      = "max_order_deadline";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE number_of_suppliers = 20006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20006;
      $f->name      = "number_of_suppliers";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_net_sum = 30002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30002;
      $f->name      = "total_net_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE purchase_price_characteristic_id = 30006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30006;
      $f->name      = "purchase_price_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_quantity = 30012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30012;
      $f->name      = "total_quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <suppl_charac_val2_restr_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasSupplCharacVal2RestrByPattern(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <suppl_charac_val2_restr_by_pattern> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearSupplCharacVal2RestrByPattern(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <suppl_charac_val2_restr_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplCharacVal2RestrByPattern(){
      return $this->_get(10001);
    }
    
    /**
     * Set <suppl_charac_val2_restr_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setSupplCharacVal2RestrByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <last_edited_by_user_id> has a value
     *
     * @return boolean
     */
    public function hasLastEditedByUserId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <last_edited_by_user_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearLastEditedByUserId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <last_edited_by_user_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLastEditedByUserId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <last_edited_by_user_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setLastEditedByUserId(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <currency_symbol> has a value
     *
     * @return boolean
     */
    public function hasCurrencySymbol(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <currency_symbol> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearCurrencySymbol(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <currency_symbol> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCurrencySymbol(){
      return $this->_get(10003);
    }
    
    /**
     * Set <currency_symbol> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setCurrencySymbol(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <last_edited_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastEditedAtDateAndTime(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <last_edited_at_date_and_time> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearLastEditedAtDateAndTime(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <last_edited_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getLastEditedAtDateAndTime(){
      return $this->_get(10004);
    }
    
    /**
     * Set <last_edited_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setLastEditedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <supplier_id> has a value
     *
     * @return boolean
     */
    public function hasSupplierId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <supplier_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearSupplierId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <supplier_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSupplierId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <supplier_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setSupplierId(\dstore\engine\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <net_sum> has a value
     *
     * @return boolean
     */
    public function hasNetSum(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <net_sum> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNetSum(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <net_sum> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getNetSum(){
      return $this->_get(10006);
    }
    
    /**
     * Set <net_sum> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNetSum(\dstore\engine\values\decimalValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <node_description> has a value
     *
     * @return boolean
     */
    public function hasNodeDescription(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <node_description> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNodeDescription(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <node_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNodeDescription(){
      return $this->_get(10007);
    }
    
    /**
     * Set <node_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNodeDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <order_deadline> has a value
     *
     * @return boolean
     */
    public function hasOrderDeadline(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <order_deadline> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearOrderDeadline(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <order_deadline> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getOrderDeadline(){
      return $this->_get(10008);
    }
    
    /**
     * Set <order_deadline> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setOrderDeadline(\dstore\engine\values\timestampValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <node_id> has a value
     *
     * @return boolean
     */
    public function hasNodeId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <node_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNodeId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearTreeNodeId(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(10010);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <created_by_user_name> has a value
     *
     * @return boolean
     */
    public function hasCreatedByUserName(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <created_by_user_name> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearCreatedByUserName(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <created_by_user_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCreatedByUserName(){
      return $this->_get(10011);
    }
    
    /**
     * Set <created_by_user_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setCreatedByUserName(\dstore\engine\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <comment> has a value
     *
     * @return boolean
     */
    public function hasComment(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <comment> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearComment(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <comment> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getComment(){
      return $this->_get(10012);
    }
    
    /**
     * Set <comment> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setComment(\dstore\engine\values\stringValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <supplier_characteristic_value2> has a value
     *
     * @return boolean
     */
    public function hasSupplierCharacteristicValue2(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <supplier_characteristic_value2> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearSupplierCharacteristicValue2(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <supplier_characteristic_value2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplierCharacteristicValue2(){
      return $this->_get(10013);
    }
    
    /**
     * Set <supplier_characteristic_value2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setSupplierCharacteristicValue2(\dstore\engine\values\stringValue $value){
      return $this->_set(10013, $value);
    }
    
    /**
     * Check if <item_property> has a value
     *
     * @return boolean
     */
    public function hasItemProperty(){
      return $this->_has(10014);
    }
    
    /**
     * Clear <item_property> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearItemProperty(){
      return $this->_clear(10014);
    }
    
    /**
     * Get <item_property> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemProperty(){
      return $this->_get(10014);
    }
    
    /**
     * Set <item_property> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setItemProperty(\dstore\engine\values\stringValue $value){
      return $this->_set(10014, $value);
    }
    
    /**
     * Check if <supplier_characteristic_value1> has a value
     *
     * @return boolean
     */
    public function hasSupplierCharacteristicValue1(){
      return $this->_has(10015);
    }
    
    /**
     * Clear <supplier_characteristic_value1> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearSupplierCharacteristicValue1(){
      return $this->_clear(10015);
    }
    
    /**
     * Get <supplier_characteristic_value1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplierCharacteristicValue1(){
      return $this->_get(10015);
    }
    
    /**
     * Set <supplier_characteristic_value1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setSupplierCharacteristicValue1(\dstore\engine\values\stringValue $value){
      return $this->_set(10015, $value);
    }
    
    /**
     * Check if <quantity> has a value
     *
     * @return boolean
     */
    public function hasQuantity(){
      return $this->_has(10016);
    }
    
    /**
     * Clear <quantity> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearQuantity(){
      return $this->_clear(10016);
    }
    
    /**
     * Get <quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getQuantity(){
      return $this->_get(10016);
    }
    
    /**
     * Set <quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(10016, $value);
    }
    
    /**
     * Check if <last_edited_by_user_name> has a value
     *
     * @return boolean
     */
    public function hasLastEditedByUserName(){
      return $this->_has(10017);
    }
    
    /**
     * Clear <last_edited_by_user_name> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearLastEditedByUserName(){
      return $this->_clear(10017);
    }
    
    /**
     * Get <last_edited_by_user_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getLastEditedByUserName(){
      return $this->_get(10017);
    }
    
    /**
     * Set <last_edited_by_user_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setLastEditedByUserName(\dstore\engine\values\stringValue $value){
      return $this->_set(10017, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(10018);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearCurrencyId(){
      return $this->_clear(10018);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(10018);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setCurrencyId(\dstore\engine\values\integerValue $value){
      return $this->_set(10018, $value);
    }
    
    /**
     * Check if <created_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasCreatedAtDateAndTime(){
      return $this->_has(10019);
    }
    
    /**
     * Clear <created_at_date_and_time> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearCreatedAtDateAndTime(){
      return $this->_clear(10019);
    }
    
    /**
     * Get <created_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getCreatedAtDateAndTime(){
      return $this->_get(10019);
    }
    
    /**
     * Set <created_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setCreatedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10019, $value);
    }
    
    /**
     * Check if <created_by_user_id> has a value
     *
     * @return boolean
     */
    public function hasCreatedByUserId(){
      return $this->_has(10020);
    }
    
    /**
     * Clear <created_by_user_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearCreatedByUserId(){
      return $this->_clear(10020);
    }
    
    /**
     * Get <created_by_user_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCreatedByUserId(){
      return $this->_get(10020);
    }
    
    /**
     * Set <created_by_user_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setCreatedByUserId(\dstore\engine\values\integerValue $value){
      return $this->_set(10020, $value);
    }
    
    /**
     * Check if <order_type_description> has a value
     *
     * @return boolean
     */
    public function hasOrderTypeDescription(){
      return $this->_has(10021);
    }
    
    /**
     * Clear <order_type_description> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearOrderTypeDescription(){
      return $this->_clear(10021);
    }
    
    /**
     * Get <order_type_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOrderTypeDescription(){
      return $this->_get(10021);
    }
    
    /**
     * Set <order_type_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setOrderTypeDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10021, $value);
    }
    
    /**
     * Check if <h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasHTreeNodeId(){
      return $this->_has(10022);
    }
    
    /**
     * Clear <h_tree_node_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearHTreeNodeId(){
      return $this->_clear(10022);
    }
    
    /**
     * Get <h_tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getHTreeNodeId(){
      return $this->_get(10022);
    }
    
    /**
     * Set <h_tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setHTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10022, $value);
    }
    
    /**
     * Check if <order_type_id> has a value
     *
     * @return boolean
     */
    public function hasOrderTypeId(){
      return $this->_has(10023);
    }
    
    /**
     * Clear <order_type_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearOrderTypeId(){
      return $this->_clear(10023);
    }
    
    /**
     * Get <order_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderTypeId(){
      return $this->_get(10023);
    }
    
    /**
     * Set <order_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setOrderTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10023, $value);
    }
    
    /**
     * Check if <item_no> has a value
     *
     * @return boolean
     */
    public function hasItemNo(){
      return $this->_has(10024);
    }
    
    /**
     * Clear <item_no> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearItemNo(){
      return $this->_clear(10024);
    }
    
    /**
     * Get <item_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemNo(){
      return $this->_get(10024);
    }
    
    /**
     * Set <item_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setItemNo(\dstore\engine\values\stringValue $value){
      return $this->_set(10024, $value);
    }
    
    /**
     * Check if <suppl_charac_val1_restr_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasSupplCharacVal1RestrByPattern(){
      return $this->_has(10025);
    }
    
    /**
     * Clear <suppl_charac_val1_restr_by_pattern> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearSupplCharacVal1RestrByPattern(){
      return $this->_clear(10025);
    }
    
    /**
     * Get <suppl_charac_val1_restr_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplCharacVal1RestrByPattern(){
      return $this->_get(10025);
    }
    
    /**
     * Set <suppl_charac_val1_restr_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setSupplCharacVal1RestrByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10025, $value);
    }
    
    /**
     * Check if <number_of_items> has a value
     *
     * @return boolean
     */
    public function hasNumberOfItems(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <number_of_items> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNumberOfItems(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <number_of_items> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNumberOfItems(){
      return $this->_get(20001);
    }
    
    /**
     * Set <number_of_items> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNumberOfItems(\dstore\engine\values\integerValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <number_of_expired_deadlines> has a value
     *
     * @return boolean
     */
    public function hasNumberOfExpiredDeadlines(){
      return $this->_has(20002);
    }
    
    /**
     * Clear <number_of_expired_deadlines> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNumberOfExpiredDeadlines(){
      return $this->_clear(20002);
    }
    
    /**
     * Get <number_of_expired_deadlines> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNumberOfExpiredDeadlines(){
      return $this->_get(20002);
    }
    
    /**
     * Set <number_of_expired_deadlines> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNumberOfExpiredDeadlines(\dstore\engine\values\integerValue $value){
      return $this->_set(20002, $value);
    }
    
    /**
     * Check if <min_order_deadline> has a value
     *
     * @return boolean
     */
    public function hasMinOrderDeadline(){
      return $this->_has(20003);
    }
    
    /**
     * Clear <min_order_deadline> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearMinOrderDeadline(){
      return $this->_clear(20003);
    }
    
    /**
     * Get <min_order_deadline> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getMinOrderDeadline(){
      return $this->_get(20003);
    }
    
    /**
     * Set <min_order_deadline> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setMinOrderDeadline(\dstore\engine\values\decimalValue $value){
      return $this->_set(20003, $value);
    }
    
    /**
     * Check if <number_of_queues> has a value
     *
     * @return boolean
     */
    public function hasNumberOfQueues(){
      return $this->_has(20004);
    }
    
    /**
     * Clear <number_of_queues> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNumberOfQueues(){
      return $this->_clear(20004);
    }
    
    /**
     * Get <number_of_queues> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNumberOfQueues(){
      return $this->_get(20004);
    }
    
    /**
     * Set <number_of_queues> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNumberOfQueues(\dstore\engine\values\integerValue $value){
      return $this->_set(20004, $value);
    }
    
    /**
     * Check if <max_order_deadline> has a value
     *
     * @return boolean
     */
    public function hasMaxOrderDeadline(){
      return $this->_has(20005);
    }
    
    /**
     * Clear <max_order_deadline> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearMaxOrderDeadline(){
      return $this->_clear(20005);
    }
    
    /**
     * Get <max_order_deadline> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getMaxOrderDeadline(){
      return $this->_get(20005);
    }
    
    /**
     * Set <max_order_deadline> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setMaxOrderDeadline(\dstore\engine\values\decimalValue $value){
      return $this->_set(20005, $value);
    }
    
    /**
     * Check if <number_of_suppliers> has a value
     *
     * @return boolean
     */
    public function hasNumberOfSuppliers(){
      return $this->_has(20006);
    }
    
    /**
     * Clear <number_of_suppliers> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearNumberOfSuppliers(){
      return $this->_clear(20006);
    }
    
    /**
     * Get <number_of_suppliers> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNumberOfSuppliers(){
      return $this->_get(20006);
    }
    
    /**
     * Set <number_of_suppliers> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setNumberOfSuppliers(\dstore\engine\values\integerValue $value){
      return $this->_set(20006, $value);
    }
    
    /**
     * Check if <total_net_sum> has a value
     *
     * @return boolean
     */
    public function hasTotalNetSum(){
      return $this->_has(30002);
    }
    
    /**
     * Clear <total_net_sum> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearTotalNetSum(){
      return $this->_clear(30002);
    }
    
    /**
     * Get <total_net_sum> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getTotalNetSum(){
      return $this->_get(30002);
    }
    
    /**
     * Set <total_net_sum> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setTotalNetSum(\dstore\engine\values\decimalValue $value){
      return $this->_set(30002, $value);
    }
    
    /**
     * Check if <purchase_price_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPurchasePriceCharacteristicId(){
      return $this->_has(30006);
    }
    
    /**
     * Clear <purchase_price_characteristic_id> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearPurchasePriceCharacteristicId(){
      return $this->_clear(30006);
    }
    
    /**
     * Get <purchase_price_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPurchasePriceCharacteristicId(){
      return $this->_get(30006);
    }
    
    /**
     * Set <purchase_price_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setPurchasePriceCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(30006, $value);
    }
    
    /**
     * Check if <total_quantity> has a value
     *
     * @return boolean
     */
    public function hasTotalQuantity(){
      return $this->_has(30012);
    }
    
    /**
     * Clear <total_quantity> value
     *
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function clearTotalQuantity(){
      return $this->_clear(30012);
    }
    
    /**
     * Get <total_quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTotalQuantity(){
      return $this->_get(30012);
    }
    
    /**
     * Set <total_quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchaseOrderQueues_Ad\Response\Row
     */
    public function setTotalQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(30012, $value);
    }
  }
}

