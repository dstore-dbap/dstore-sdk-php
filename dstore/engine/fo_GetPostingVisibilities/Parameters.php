<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetPostingVisibilities.proto
//   Date: 2015-10-06 11:19:45

namespace dstore\engine\fo_GetPostingVisibilities {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $visible = null;
    
    /**  @var boolean */
    public $visible_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $visible_get = null;
    
    /**  @var boolean */
    public $visible_get_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetPostingVisibilities.Parameters');

      // OPTIONAL MESSAGE visible = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "visible";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL visible_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "visible_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE visible_get = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "visible_get";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL visible_get_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "visible_get_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <visible> has a value
     *
     * @return boolean
     */
    public function hasVisible(){
      return $this->_has(1);
    }
    
    /**
     * Clear <visible> value
     *
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function clearVisible(){
      return $this->_clear(1);
    }
    
    /**
     * Get <visible> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisible(){
      return $this->_get(1);
    }
    
    /**
     * Set <visible> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function setVisible(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <visible_null> has a value
     *
     * @return boolean
     */
    public function hasVisibleNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <visible_null> value
     *
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function clearVisibleNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <visible_null> value
     *
     * @return boolean
     */
    public function getVisibleNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <visible_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function setVisibleNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <visible_get> has a value
     *
     * @return boolean
     */
    public function hasVisibleGet(){
      return $this->_has(2);
    }
    
    /**
     * Clear <visible_get> value
     *
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function clearVisibleGet(){
      return $this->_clear(2);
    }
    
    /**
     * Get <visible_get> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisibleGet(){
      return $this->_get(2);
    }
    
    /**
     * Set <visible_get> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function setVisibleGet(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <visible_get_null> has a value
     *
     * @return boolean
     */
    public function hasVisibleGetNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <visible_get_null> value
     *
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function clearVisibleGetNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <visible_get_null> value
     *
     * @return boolean
     */
    public function getVisibleGetNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <visible_get_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingVisibilities\Parameters
     */
    public function setVisibleGetNull( $value){
      return $this->_set(1002, $value);
    }
  }
}

