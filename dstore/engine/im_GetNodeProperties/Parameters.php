<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetNodeProperties.proto
//   Date: 2016-05-19 08:07:42

namespace dstore\engine\im_GetNodeProperties {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $node_list = null;
    
    /**  @var boolean */
    public $node_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $tree_node_ids = null;
    
    /**  @var boolean */
    public $tree_node_ids_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $language_id = null;
    
    /**  @var boolean */
    public $language_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $inherit_depth = null;
    
    /**  @var boolean */
    public $inherit_depth_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $recursive_evaluation = null;
    
    /**  @var boolean */
    public $recursive_evaluation_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $characteristic_id_list = null;
    
    /**  @var boolean */
    public $characteristic_id_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $use_distinct = null;
    
    /**  @var boolean */
    public $use_distinct_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $date_format = null;
    
    /**  @var boolean */
    public $date_format_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_inherits_from_info = null;
    
    /**  @var boolean */
    public $include_inherits_from_info_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $language_id_for_charac_descript = null;
    
    /**  @var boolean */
    public $language_id_for_charac_descript_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $check_nodes = null;
    
    /**  @var boolean */
    public $check_nodes_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $get_details_for_charac_id_list = null;
    
    /**  @var boolean */
    public $get_details_for_charac_id_list_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetNodeProperties.Parameters');

      // OPTIONAL MESSAGE node_list = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "node_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_list_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "node_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "tree_node_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_ids_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "tree_node_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE language_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "language_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL language_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "language_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "inherit_depth";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL inherit_depth_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "inherit_depth_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "recursive_evaluation";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL recursive_evaluation_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "recursive_evaluation_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_id_list = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characteristic_id_list_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE use_distinct = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "use_distinct";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL use_distinct_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "use_distinct_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date_format = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "date_format";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_format_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "date_format_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_inherits_from_info = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "include_inherits_from_info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_inherits_from_info_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "include_inherits_from_info_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE language_id_for_charac_descript = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "language_id_for_charac_descript";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL language_id_for_charac_descript_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "language_id_for_charac_descript_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE check_nodes = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "check_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL check_nodes_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "check_nodes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_details_for_charac_id_list = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "get_details_for_charac_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_details_for_charac_id_list_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "get_details_for_charac_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <node_list> has a value
     *
     * @return boolean
     */
    public function hasNodeList(){
      return $this->_has(1);
    }
    
    /**
     * Clear <node_list> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearNodeList(){
      return $this->_clear(1);
    }
    
    /**
     * Get <node_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getNodeList(){
      return $this->_get(1);
    }
    
    /**
     * Set <node_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setNodeList(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <node_list_null> has a value
     *
     * @return boolean
     */
    public function hasNodeListNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <node_list_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearNodeListNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <node_list_null> value
     *
     * @return boolean
     */
    public function getNodeListNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <node_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setNodeListNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <tree_node_ids> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <tree_node_ids> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearTreeNodeIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <tree_node_ids> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getTreeNodeIds(){
      return $this->_get(2);
    }
    
    /**
     * Set <tree_node_ids> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setTreeNodeIds(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <tree_node_ids_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <tree_node_ids_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearTreeNodeIdsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <tree_node_ids_null> value
     *
     * @return boolean
     */
    public function getTreeNodeIdsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <tree_node_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setTreeNodeIdsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <language_id> has a value
     *
     * @return boolean
     */
    public function hasLanguageId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <language_id> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearLanguageId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <language_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLanguageId(){
      return $this->_get(3);
    }
    
    /**
     * Set <language_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setLanguageId(\dstore\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <language_id_null> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <language_id_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearLanguageIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <language_id_null> value
     *
     * @return boolean
     */
    public function getLanguageIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <language_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setLanguageIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <inherit_depth> has a value
     *
     * @return boolean
     */
    public function hasInheritDepth(){
      return $this->_has(4);
    }
    
    /**
     * Clear <inherit_depth> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearInheritDepth(){
      return $this->_clear(4);
    }
    
    /**
     * Get <inherit_depth> value
     *
     * @return \dstore\values\integerValue
     */
    public function getInheritDepth(){
      return $this->_get(4);
    }
    
    /**
     * Set <inherit_depth> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setInheritDepth(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <inherit_depth_null> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <inherit_depth_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearInheritDepthNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <inherit_depth_null> value
     *
     * @return boolean
     */
    public function getInheritDepthNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <inherit_depth_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setInheritDepthNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <recursive_evaluation> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluation(){
      return $this->_has(5);
    }
    
    /**
     * Clear <recursive_evaluation> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearRecursiveEvaluation(){
      return $this->_clear(5);
    }
    
    /**
     * Get <recursive_evaluation> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRecursiveEvaluation(){
      return $this->_get(5);
    }
    
    /**
     * Set <recursive_evaluation> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setRecursiveEvaluation(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <recursive_evaluation_null> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <recursive_evaluation_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearRecursiveEvaluationNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <recursive_evaluation_null> value
     *
     * @return boolean
     */
    public function getRecursiveEvaluationNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <recursive_evaluation_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setRecursiveEvaluationNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdList(){
      return $this->_has(6);
    }
    
    /**
     * Clear <characteristic_id_list> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearCharacteristicIdList(){
      return $this->_clear(6);
    }
    
    /**
     * Get <characteristic_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCharacteristicIdList(){
      return $this->_get(6);
    }
    
    /**
     * Set <characteristic_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setCharacteristicIdList(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdListNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <characteristic_id_list_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearCharacteristicIdListNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getCharacteristicIdListNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setCharacteristicIdListNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <use_distinct> has a value
     *
     * @return boolean
     */
    public function hasUseDistinct(){
      return $this->_has(7);
    }
    
    /**
     * Clear <use_distinct> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearUseDistinct(){
      return $this->_clear(7);
    }
    
    /**
     * Get <use_distinct> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getUseDistinct(){
      return $this->_get(7);
    }
    
    /**
     * Set <use_distinct> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setUseDistinct(\dstore\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <use_distinct_null> has a value
     *
     * @return boolean
     */
    public function hasUseDistinctNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <use_distinct_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearUseDistinctNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <use_distinct_null> value
     *
     * @return boolean
     */
    public function getUseDistinctNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <use_distinct_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setUseDistinctNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <date_format> has a value
     *
     * @return boolean
     */
    public function hasDateFormat(){
      return $this->_has(8);
    }
    
    /**
     * Clear <date_format> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearDateFormat(){
      return $this->_clear(8);
    }
    
    /**
     * Get <date_format> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDateFormat(){
      return $this->_get(8);
    }
    
    /**
     * Set <date_format> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setDateFormat(\dstore\values\stringValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <date_format_null> has a value
     *
     * @return boolean
     */
    public function hasDateFormatNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <date_format_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearDateFormatNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <date_format_null> value
     *
     * @return boolean
     */
    public function getDateFormatNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <date_format_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setDateFormatNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <include_inherits_from_info> has a value
     *
     * @return boolean
     */
    public function hasIncludeInheritsFromInfo(){
      return $this->_has(9);
    }
    
    /**
     * Clear <include_inherits_from_info> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearIncludeInheritsFromInfo(){
      return $this->_clear(9);
    }
    
    /**
     * Get <include_inherits_from_info> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeInheritsFromInfo(){
      return $this->_get(9);
    }
    
    /**
     * Set <include_inherits_from_info> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setIncludeInheritsFromInfo(\dstore\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <include_inherits_from_info_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeInheritsFromInfoNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <include_inherits_from_info_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearIncludeInheritsFromInfoNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <include_inherits_from_info_null> value
     *
     * @return boolean
     */
    public function getIncludeInheritsFromInfoNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <include_inherits_from_info_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setIncludeInheritsFromInfoNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <language_id_for_charac_descript> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdForCharacDescript(){
      return $this->_has(10);
    }
    
    /**
     * Clear <language_id_for_charac_descript> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearLanguageIdForCharacDescript(){
      return $this->_clear(10);
    }
    
    /**
     * Get <language_id_for_charac_descript> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLanguageIdForCharacDescript(){
      return $this->_get(10);
    }
    
    /**
     * Set <language_id_for_charac_descript> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setLanguageIdForCharacDescript(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <language_id_for_charac_descript_null> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdForCharacDescriptNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <language_id_for_charac_descript_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearLanguageIdForCharacDescriptNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <language_id_for_charac_descript_null> value
     *
     * @return boolean
     */
    public function getLanguageIdForCharacDescriptNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <language_id_for_charac_descript_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setLanguageIdForCharacDescriptNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <check_nodes> has a value
     *
     * @return boolean
     */
    public function hasCheckNodes(){
      return $this->_has(11);
    }
    
    /**
     * Clear <check_nodes> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearCheckNodes(){
      return $this->_clear(11);
    }
    
    /**
     * Get <check_nodes> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCheckNodes(){
      return $this->_get(11);
    }
    
    /**
     * Set <check_nodes> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setCheckNodes(\dstore\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <check_nodes_null> has a value
     *
     * @return boolean
     */
    public function hasCheckNodesNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <check_nodes_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearCheckNodesNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <check_nodes_null> value
     *
     * @return boolean
     */
    public function getCheckNodesNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <check_nodes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setCheckNodesNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <get_details_for_charac_id_list> has a value
     *
     * @return boolean
     */
    public function hasGetDetailsForCharacIdList(){
      return $this->_has(12);
    }
    
    /**
     * Clear <get_details_for_charac_id_list> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearGetDetailsForCharacIdList(){
      return $this->_clear(12);
    }
    
    /**
     * Get <get_details_for_charac_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getGetDetailsForCharacIdList(){
      return $this->_get(12);
    }
    
    /**
     * Set <get_details_for_charac_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setGetDetailsForCharacIdList(\dstore\values\stringValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <get_details_for_charac_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasGetDetailsForCharacIdListNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <get_details_for_charac_id_list_null> value
     *
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function clearGetDetailsForCharacIdListNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <get_details_for_charac_id_list_null> value
     *
     * @return boolean
     */
    public function getGetDetailsForCharacIdListNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <get_details_for_charac_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeProperties\Parameters
     */
    public function setGetDetailsForCharacIdListNull( $value){
      return $this->_set(1012, $value);
    }
  }
}

