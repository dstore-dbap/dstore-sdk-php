<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_GetMemberBinaries_Pu.proto
//   Date: 2016-05-19 08:07:39

namespace dstore\engine\co_GetMemberBinaries_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $value1_restricted_by_pattern = null;
    
    /**  @var \dstore\values\integerValue */
    public $binary_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $value2_restricted_by_pattern = null;
    
    /**  @var \dstore\values\stringValue */
    public $binary_description = null;
    
    /**  @var \dstore\values\timestampValue */
    public $input_date_and_time = null;
    
    /**  @var \dstore\values\stringValue */
    public $content_type = null;
    
    /**  @var \dstore\values\stringValue */
    public $value3 = null;
    
    /**  @var \dstore\values\timestampValue */
    public $file_date_and_time = null;
    
    /**  @var \dstore\values\stringValue */
    public $value1 = null;
    
    /**  @var \dstore\values\integerValue */
    public $filesize_in_k_b = null;
    
    /**  @var \dstore\values\stringValue */
    public $value2 = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\values\integerValue */
    public $from_community_member_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $quoted_file_size_in_k_b = null;
    
    /**  @var \dstore\values\stringValue */
    public $m_d5_hash = null;
    
    /**  @var \dstore\values\stringValue */
    public $value3_restricted_by_pattern = null;
    
    /**  @var \dstore\values\stringValue */
    public $input_date_and_time_char = null;
    
    /**  @var \dstore\values\stringValue */
    public $nickname = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_GetMemberBinaries_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value1_restricted_by_pattern = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "value1_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "binary_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value2_restricted_by_pattern = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "value2_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_description = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "binary_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_date_and_time = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "input_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE content_type = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "content_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value3 = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "value3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE file_date_and_time = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "file_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value1 = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "value1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filesize_in_k_b = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "filesize_in_k_b";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value2 = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "value2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_community_member_id = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "from_community_member_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quoted_file_size_in_k_b = 10014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10014;
      $f->name      = "quoted_file_size_in_k_b";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE m_d5_hash = 10015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10015;
      $f->name      = "m_d5_hash";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value3_restricted_by_pattern = 10016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10016;
      $f->name      = "value3_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_date_and_time_char = 10017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10017;
      $f->name      = "input_date_and_time_char";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE nickname = 10018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10018;
      $f->name      = "nickname";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <value1_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue1RestrictedByPattern(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <value1_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue1RestrictedByPattern(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <value1_restricted_by_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue1RestrictedByPattern(){
      return $this->_get(10001);
    }
    
    /**
     * Set <value1_restricted_by_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue1RestrictedByPattern(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <binary_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <binary_id> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearBinaryId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <binary_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBinaryId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <binary_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setBinaryId(\dstore\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <value2_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue2RestrictedByPattern(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <value2_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue2RestrictedByPattern(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <value2_restricted_by_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue2RestrictedByPattern(){
      return $this->_get(10003);
    }
    
    /**
     * Set <value2_restricted_by_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue2RestrictedByPattern(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <binary_description> has a value
     *
     * @return boolean
     */
    public function hasBinaryDescription(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <binary_description> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearBinaryDescription(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <binary_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getBinaryDescription(){
      return $this->_get(10004);
    }
    
    /**
     * Set <binary_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setBinaryDescription(\dstore\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <input_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasInputDateAndTime(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <input_date_and_time> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearInputDateAndTime(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <input_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getInputDateAndTime(){
      return $this->_get(10005);
    }
    
    /**
     * Set <input_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setInputDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <content_type> has a value
     *
     * @return boolean
     */
    public function hasContentType(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <content_type> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearContentType(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <content_type> value
     *
     * @return \dstore\values\stringValue
     */
    public function getContentType(){
      return $this->_get(10006);
    }
    
    /**
     * Set <content_type> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setContentType(\dstore\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <value3> has a value
     *
     * @return boolean
     */
    public function hasValue3(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <value3> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue3(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <value3> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue3(){
      return $this->_get(10007);
    }
    
    /**
     * Set <value3> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue3(\dstore\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <file_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasFileDateAndTime(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <file_date_and_time> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearFileDateAndTime(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <file_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFileDateAndTime(){
      return $this->_get(10008);
    }
    
    /**
     * Set <file_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setFileDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <value1> has a value
     *
     * @return boolean
     */
    public function hasValue1(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <value1> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue1(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <value1> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue1(){
      return $this->_get(10009);
    }
    
    /**
     * Set <value1> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue1(\dstore\values\stringValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <filesize_in_k_b> has a value
     *
     * @return boolean
     */
    public function hasFilesizeInKB(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <filesize_in_k_b> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearFilesizeInKB(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <filesize_in_k_b> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFilesizeInKB(){
      return $this->_get(10010);
    }
    
    /**
     * Set <filesize_in_k_b> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setFilesizeInKB(\dstore\values\integerValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <value2> has a value
     *
     * @return boolean
     */
    public function hasValue2(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <value2> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue2(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <value2> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue2(){
      return $this->_get(10011);
    }
    
    /**
     * Set <value2> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue2(\dstore\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(10012);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setSortNo(\dstore\values\integerValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <from_community_member_id> has a value
     *
     * @return boolean
     */
    public function hasFromCommunityMemberId(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <from_community_member_id> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearFromCommunityMemberId(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <from_community_member_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFromCommunityMemberId(){
      return $this->_get(10013);
    }
    
    /**
     * Set <from_community_member_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setFromCommunityMemberId(\dstore\values\integerValue $value){
      return $this->_set(10013, $value);
    }
    
    /**
     * Check if <quoted_file_size_in_k_b> has a value
     *
     * @return boolean
     */
    public function hasQuotedFileSizeInKB(){
      return $this->_has(10014);
    }
    
    /**
     * Clear <quoted_file_size_in_k_b> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearQuotedFileSizeInKB(){
      return $this->_clear(10014);
    }
    
    /**
     * Get <quoted_file_size_in_k_b> value
     *
     * @return \dstore\values\integerValue
     */
    public function getQuotedFileSizeInKB(){
      return $this->_get(10014);
    }
    
    /**
     * Set <quoted_file_size_in_k_b> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setQuotedFileSizeInKB(\dstore\values\integerValue $value){
      return $this->_set(10014, $value);
    }
    
    /**
     * Check if <m_d5_hash> has a value
     *
     * @return boolean
     */
    public function hasMD5Hash(){
      return $this->_has(10015);
    }
    
    /**
     * Clear <m_d5_hash> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearMD5Hash(){
      return $this->_clear(10015);
    }
    
    /**
     * Get <m_d5_hash> value
     *
     * @return \dstore\values\stringValue
     */
    public function getMD5Hash(){
      return $this->_get(10015);
    }
    
    /**
     * Set <m_d5_hash> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setMD5Hash(\dstore\values\stringValue $value){
      return $this->_set(10015, $value);
    }
    
    /**
     * Check if <value3_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue3RestrictedByPattern(){
      return $this->_has(10016);
    }
    
    /**
     * Clear <value3_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearValue3RestrictedByPattern(){
      return $this->_clear(10016);
    }
    
    /**
     * Get <value3_restricted_by_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue3RestrictedByPattern(){
      return $this->_get(10016);
    }
    
    /**
     * Set <value3_restricted_by_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setValue3RestrictedByPattern(\dstore\values\stringValue $value){
      return $this->_set(10016, $value);
    }
    
    /**
     * Check if <input_date_and_time_char> has a value
     *
     * @return boolean
     */
    public function hasInputDateAndTimeChar(){
      return $this->_has(10017);
    }
    
    /**
     * Clear <input_date_and_time_char> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearInputDateAndTimeChar(){
      return $this->_clear(10017);
    }
    
    /**
     * Get <input_date_and_time_char> value
     *
     * @return \dstore\values\stringValue
     */
    public function getInputDateAndTimeChar(){
      return $this->_get(10017);
    }
    
    /**
     * Set <input_date_and_time_char> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setInputDateAndTimeChar(\dstore\values\stringValue $value){
      return $this->_set(10017, $value);
    }
    
    /**
     * Check if <nickname> has a value
     *
     * @return boolean
     */
    public function hasNickname(){
      return $this->_has(10018);
    }
    
    /**
     * Clear <nickname> value
     *
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function clearNickname(){
      return $this->_clear(10018);
    }
    
    /**
     * Get <nickname> value
     *
     * @return \dstore\values\stringValue
     */
    public function getNickname(){
      return $this->_get(10018);
    }
    
    /**
     * Set <nickname> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_GetMemberBinaries_Pu\Response\Row
     */
    public function setNickname(\dstore\values\stringValue $value){
      return $this->_set(10018, $value);
    }
  }
}

