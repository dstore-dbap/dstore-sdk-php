<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetTrolleySurcharges_Pu.proto
//   Date: 2016-05-19 08:07:51

namespace dstore\engine\om_GetTrolleySurcharges_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $gross_sum = null;
    
    /**  @var boolean */
    public $gross_sum_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $net_sum = null;
    
    /**  @var boolean */
    public $net_sum_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $currency_id = null;
    
    /**  @var boolean */
    public $currency_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $delivery_person_id = null;
    
    /**  @var boolean */
    public $delivery_person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $shipping_type_id = null;
    
    /**  @var boolean */
    public $shipping_type_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_type_id = null;
    
    /**  @var boolean */
    public $payment_type_id_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $use_cash_account_max_value = null;
    
    /**  @var boolean */
    public $use_cash_account_max_value_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $split_by_taxes = null;
    
    /**  @var boolean */
    public $split_by_taxes_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetTrolleySurcharges_Pu.Parameters');

      // OPTIONAL MESSAGE unique_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE gross_sum = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "gross_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL gross_sum_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "gross_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE net_sum = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "net_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL net_sum_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "net_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL currency_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "currency_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delivery_person_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delivery_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delivery_person_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delivery_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shipping_type_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "shipping_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL shipping_type_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "shipping_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_id = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "payment_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL payment_type_id_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "payment_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE use_cash_account_max_value = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "use_cash_account_max_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL use_cash_account_max_value_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "use_cash_account_max_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE split_by_taxes = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "split_by_taxes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL split_by_taxes_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "split_by_taxes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(1);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setUniqueId(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <gross_sum> has a value
     *
     * @return boolean
     */
    public function hasGrossSum(){
      return $this->_has(2);
    }
    
    /**
     * Clear <gross_sum> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearGrossSum(){
      return $this->_clear(2);
    }
    
    /**
     * Get <gross_sum> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getGrossSum(){
      return $this->_get(2);
    }
    
    /**
     * Set <gross_sum> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setGrossSum(\dstore\values\decimalValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <gross_sum_null> has a value
     *
     * @return boolean
     */
    public function hasGrossSumNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <gross_sum_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearGrossSumNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <gross_sum_null> value
     *
     * @return boolean
     */
    public function getGrossSumNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <gross_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setGrossSumNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <net_sum> has a value
     *
     * @return boolean
     */
    public function hasNetSum(){
      return $this->_has(3);
    }
    
    /**
     * Clear <net_sum> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearNetSum(){
      return $this->_clear(3);
    }
    
    /**
     * Get <net_sum> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getNetSum(){
      return $this->_get(3);
    }
    
    /**
     * Set <net_sum> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setNetSum(\dstore\values\decimalValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <net_sum_null> has a value
     *
     * @return boolean
     */
    public function hasNetSumNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <net_sum_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearNetSumNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <net_sum_null> value
     *
     * @return boolean
     */
    public function getNetSumNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <net_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setNetSumNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearCurrencyId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(4);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setCurrencyId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <currency_id_null> has a value
     *
     * @return boolean
     */
    public function hasCurrencyIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <currency_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearCurrencyIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <currency_id_null> value
     *
     * @return boolean
     */
    public function getCurrencyIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <currency_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setCurrencyIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(5);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delivery_person_id> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delivery_person_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearDeliveryPersonId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delivery_person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDeliveryPersonId(){
      return $this->_get(6);
    }
    
    /**
     * Set <delivery_person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setDeliveryPersonId(\dstore\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delivery_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delivery_person_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearDeliveryPersonIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delivery_person_id_null> value
     *
     * @return boolean
     */
    public function getDeliveryPersonIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delivery_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setDeliveryPersonIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <shipping_type_id> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <shipping_type_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearShippingTypeId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <shipping_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getShippingTypeId(){
      return $this->_get(7);
    }
    
    /**
     * Set <shipping_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setShippingTypeId(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <shipping_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <shipping_type_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearShippingTypeIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <shipping_type_id_null> value
     *
     * @return boolean
     */
    public function getShippingTypeIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <shipping_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setShippingTypeIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <payment_type_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeId(){
      return $this->_has(8);
    }
    
    /**
     * Clear <payment_type_id> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearPaymentTypeId(){
      return $this->_clear(8);
    }
    
    /**
     * Get <payment_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentTypeId(){
      return $this->_get(8);
    }
    
    /**
     * Set <payment_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setPaymentTypeId(\dstore\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <payment_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeIdNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <payment_type_id_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearPaymentTypeIdNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <payment_type_id_null> value
     *
     * @return boolean
     */
    public function getPaymentTypeIdNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <payment_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setPaymentTypeIdNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <use_cash_account_max_value> has a value
     *
     * @return boolean
     */
    public function hasUseCashAccountMaxValue(){
      return $this->_has(9);
    }
    
    /**
     * Clear <use_cash_account_max_value> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearUseCashAccountMaxValue(){
      return $this->_clear(9);
    }
    
    /**
     * Get <use_cash_account_max_value> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getUseCashAccountMaxValue(){
      return $this->_get(9);
    }
    
    /**
     * Set <use_cash_account_max_value> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setUseCashAccountMaxValue(\dstore\values\decimalValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <use_cash_account_max_value_null> has a value
     *
     * @return boolean
     */
    public function hasUseCashAccountMaxValueNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <use_cash_account_max_value_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearUseCashAccountMaxValueNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <use_cash_account_max_value_null> value
     *
     * @return boolean
     */
    public function getUseCashAccountMaxValueNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <use_cash_account_max_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setUseCashAccountMaxValueNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <split_by_taxes> has a value
     *
     * @return boolean
     */
    public function hasSplitByTaxes(){
      return $this->_has(10);
    }
    
    /**
     * Clear <split_by_taxes> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearSplitByTaxes(){
      return $this->_clear(10);
    }
    
    /**
     * Get <split_by_taxes> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSplitByTaxes(){
      return $this->_get(10);
    }
    
    /**
     * Set <split_by_taxes> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setSplitByTaxes(\dstore\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <split_by_taxes_null> has a value
     *
     * @return boolean
     */
    public function hasSplitByTaxesNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <split_by_taxes_null> value
     *
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function clearSplitByTaxesNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <split_by_taxes_null> value
     *
     * @return boolean
     */
    public function getSplitByTaxesNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <split_by_taxes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleySurcharges_Pu\Parameters
     */
    public function setSplitByTaxesNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

