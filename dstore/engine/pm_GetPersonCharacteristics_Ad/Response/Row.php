<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_GetPersonCharacteristics_Ad.proto
//   Date: 2016-05-19 08:07:54

namespace dstore\engine\pm_GetPersonCharacteristics_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\values\integerValue */
    public $field_type_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description_for_admin = null;
    
    /**  @var \dstore\values\integerValue */
    public $precision_value = null;
    
    /**  @var \dstore\values\integerValue */
    public $modify = null;
    
    /**  @var \dstore\values\integerValue */
    public $max_length = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\values\booleanValue */
    public $required_charac_category = null;
    
    /**  @var \dstore\values\booleanValue */
    public $predefined_values = null;
    
    /**  @var \dstore\values\stringValue */
    public $read_access_restriction_pattern = null;
    
    /**  @var \dstore\values\stringValue */
    public $format = null;
    
    /**  @var \dstore\values\booleanValue */
    public $required = null;
    
    /**  @var \dstore\values\stringValue */
    public $basic_field_type = null;
    
    /**  @var \dstore\values\booleanValue */
    public $is_unique = null;
    
    /**  @var \dstore\values\stringValue */
    public $field_type_description = null;
    
    /**  @var \dstore\values\booleanValue */
    public $visible = null;
    
    /**  @var \dstore\values\integerValue */
    public $basic_field_type_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $id = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_charac_category_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $category_description = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_GetPersonCharacteristics_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE field_type_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "field_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description_for_admin = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "description_for_admin";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE precision_value = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "precision_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE modify = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "modify";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_length = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "max_length";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE required_charac_category = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "required_charac_category";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE predefined_values = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "predefined_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE read_access_restriction_pattern = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "read_access_restriction_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE format = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "format";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE required = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "required";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_field_type = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "basic_field_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_unique = 10014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10014;
      $f->name      = "is_unique";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE field_type_description = 10015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10015;
      $f->name      = "field_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE visible = 10016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10016;
      $f->name      = "visible";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_field_type_id = 10017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10017;
      $f->name      = "basic_field_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE id = 10018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10018;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_charac_category_id = 30010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30010;
      $f->name      = "person_charac_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE category_description = 30019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30019;
      $f->name      = "category_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setDescription(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <field_type_id> has a value
     *
     * @return boolean
     */
    public function hasFieldTypeId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <field_type_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearFieldTypeId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <field_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFieldTypeId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <field_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setFieldTypeId(\dstore\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <description_for_admin> has a value
     *
     * @return boolean
     */
    public function hasDescriptionForAdmin(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <description_for_admin> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearDescriptionForAdmin(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <description_for_admin> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescriptionForAdmin(){
      return $this->_get(10003);
    }
    
    /**
     * Set <description_for_admin> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setDescriptionForAdmin(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <precision_value> has a value
     *
     * @return boolean
     */
    public function hasPrecisionValue(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <precision_value> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearPrecisionValue(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <precision_value> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPrecisionValue(){
      return $this->_get(10004);
    }
    
    /**
     * Set <precision_value> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setPrecisionValue(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <modify> has a value
     *
     * @return boolean
     */
    public function hasModify(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <modify> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearModify(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <modify> value
     *
     * @return \dstore\values\integerValue
     */
    public function getModify(){
      return $this->_get(10005);
    }
    
    /**
     * Set <modify> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setModify(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <max_length> has a value
     *
     * @return boolean
     */
    public function hasMaxLength(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <max_length> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearMaxLength(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <max_length> value
     *
     * @return \dstore\values\integerValue
     */
    public function getMaxLength(){
      return $this->_get(10006);
    }
    
    /**
     * Set <max_length> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setMaxLength(\dstore\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(10007);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setSortNo(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <required_charac_category> has a value
     *
     * @return boolean
     */
    public function hasRequiredCharacCategory(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <required_charac_category> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearRequiredCharacCategory(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <required_charac_category> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getRequiredCharacCategory(){
      return $this->_get(10008);
    }
    
    /**
     * Set <required_charac_category> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setRequiredCharacCategory(\dstore\values\booleanValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <predefined_values> has a value
     *
     * @return boolean
     */
    public function hasPredefinedValues(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <predefined_values> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearPredefinedValues(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <predefined_values> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getPredefinedValues(){
      return $this->_get(10009);
    }
    
    /**
     * Set <predefined_values> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setPredefinedValues(\dstore\values\booleanValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <read_access_restriction_pattern> has a value
     *
     * @return boolean
     */
    public function hasReadAccessRestrictionPattern(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <read_access_restriction_pattern> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearReadAccessRestrictionPattern(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <read_access_restriction_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getReadAccessRestrictionPattern(){
      return $this->_get(10010);
    }
    
    /**
     * Set <read_access_restriction_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setReadAccessRestrictionPattern(\dstore\values\stringValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <format> has a value
     *
     * @return boolean
     */
    public function hasFormat(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <format> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearFormat(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <format> value
     *
     * @return \dstore\values\stringValue
     */
    public function getFormat(){
      return $this->_get(10011);
    }
    
    /**
     * Set <format> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setFormat(\dstore\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <required> has a value
     *
     * @return boolean
     */
    public function hasRequired(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <required> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearRequired(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <required> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getRequired(){
      return $this->_get(10012);
    }
    
    /**
     * Set <required> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setRequired(\dstore\values\booleanValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <basic_field_type> has a value
     *
     * @return boolean
     */
    public function hasBasicFieldType(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <basic_field_type> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearBasicFieldType(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <basic_field_type> value
     *
     * @return \dstore\values\stringValue
     */
    public function getBasicFieldType(){
      return $this->_get(10013);
    }
    
    /**
     * Set <basic_field_type> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setBasicFieldType(\dstore\values\stringValue $value){
      return $this->_set(10013, $value);
    }
    
    /**
     * Check if <is_unique> has a value
     *
     * @return boolean
     */
    public function hasIsUnique(){
      return $this->_has(10014);
    }
    
    /**
     * Clear <is_unique> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearIsUnique(){
      return $this->_clear(10014);
    }
    
    /**
     * Get <is_unique> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIsUnique(){
      return $this->_get(10014);
    }
    
    /**
     * Set <is_unique> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setIsUnique(\dstore\values\booleanValue $value){
      return $this->_set(10014, $value);
    }
    
    /**
     * Check if <field_type_description> has a value
     *
     * @return boolean
     */
    public function hasFieldTypeDescription(){
      return $this->_has(10015);
    }
    
    /**
     * Clear <field_type_description> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearFieldTypeDescription(){
      return $this->_clear(10015);
    }
    
    /**
     * Get <field_type_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getFieldTypeDescription(){
      return $this->_get(10015);
    }
    
    /**
     * Set <field_type_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setFieldTypeDescription(\dstore\values\stringValue $value){
      return $this->_set(10015, $value);
    }
    
    /**
     * Check if <visible> has a value
     *
     * @return boolean
     */
    public function hasVisible(){
      return $this->_has(10016);
    }
    
    /**
     * Clear <visible> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearVisible(){
      return $this->_clear(10016);
    }
    
    /**
     * Get <visible> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getVisible(){
      return $this->_get(10016);
    }
    
    /**
     * Set <visible> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setVisible(\dstore\values\booleanValue $value){
      return $this->_set(10016, $value);
    }
    
    /**
     * Check if <basic_field_type_id> has a value
     *
     * @return boolean
     */
    public function hasBasicFieldTypeId(){
      return $this->_has(10017);
    }
    
    /**
     * Clear <basic_field_type_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearBasicFieldTypeId(){
      return $this->_clear(10017);
    }
    
    /**
     * Get <basic_field_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBasicFieldTypeId(){
      return $this->_get(10017);
    }
    
    /**
     * Set <basic_field_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setBasicFieldTypeId(\dstore\values\integerValue $value){
      return $this->_set(10017, $value);
    }
    
    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(10018);
    }
    
    /**
     * Clear <id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearId(){
      return $this->_clear(10018);
    }
    
    /**
     * Get <id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getId(){
      return $this->_get(10018);
    }
    
    /**
     * Set <id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setId(\dstore\values\integerValue $value){
      return $this->_set(10018, $value);
    }
    
    /**
     * Check if <person_charac_category_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacCategoryId(){
      return $this->_has(30010);
    }
    
    /**
     * Clear <person_charac_category_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearPersonCharacCategoryId(){
      return $this->_clear(30010);
    }
    
    /**
     * Get <person_charac_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonCharacCategoryId(){
      return $this->_get(30010);
    }
    
    /**
     * Set <person_charac_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setPersonCharacCategoryId(\dstore\values\integerValue $value){
      return $this->_set(30010, $value);
    }
    
    /**
     * Check if <category_description> has a value
     *
     * @return boolean
     */
    public function hasCategoryDescription(){
      return $this->_has(30019);
    }
    
    /**
     * Clear <category_description> value
     *
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function clearCategoryDescription(){
      return $this->_clear(30019);
    }
    
    /**
     * Get <category_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCategoryDescription(){
      return $this->_get(30019);
    }
    
    /**
     * Set <category_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacteristics_Ad\Response\Row
     */
    public function setCategoryDescription(\dstore\values\stringValue $value){
      return $this->_set(30019, $value);
    }
  }
}

