<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPurchasePrices_Ad.proto
//   Date: 2015-10-06 11:19:59

namespace dstore\engine\om_GetPurchasePrices_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $suppl_charac_val2_restr_by_pattern = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_property = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $supplier_characteristic_value2 = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $total_net_price = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $quantity = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $supplier_characteristic_value1 = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $currency_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $currency_symbol = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $supplier_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $node_description = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $unit_net_price = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $h_tree_node_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_no = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $suppl_charac_val1_restr_by_pattern = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPurchasePrices_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE suppl_charac_val2_restr_by_pattern = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "suppl_charac_val2_restr_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_property = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "item_property";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_characteristic_value2 = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "supplier_characteristic_value2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_net_price = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "total_net_price";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quantity = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_characteristic_value1 = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "supplier_characteristic_value1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_symbol = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "currency_symbol";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE supplier_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "supplier_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_description = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "node_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unit_net_price = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "unit_net_price";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE h_tree_node_id = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_no = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "item_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_id = 10014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10014;
      $f->name      = "node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 10015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10015;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE suppl_charac_val1_restr_by_pattern = 10016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10016;
      $f->name      = "suppl_charac_val1_restr_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <suppl_charac_val2_restr_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasSupplCharacVal2RestrByPattern(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <suppl_charac_val2_restr_by_pattern> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearSupplCharacVal2RestrByPattern(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <suppl_charac_val2_restr_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplCharacVal2RestrByPattern(){
      return $this->_get(10001);
    }
    
    /**
     * Set <suppl_charac_val2_restr_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setSupplCharacVal2RestrByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <item_property> has a value
     *
     * @return boolean
     */
    public function hasItemProperty(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <item_property> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearItemProperty(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <item_property> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemProperty(){
      return $this->_get(10002);
    }
    
    /**
     * Set <item_property> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setItemProperty(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <supplier_characteristic_value2> has a value
     *
     * @return boolean
     */
    public function hasSupplierCharacteristicValue2(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <supplier_characteristic_value2> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearSupplierCharacteristicValue2(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <supplier_characteristic_value2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplierCharacteristicValue2(){
      return $this->_get(10003);
    }
    
    /**
     * Set <supplier_characteristic_value2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setSupplierCharacteristicValue2(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <total_net_price> has a value
     *
     * @return boolean
     */
    public function hasTotalNetPrice(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <total_net_price> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearTotalNetPrice(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <total_net_price> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getTotalNetPrice(){
      return $this->_get(10004);
    }
    
    /**
     * Set <total_net_price> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setTotalNetPrice(\dstore\engine\values\decimalValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <quantity> has a value
     *
     * @return boolean
     */
    public function hasQuantity(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <quantity> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearQuantity(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getQuantity(){
      return $this->_get(10005);
    }
    
    /**
     * Set <quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <supplier_characteristic_value1> has a value
     *
     * @return boolean
     */
    public function hasSupplierCharacteristicValue1(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <supplier_characteristic_value1> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearSupplierCharacteristicValue1(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <supplier_characteristic_value1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplierCharacteristicValue1(){
      return $this->_get(10006);
    }
    
    /**
     * Set <supplier_characteristic_value1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setSupplierCharacteristicValue1(\dstore\engine\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearCurrencyId(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(10007);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setCurrencyId(\dstore\engine\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <currency_symbol> has a value
     *
     * @return boolean
     */
    public function hasCurrencySymbol(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <currency_symbol> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearCurrencySymbol(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <currency_symbol> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCurrencySymbol(){
      return $this->_get(10008);
    }
    
    /**
     * Set <currency_symbol> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setCurrencySymbol(\dstore\engine\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <supplier_id> has a value
     *
     * @return boolean
     */
    public function hasSupplierId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <supplier_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearSupplierId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <supplier_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSupplierId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <supplier_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setSupplierId(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <node_description> has a value
     *
     * @return boolean
     */
    public function hasNodeDescription(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <node_description> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearNodeDescription(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <node_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNodeDescription(){
      return $this->_get(10010);
    }
    
    /**
     * Set <node_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setNodeDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <unit_net_price> has a value
     *
     * @return boolean
     */
    public function hasUnitNetPrice(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <unit_net_price> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearUnitNetPrice(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <unit_net_price> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getUnitNetPrice(){
      return $this->_get(10011);
    }
    
    /**
     * Set <unit_net_price> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setUnitNetPrice(\dstore\engine\values\decimalValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasHTreeNodeId(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <h_tree_node_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearHTreeNodeId(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <h_tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getHTreeNodeId(){
      return $this->_get(10012);
    }
    
    /**
     * Set <h_tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setHTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <item_no> has a value
     *
     * @return boolean
     */
    public function hasItemNo(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <item_no> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearItemNo(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <item_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemNo(){
      return $this->_get(10013);
    }
    
    /**
     * Set <item_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setItemNo(\dstore\engine\values\stringValue $value){
      return $this->_set(10013, $value);
    }
    
    /**
     * Check if <node_id> has a value
     *
     * @return boolean
     */
    public function hasNodeId(){
      return $this->_has(10014);
    }
    
    /**
     * Clear <node_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearNodeId(){
      return $this->_clear(10014);
    }
    
    /**
     * Get <node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeId(){
      return $this->_get(10014);
    }
    
    /**
     * Set <node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10014, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(10015);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearTreeNodeId(){
      return $this->_clear(10015);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(10015);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10015, $value);
    }
    
    /**
     * Check if <suppl_charac_val1_restr_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasSupplCharacVal1RestrByPattern(){
      return $this->_has(10016);
    }
    
    /**
     * Clear <suppl_charac_val1_restr_by_pattern> value
     *
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function clearSupplCharacVal1RestrByPattern(){
      return $this->_clear(10016);
    }
    
    /**
     * Get <suppl_charac_val1_restr_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSupplCharacVal1RestrByPattern(){
      return $this->_get(10016);
    }
    
    /**
     * Set <suppl_charac_val1_restr_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPurchasePrices_Ad\Response\Row
     */
    public function setSupplCharacVal1RestrByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10016, $value);
    }
  }
}

