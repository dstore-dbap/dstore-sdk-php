<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_ModifyConditions_Ad.proto
//   Date: 2015-10-06 11:20:07

namespace dstore\engine\pm_ModifyConditions_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $condition_id = null;
    
    /**  @var boolean */
    public $condition_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $condition_position_id = null;
    
    /**  @var boolean */
    public $condition_position_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_characteristic_id = null;
    
    /**  @var boolean */
    public $person_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition = null;
    
    /**  @var boolean */
    public $condition_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_condition_position_id = null;
    
    /**  @var boolean */
    public $delete_condition_position_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_ModifyConditions_Ad.Parameters');

      // OPTIONAL MESSAGE condition_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "condition_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_position_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition_position_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_position_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "condition_position_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_characteristic_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "person_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_characteristic_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "person_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "condition_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_condition_position_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delete_condition_position_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_condition_position_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delete_condition_position_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition_id> has a value
     *
     * @return boolean
     */
    public function hasConditionId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition_id> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearConditionId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionId(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setConditionId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition_id_null> has a value
     *
     * @return boolean
     */
    public function hasConditionIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <condition_id_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearConditionIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <condition_id_null> value
     *
     * @return boolean
     */
    public function getConditionIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <condition_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setConditionIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <condition_position_id> has a value
     *
     * @return boolean
     */
    public function hasConditionPositionId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition_position_id> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearConditionPositionId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition_position_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionPositionId(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition_position_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setConditionPositionId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <condition_position_id_null> has a value
     *
     * @return boolean
     */
    public function hasConditionPositionIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <condition_position_id_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearConditionPositionIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <condition_position_id_null> value
     *
     * @return boolean
     */
    public function getConditionPositionIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <condition_position_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setConditionPositionIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <person_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <person_characteristic_id> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearPersonCharacteristicId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <person_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonCharacteristicId(){
      return $this->_get(3);
    }
    
    /**
     * Set <person_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setPersonCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <person_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <person_characteristic_id_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearPersonCharacteristicIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <person_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getPersonCharacteristicIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <person_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setPersonCharacteristicIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(4);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearCondition(){
      return $this->_clear(4);
    }
    
    /**
     * Get <condition> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition(){
      return $this->_get(4);
    }
    
    /**
     * Set <condition> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setCondition(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <condition_null> has a value
     *
     * @return boolean
     */
    public function hasConditionNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <condition_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearConditionNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <condition_null> value
     *
     * @return boolean
     */
    public function getConditionNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <condition_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setConditionNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(5);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(5);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCountry(){
      return $this->_get(5);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setCountry(\dstore\engine\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delete_condition_position_id> has a value
     *
     * @return boolean
     */
    public function hasDeleteConditionPositionId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delete_condition_position_id> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearDeleteConditionPositionId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delete_condition_position_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteConditionPositionId(){
      return $this->_get(6);
    }
    
    /**
     * Set <delete_condition_position_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setDeleteConditionPositionId(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delete_condition_position_id_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteConditionPositionIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delete_condition_position_id_null> value
     *
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function clearDeleteConditionPositionIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delete_condition_position_id_null> value
     *
     * @return boolean
     */
    public function getDeleteConditionPositionIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delete_condition_position_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyConditions_Ad\Parameters
     */
    public function setDeleteConditionPositionIdNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

