<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetTrolleys_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_GetTrolleys_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\timestampValue */
    public $from_date_and_time = null;
    
    /**  @var boolean */
    public $from_date_and_time_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date_and_time = null;
    
    /**  @var boolean */
    public $to_date_and_time_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_for_identified_persons = null;
    
    /**  @var boolean */
    public $only_for_identified_persons_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetTrolleys_Ad.Parameters');

      // OPTIONAL MESSAGE from_date_and_time = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "from_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_and_time_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "from_date_and_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date_and_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "to_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_and_time_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "to_date_and_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_for_identified_persons = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "only_for_identified_persons";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_for_identified_persons_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "only_for_identified_persons_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <from_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasFromDateAndTime(){
      return $this->_has(1);
    }
    
    /**
     * Clear <from_date_and_time> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearFromDateAndTime(){
      return $this->_clear(1);
    }
    
    /**
     * Get <from_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDateAndTime(){
      return $this->_get(1);
    }
    
    /**
     * Set <from_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setFromDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <from_date_and_time_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateAndTimeNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <from_date_and_time_null> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearFromDateAndTimeNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <from_date_and_time_null> value
     *
     * @return boolean
     */
    public function getFromDateAndTimeNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <from_date_and_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setFromDateAndTimeNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <to_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasToDateAndTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <to_date_and_time> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearToDateAndTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <to_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDateAndTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <to_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setToDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <to_date_and_time_null> has a value
     *
     * @return boolean
     */
    public function hasToDateAndTimeNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <to_date_and_time_null> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearToDateAndTimeNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <to_date_and_time_null> value
     *
     * @return boolean
     */
    public function getToDateAndTimeNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <to_date_and_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setToDateAndTimeNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <only_for_identified_persons> has a value
     *
     * @return boolean
     */
    public function hasOnlyForIdentifiedPersons(){
      return $this->_has(3);
    }
    
    /**
     * Clear <only_for_identified_persons> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearOnlyForIdentifiedPersons(){
      return $this->_clear(3);
    }
    
    /**
     * Get <only_for_identified_persons> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyForIdentifiedPersons(){
      return $this->_get(3);
    }
    
    /**
     * Set <only_for_identified_persons> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setOnlyForIdentifiedPersons(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <only_for_identified_persons_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyForIdentifiedPersonsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <only_for_identified_persons_null> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function clearOnlyForIdentifiedPersonsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <only_for_identified_persons_null> value
     *
     * @return boolean
     */
    public function getOnlyForIdentifiedPersonsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <only_for_identified_persons_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Parameters
     */
    public function setOnlyForIdentifiedPersonsNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

