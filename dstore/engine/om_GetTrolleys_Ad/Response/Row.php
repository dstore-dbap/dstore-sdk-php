<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetTrolleys_Ad.proto
//   Date: 2015-10-06 11:20:00

namespace dstore\engine\om_GetTrolleys_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $visitor_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $identifying_value = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $input_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $h_tree_node_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_no = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $ident_val_restr_by_pattern = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $quantity = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetTrolleys_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE visitor_id = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "visitor_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE identifying_value = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "identifying_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_date_and_time = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "input_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE h_tree_node_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_no = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "item_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ident_val_restr_by_pattern = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "ident_val_restr_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quantity = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <visitor_id> has a value
     *
     * @return boolean
     */
    public function hasVisitorId(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <visitor_id> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearVisitorId(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <visitor_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisitorId(){
      return $this->_get(10001);
    }
    
    /**
     * Set <visitor_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setVisitorId(\dstore\engine\values\integerValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <identifying_value> has a value
     *
     * @return boolean
     */
    public function hasIdentifyingValue(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <identifying_value> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearIdentifyingValue(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <identifying_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getIdentifyingValue(){
      return $this->_get(10002);
    }
    
    /**
     * Set <identifying_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setIdentifyingValue(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearPersonId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <input_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasInputDateAndTime(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <input_date_and_time> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearInputDateAndTime(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <input_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getInputDateAndTime(){
      return $this->_get(10004);
    }
    
    /**
     * Set <input_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setInputDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasHTreeNodeId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <h_tree_node_id> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearHTreeNodeId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <h_tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getHTreeNodeId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <h_tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setHTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <item_no> has a value
     *
     * @return boolean
     */
    public function hasItemNo(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <item_no> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearItemNo(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <item_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemNo(){
      return $this->_get(10006);
    }
    
    /**
     * Set <item_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setItemNo(\dstore\engine\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearTreeNodeId(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(10007);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <ident_val_restr_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasIdentValRestrByPattern(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <ident_val_restr_by_pattern> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearIdentValRestrByPattern(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <ident_val_restr_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getIdentValRestrByPattern(){
      return $this->_get(10008);
    }
    
    /**
     * Set <ident_val_restr_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setIdentValRestrByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <quantity> has a value
     *
     * @return boolean
     */
    public function hasQuantity(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <quantity> value
     *
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function clearQuantity(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getQuantity(){
      return $this->_get(10009);
    }
    
    /**
     * Set <quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleys_Ad\Response\Row
     */
    public function setQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
  }
}

