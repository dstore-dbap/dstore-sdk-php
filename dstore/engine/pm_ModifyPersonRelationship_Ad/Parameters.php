<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_ModifyPersonRelationship_Ad.proto
//   Date: 2015-10-06 11:20:08

namespace dstore\engine\pm_ModifyPersonRelationship_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $related_person_id = null;
    
    /**  @var boolean */
    public $related_person_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $relationship_id = null;
    
    /**  @var boolean */
    public $relationship_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sort_no = null;
    
    /**  @var boolean */
    public $sort_no_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $valid_from = null;
    
    /**  @var boolean */
    public $valid_from_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $valid_to = null;
    
    /**  @var boolean */
    public $valid_to_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $old_valid_from = null;
    
    /**  @var boolean */
    public $old_valid_from_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_person_relationship = null;
    
    /**  @var boolean */
    public $delete_person_relationship_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $access_level = null;
    
    /**  @var boolean */
    public $access_level_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_ModifyPersonRelationship_Ad.Parameters');

      // OPTIONAL MESSAGE person_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE related_person_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "related_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL related_person_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "related_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE relationship_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "relationship_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL relationship_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "relationship_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_no_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "sort_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE valid_from = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "valid_from";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL valid_from_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "valid_from_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE valid_to = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "valid_to";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL valid_to_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "valid_to_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE old_valid_from = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "old_valid_from";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL old_valid_from_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "old_valid_from_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_person_relationship = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "delete_person_relationship";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_person_relationship_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "delete_person_relationship_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE access_level = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "access_level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL access_level_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "access_level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <related_person_id> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <related_person_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearRelatedPersonId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <related_person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRelatedPersonId(){
      return $this->_get(2);
    }
    
    /**
     * Set <related_person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setRelatedPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <related_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelatedPersonIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <related_person_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearRelatedPersonIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <related_person_id_null> value
     *
     * @return boolean
     */
    public function getRelatedPersonIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <related_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setRelatedPersonIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <relationship_id> has a value
     *
     * @return boolean
     */
    public function hasRelationshipId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <relationship_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearRelationshipId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <relationship_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRelationshipId(){
      return $this->_get(3);
    }
    
    /**
     * Set <relationship_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setRelationshipId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <relationship_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelationshipIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <relationship_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearRelationshipIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <relationship_id_null> value
     *
     * @return boolean
     */
    public function getRelationshipIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <relationship_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setRelationshipIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(4);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearSortNo(){
      return $this->_clear(4);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(4);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <sort_no_null> has a value
     *
     * @return boolean
     */
    public function hasSortNoNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <sort_no_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearSortNoNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <sort_no_null> value
     *
     * @return boolean
     */
    public function getSortNoNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <sort_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setSortNoNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <valid_from> has a value
     *
     * @return boolean
     */
    public function hasValidFrom(){
      return $this->_has(5);
    }
    
    /**
     * Clear <valid_from> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearValidFrom(){
      return $this->_clear(5);
    }
    
    /**
     * Get <valid_from> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getValidFrom(){
      return $this->_get(5);
    }
    
    /**
     * Set <valid_from> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setValidFrom(\dstore\engine\values\timestampValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <valid_from_null> has a value
     *
     * @return boolean
     */
    public function hasValidFromNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <valid_from_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearValidFromNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <valid_from_null> value
     *
     * @return boolean
     */
    public function getValidFromNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <valid_from_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setValidFromNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <valid_to> has a value
     *
     * @return boolean
     */
    public function hasValidTo(){
      return $this->_has(6);
    }
    
    /**
     * Clear <valid_to> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearValidTo(){
      return $this->_clear(6);
    }
    
    /**
     * Get <valid_to> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getValidTo(){
      return $this->_get(6);
    }
    
    /**
     * Set <valid_to> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setValidTo(\dstore\engine\values\timestampValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <valid_to_null> has a value
     *
     * @return boolean
     */
    public function hasValidToNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <valid_to_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearValidToNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <valid_to_null> value
     *
     * @return boolean
     */
    public function getValidToNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <valid_to_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setValidToNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <old_valid_from> has a value
     *
     * @return boolean
     */
    public function hasOldValidFrom(){
      return $this->_has(7);
    }
    
    /**
     * Clear <old_valid_from> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearOldValidFrom(){
      return $this->_clear(7);
    }
    
    /**
     * Get <old_valid_from> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getOldValidFrom(){
      return $this->_get(7);
    }
    
    /**
     * Set <old_valid_from> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setOldValidFrom(\dstore\engine\values\timestampValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <old_valid_from_null> has a value
     *
     * @return boolean
     */
    public function hasOldValidFromNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <old_valid_from_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearOldValidFromNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <old_valid_from_null> value
     *
     * @return boolean
     */
    public function getOldValidFromNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <old_valid_from_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setOldValidFromNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <delete_person_relationship> has a value
     *
     * @return boolean
     */
    public function hasDeletePersonRelationship(){
      return $this->_has(8);
    }
    
    /**
     * Clear <delete_person_relationship> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearDeletePersonRelationship(){
      return $this->_clear(8);
    }
    
    /**
     * Get <delete_person_relationship> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeletePersonRelationship(){
      return $this->_get(8);
    }
    
    /**
     * Set <delete_person_relationship> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setDeletePersonRelationship(\dstore\engine\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <delete_person_relationship_null> has a value
     *
     * @return boolean
     */
    public function hasDeletePersonRelationshipNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <delete_person_relationship_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearDeletePersonRelationshipNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <delete_person_relationship_null> value
     *
     * @return boolean
     */
    public function getDeletePersonRelationshipNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <delete_person_relationship_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setDeletePersonRelationshipNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <access_level> has a value
     *
     * @return boolean
     */
    public function hasAccessLevel(){
      return $this->_has(9);
    }
    
    /**
     * Clear <access_level> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearAccessLevel(){
      return $this->_clear(9);
    }
    
    /**
     * Get <access_level> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAccessLevel(){
      return $this->_get(9);
    }
    
    /**
     * Set <access_level> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setAccessLevel(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <access_level_null> has a value
     *
     * @return boolean
     */
    public function hasAccessLevelNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <access_level_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function clearAccessLevelNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <access_level_null> value
     *
     * @return boolean
     */
    public function getAccessLevelNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <access_level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonRelationship_Ad\Parameters
     */
    public function setAccessLevelNull( $value){
      return $this->_set(1009, $value);
    }
  }
}

