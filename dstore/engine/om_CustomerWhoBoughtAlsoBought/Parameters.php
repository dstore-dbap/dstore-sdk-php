<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_CustomerWhoBoughtAlsoBought.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_CustomerWhoBoughtAlsoBought {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $variant_or_item_no = null;
    
    /**  @var boolean */
    public $variant_or_item_no_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_sibling_variants = null;
    
    /**  @var boolean */
    public $include_sibling_variants_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_active = null;
    
    /**  @var boolean */
    public $only_active_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_additional_info = null;
    
    /**  @var boolean */
    public $get_additional_info_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $filter_by_characteristic_id = null;
    
    /**  @var boolean */
    public $filter_by_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $filter_by_charac_value = null;
    
    /**  @var boolean */
    public $filter_by_charac_value_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $negate_filter_by_params = null;
    
    /**  @var boolean */
    public $negate_filter_by_params_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_variant_or_item_no_nodes = null;
    
    /**  @var boolean */
    public $include_variant_or_item_no_nodes_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_CustomerWhoBoughtAlsoBought.Parameters');

      // OPTIONAL MESSAGE variant_or_item_no = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "variant_or_item_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL variant_or_item_no_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "variant_or_item_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_sibling_variants = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "include_sibling_variants";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_sibling_variants_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "include_sibling_variants_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_active = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "only_active";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_active_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "only_active_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_additional_info = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "get_additional_info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_additional_info_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "get_additional_info_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_characteristic_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "filter_by_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_characteristic_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "filter_by_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_charac_value = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "filter_by_charac_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_charac_value_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "filter_by_charac_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE negate_filter_by_params = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "negate_filter_by_params";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL negate_filter_by_params_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "negate_filter_by_params_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_variant_or_item_no_nodes = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "include_variant_or_item_no_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_variant_or_item_no_nodes_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "include_variant_or_item_no_nodes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <variant_or_item_no> has a value
     *
     * @return boolean
     */
    public function hasVariantOrItemNo(){
      return $this->_has(1);
    }
    
    /**
     * Clear <variant_or_item_no> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearVariantOrItemNo(){
      return $this->_clear(1);
    }
    
    /**
     * Get <variant_or_item_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getVariantOrItemNo(){
      return $this->_get(1);
    }
    
    /**
     * Set <variant_or_item_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setVariantOrItemNo(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <variant_or_item_no_null> has a value
     *
     * @return boolean
     */
    public function hasVariantOrItemNoNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <variant_or_item_no_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearVariantOrItemNoNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <variant_or_item_no_null> value
     *
     * @return boolean
     */
    public function getVariantOrItemNoNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <variant_or_item_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setVariantOrItemNoNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <include_sibling_variants> has a value
     *
     * @return boolean
     */
    public function hasIncludeSiblingVariants(){
      return $this->_has(2);
    }
    
    /**
     * Clear <include_sibling_variants> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearIncludeSiblingVariants(){
      return $this->_clear(2);
    }
    
    /**
     * Get <include_sibling_variants> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeSiblingVariants(){
      return $this->_get(2);
    }
    
    /**
     * Set <include_sibling_variants> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setIncludeSiblingVariants(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <include_sibling_variants_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeSiblingVariantsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <include_sibling_variants_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearIncludeSiblingVariantsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <include_sibling_variants_null> value
     *
     * @return boolean
     */
    public function getIncludeSiblingVariantsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <include_sibling_variants_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setIncludeSiblingVariantsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(4);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearToDate(){
      return $this->_clear(4);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(4);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <only_active> has a value
     *
     * @return boolean
     */
    public function hasOnlyActive(){
      return $this->_has(5);
    }
    
    /**
     * Clear <only_active> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearOnlyActive(){
      return $this->_clear(5);
    }
    
    /**
     * Get <only_active> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyActive(){
      return $this->_get(5);
    }
    
    /**
     * Set <only_active> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setOnlyActive(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <only_active_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyActiveNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <only_active_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearOnlyActiveNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <only_active_null> value
     *
     * @return boolean
     */
    public function getOnlyActiveNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <only_active_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setOnlyActiveNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <get_additional_info> has a value
     *
     * @return boolean
     */
    public function hasGetAdditionalInfo(){
      return $this->_has(6);
    }
    
    /**
     * Clear <get_additional_info> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearGetAdditionalInfo(){
      return $this->_clear(6);
    }
    
    /**
     * Get <get_additional_info> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetAdditionalInfo(){
      return $this->_get(6);
    }
    
    /**
     * Set <get_additional_info> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setGetAdditionalInfo(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <get_additional_info_null> has a value
     *
     * @return boolean
     */
    public function hasGetAdditionalInfoNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <get_additional_info_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearGetAdditionalInfoNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <get_additional_info_null> value
     *
     * @return boolean
     */
    public function getGetAdditionalInfoNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <get_additional_info_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setGetAdditionalInfoNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFilterByCharacteristicId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFilterByCharacteristicId(){
      return $this->_get(7);
    }
    
    /**
     * Set <filter_by_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFilterByCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <filter_by_characteristic_id_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFilterByCharacteristicIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <filter_by_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacteristicIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <filter_by_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFilterByCharacteristicIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <filter_by_charac_value> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValue(){
      return $this->_has(8);
    }
    
    /**
     * Clear <filter_by_charac_value> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFilterByCharacValue(){
      return $this->_clear(8);
    }
    
    /**
     * Get <filter_by_charac_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFilterByCharacValue(){
      return $this->_get(8);
    }
    
    /**
     * Set <filter_by_charac_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFilterByCharacValue(\dstore\engine\values\stringValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <filter_by_charac_value_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValueNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <filter_by_charac_value_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearFilterByCharacValueNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <filter_by_charac_value_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacValueNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <filter_by_charac_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setFilterByCharacValueNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <negate_filter_by_params> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParams(){
      return $this->_has(9);
    }
    
    /**
     * Clear <negate_filter_by_params> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearNegateFilterByParams(){
      return $this->_clear(9);
    }
    
    /**
     * Get <negate_filter_by_params> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getNegateFilterByParams(){
      return $this->_get(9);
    }
    
    /**
     * Set <negate_filter_by_params> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setNegateFilterByParams(\dstore\engine\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <negate_filter_by_params_null> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParamsNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <negate_filter_by_params_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearNegateFilterByParamsNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <negate_filter_by_params_null> value
     *
     * @return boolean
     */
    public function getNegateFilterByParamsNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <negate_filter_by_params_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setNegateFilterByParamsNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <include_variant_or_item_no_nodes> has a value
     *
     * @return boolean
     */
    public function hasIncludeVariantOrItemNoNodes(){
      return $this->_has(10);
    }
    
    /**
     * Clear <include_variant_or_item_no_nodes> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearIncludeVariantOrItemNoNodes(){
      return $this->_clear(10);
    }
    
    /**
     * Get <include_variant_or_item_no_nodes> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeVariantOrItemNoNodes(){
      return $this->_get(10);
    }
    
    /**
     * Set <include_variant_or_item_no_nodes> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setIncludeVariantOrItemNoNodes(\dstore\engine\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <include_variant_or_item_no_nodes_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeVariantOrItemNoNodesNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <include_variant_or_item_no_nodes_null> value
     *
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function clearIncludeVariantOrItemNoNodesNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <include_variant_or_item_no_nodes_null> value
     *
     * @return boolean
     */
    public function getIncludeVariantOrItemNoNodesNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <include_variant_or_item_no_nodes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CustomerWhoBoughtAlsoBought\Parameters
     */
    public function setIncludeVariantOrItemNoNodesNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

