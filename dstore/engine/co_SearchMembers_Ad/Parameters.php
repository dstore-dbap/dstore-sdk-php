<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_SearchMembers_Ad.proto
//   Date: 2015-10-06 11:19:43

namespace dstore\engine\co_SearchMembers_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $search_string = null;
    
    /**  @var boolean */
    public $search_string_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_rows = null;
    
    /**  @var boolean */
    public $max_number_of_rows_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $case_sensitive = null;
    
    /**  @var boolean */
    public $case_sensitive_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id1 = null;
    
    /**  @var boolean */
    public $output_characteristic_id1_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id2 = null;
    
    /**  @var boolean */
    public $output_characteristic_id2_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_characteristic_id3 = null;
    
    /**  @var boolean */
    public $output_characteristic_id3_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_binary_category_id = null;
    
    /**  @var boolean */
    public $community_binary_category_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_SearchMembers_Ad.Parameters');

      // OPTIONAL MESSAGE community_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_string = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "search_string";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_string_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "search_string_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_rows = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "max_number_of_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_rows_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "max_number_of_rows_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE case_sensitive = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "case_sensitive";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL case_sensitive_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "case_sensitive_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id1 = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "output_characteristic_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id1_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "output_characteristic_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id2 = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "output_characteristic_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id2_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "output_characteristic_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id3 = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "output_characteristic_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id3_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "output_characteristic_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_binary_category_id = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "community_binary_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_binary_category_id_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "community_binary_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(1);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <search_string> has a value
     *
     * @return boolean
     */
    public function hasSearchString(){
      return $this->_has(2);
    }
    
    /**
     * Clear <search_string> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearSearchString(){
      return $this->_clear(2);
    }
    
    /**
     * Get <search_string> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSearchString(){
      return $this->_get(2);
    }
    
    /**
     * Set <search_string> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setSearchString(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <search_string_null> has a value
     *
     * @return boolean
     */
    public function hasSearchStringNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <search_string_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearSearchStringNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <search_string_null> value
     *
     * @return boolean
     */
    public function getSearchStringNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <search_string_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setSearchStringNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <max_number_of_rows> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRows(){
      return $this->_has(3);
    }
    
    /**
     * Clear <max_number_of_rows> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearMaxNumberOfRows(){
      return $this->_clear(3);
    }
    
    /**
     * Get <max_number_of_rows> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfRows(){
      return $this->_get(3);
    }
    
    /**
     * Set <max_number_of_rows> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setMaxNumberOfRows(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <max_number_of_rows_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRowsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <max_number_of_rows_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearMaxNumberOfRowsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <max_number_of_rows_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfRowsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <max_number_of_rows_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setMaxNumberOfRowsNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <case_sensitive> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitive(){
      return $this->_has(4);
    }
    
    /**
     * Clear <case_sensitive> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCaseSensitive(){
      return $this->_clear(4);
    }
    
    /**
     * Get <case_sensitive> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getCaseSensitive(){
      return $this->_get(4);
    }
    
    /**
     * Set <case_sensitive> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCaseSensitive(\dstore\engine\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <case_sensitive_null> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitiveNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <case_sensitive_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCaseSensitiveNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <case_sensitive_null> value
     *
     * @return boolean
     */
    public function getCaseSensitiveNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <case_sensitive_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCaseSensitiveNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <output_characteristic_id1> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1(){
      return $this->_has(5);
    }
    
    /**
     * Clear <output_characteristic_id1> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId1(){
      return $this->_clear(5);
    }
    
    /**
     * Get <output_characteristic_id1> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId1(){
      return $this->_get(5);
    }
    
    /**
     * Set <output_characteristic_id1> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId1(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <output_characteristic_id1_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1Null(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <output_characteristic_id1_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId1Null(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <output_characteristic_id1_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId1Null(){
      return $this->_get(1005);
    }
    
    /**
     * Set <output_characteristic_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId1Null( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <output_characteristic_id2> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2(){
      return $this->_has(6);
    }
    
    /**
     * Clear <output_characteristic_id2> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId2(){
      return $this->_clear(6);
    }
    
    /**
     * Get <output_characteristic_id2> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId2(){
      return $this->_get(6);
    }
    
    /**
     * Set <output_characteristic_id2> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId2(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <output_characteristic_id2_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2Null(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <output_characteristic_id2_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId2Null(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <output_characteristic_id2_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId2Null(){
      return $this->_get(1006);
    }
    
    /**
     * Set <output_characteristic_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId2Null( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <output_characteristic_id3> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3(){
      return $this->_has(7);
    }
    
    /**
     * Clear <output_characteristic_id3> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId3(){
      return $this->_clear(7);
    }
    
    /**
     * Get <output_characteristic_id3> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputCharacteristicId3(){
      return $this->_get(7);
    }
    
    /**
     * Set <output_characteristic_id3> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId3(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <output_characteristic_id3_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3Null(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <output_characteristic_id3_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearOutputCharacteristicId3Null(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <output_characteristic_id3_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId3Null(){
      return $this->_get(1007);
    }
    
    /**
     * Set <output_characteristic_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setOutputCharacteristicId3Null( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <community_binary_category_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryId(){
      return $this->_has(8);
    }
    
    /**
     * Clear <community_binary_category_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCommunityBinaryCategoryId(){
      return $this->_clear(8);
    }
    
    /**
     * Get <community_binary_category_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityBinaryCategoryId(){
      return $this->_get(8);
    }
    
    /**
     * Set <community_binary_category_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCommunityBinaryCategoryId(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <community_binary_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryIdNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <community_binary_category_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function clearCommunityBinaryCategoryIdNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <community_binary_category_id_null> value
     *
     * @return boolean
     */
    public function getCommunityBinaryCategoryIdNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <community_binary_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Ad\Parameters
     */
    public function setCommunityBinaryCategoryIdNull( $value){
      return $this->_set(1008, $value);
    }
  }
}

