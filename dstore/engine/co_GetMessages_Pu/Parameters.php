<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_GetMessages_Pu.proto
//   Date: 2015-10-06 11:19:43

namespace dstore\engine\co_GetMessages_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $person_identification_values = null;
    
    /**  @var boolean */
    public $person_identification_values_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_new_messages = null;
    
    /**  @var boolean */
    public $get_new_messages_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $date_and_time_format = null;
    
    /**  @var boolean */
    public $date_and_time_format_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $message_no = null;
    
    /**  @var boolean */
    public $message_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_rows = null;
    
    /**  @var boolean */
    public $max_number_of_rows_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $separator_in_ident_vals = null;
    
    /**  @var boolean */
    public $separator_in_ident_vals_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_GetMessages_Pu.Parameters');

      // OPTIONAL MESSAGE unique_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_identification_values = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "person_identification_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_identification_values_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "person_identification_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_new_messages = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "get_new_messages";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_new_messages_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "get_new_messages_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date_and_time_format = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "date_and_time_format";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_and_time_format_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "date_and_time_format_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message_no = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "message_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL message_no_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "message_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_rows = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "max_number_of_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_rows_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "max_number_of_rows_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_ident_vals = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "separator_in_ident_vals";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_ident_vals_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "separator_in_ident_vals_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(1);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setUniqueId(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <person_identification_values> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValues(){
      return $this->_has(2);
    }
    
    /**
     * Clear <person_identification_values> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearPersonIdentificationValues(){
      return $this->_clear(2);
    }
    
    /**
     * Get <person_identification_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPersonIdentificationValues(){
      return $this->_get(2);
    }
    
    /**
     * Set <person_identification_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setPersonIdentificationValues(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <person_identification_values_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValuesNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <person_identification_values_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearPersonIdentificationValuesNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <person_identification_values_null> value
     *
     * @return boolean
     */
    public function getPersonIdentificationValuesNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <person_identification_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setPersonIdentificationValuesNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(3);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <get_new_messages> has a value
     *
     * @return boolean
     */
    public function hasGetNewMessages(){
      return $this->_has(4);
    }
    
    /**
     * Clear <get_new_messages> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearGetNewMessages(){
      return $this->_clear(4);
    }
    
    /**
     * Get <get_new_messages> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetNewMessages(){
      return $this->_get(4);
    }
    
    /**
     * Set <get_new_messages> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setGetNewMessages(\dstore\engine\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <get_new_messages_null> has a value
     *
     * @return boolean
     */
    public function hasGetNewMessagesNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <get_new_messages_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearGetNewMessagesNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <get_new_messages_null> value
     *
     * @return boolean
     */
    public function getGetNewMessagesNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <get_new_messages_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setGetNewMessagesNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <date_and_time_format> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormat(){
      return $this->_has(5);
    }
    
    /**
     * Clear <date_and_time_format> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearDateAndTimeFormat(){
      return $this->_clear(5);
    }
    
    /**
     * Get <date_and_time_format> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getDateAndTimeFormat(){
      return $this->_get(5);
    }
    
    /**
     * Set <date_and_time_format> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setDateAndTimeFormat(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <date_and_time_format_null> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormatNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <date_and_time_format_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearDateAndTimeFormatNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <date_and_time_format_null> value
     *
     * @return boolean
     */
    public function getDateAndTimeFormatNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <date_and_time_format_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setDateAndTimeFormatNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <message_no> has a value
     *
     * @return boolean
     */
    public function hasMessageNo(){
      return $this->_has(6);
    }
    
    /**
     * Clear <message_no> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearMessageNo(){
      return $this->_clear(6);
    }
    
    /**
     * Get <message_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMessageNo(){
      return $this->_get(6);
    }
    
    /**
     * Set <message_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setMessageNo(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <message_no_null> has a value
     *
     * @return boolean
     */
    public function hasMessageNoNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <message_no_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearMessageNoNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <message_no_null> value
     *
     * @return boolean
     */
    public function getMessageNoNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <message_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setMessageNoNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <max_number_of_rows> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRows(){
      return $this->_has(7);
    }
    
    /**
     * Clear <max_number_of_rows> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearMaxNumberOfRows(){
      return $this->_clear(7);
    }
    
    /**
     * Get <max_number_of_rows> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfRows(){
      return $this->_get(7);
    }
    
    /**
     * Set <max_number_of_rows> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setMaxNumberOfRows(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <max_number_of_rows_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRowsNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <max_number_of_rows_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearMaxNumberOfRowsNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <max_number_of_rows_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfRowsNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <max_number_of_rows_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setMaxNumberOfRowsNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentVals(){
      return $this->_has(8);
    }
    
    /**
     * Clear <separator_in_ident_vals> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearSeparatorInIdentVals(){
      return $this->_clear(8);
    }
    
    /**
     * Get <separator_in_ident_vals> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSeparatorInIdentVals(){
      return $this->_get(8);
    }
    
    /**
     * Set <separator_in_ident_vals> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setSeparatorInIdentVals(\dstore\engine\values\stringValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentValsNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <separator_in_ident_vals_null> value
     *
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function clearSeparatorInIdentValsNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <separator_in_ident_vals_null> value
     *
     * @return boolean
     */
    public function getSeparatorInIdentValsNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <separator_in_ident_vals_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetMessages_Pu\Parameters
     */
    public function setSeparatorInIdentValsNull( $value){
      return $this->_set(1008, $value);
    }
  }
}

