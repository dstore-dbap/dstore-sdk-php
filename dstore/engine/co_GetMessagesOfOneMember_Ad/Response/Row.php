<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_GetMessagesOfOneMember_Ad.proto
//   Date: 2015-10-06 11:19:43

namespace dstore\engine\co_GetMessagesOfOneMember_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $to_community_member = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $message_status = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $to_community_member_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $message = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $from_community_member = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $community_name = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $message_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $from_community_member_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $message_date_and_time_char = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_GetMessagesOfOneMember_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_community_member = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "to_community_member";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message_status = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "message_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_community_member_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "to_community_member_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "message";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_community_member = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "from_community_member";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_name = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "community_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message_date_and_time = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "message_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_community_member_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "from_community_member_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE message_date_and_time_char = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "message_date_and_time_char";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <to_community_member> has a value
     *
     * @return boolean
     */
    public function hasToCommunityMember(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <to_community_member> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearToCommunityMember(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <to_community_member> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getToCommunityMember(){
      return $this->_get(10001);
    }
    
    /**
     * Set <to_community_member> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setToCommunityMember(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <message_status> has a value
     *
     * @return boolean
     */
    public function hasMessageStatus(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <message_status> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearMessageStatus(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <message_status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMessageStatus(){
      return $this->_get(10002);
    }
    
    /**
     * Set <message_status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setMessageStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <to_community_member_id> has a value
     *
     * @return boolean
     */
    public function hasToCommunityMemberId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <to_community_member_id> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearToCommunityMemberId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <to_community_member_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getToCommunityMemberId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <to_community_member_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setToCommunityMemberId(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <message> has a value
     *
     * @return boolean
     */
    public function hasMessage(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <message> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearMessage(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <message> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getMessage(){
      return $this->_get(10004);
    }
    
    /**
     * Set <message> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setMessage(\dstore\engine\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <from_community_member> has a value
     *
     * @return boolean
     */
    public function hasFromCommunityMember(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <from_community_member> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearFromCommunityMember(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <from_community_member> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFromCommunityMember(){
      return $this->_get(10005);
    }
    
    /**
     * Set <from_community_member> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setFromCommunityMember(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearCommunityId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <community_name> has a value
     *
     * @return boolean
     */
    public function hasCommunityName(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <community_name> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearCommunityName(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <community_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCommunityName(){
      return $this->_get(10007);
    }
    
    /**
     * Set <community_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setCommunityName(\dstore\engine\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <message_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasMessageDateAndTime(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <message_date_and_time> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearMessageDateAndTime(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <message_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getMessageDateAndTime(){
      return $this->_get(10008);
    }
    
    /**
     * Set <message_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setMessageDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <from_community_member_id> has a value
     *
     * @return boolean
     */
    public function hasFromCommunityMemberId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <from_community_member_id> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearFromCommunityMemberId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <from_community_member_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFromCommunityMemberId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <from_community_member_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setFromCommunityMemberId(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <message_date_and_time_char> has a value
     *
     * @return boolean
     */
    public function hasMessageDateAndTimeChar(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <message_date_and_time_char> value
     *
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function clearMessageDateAndTimeChar(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <message_date_and_time_char> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getMessageDateAndTimeChar(){
      return $this->_get(10010);
    }
    
    /**
     * Set <message_date_and_time_char> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMessagesOfOneMember_Ad\Response\Row
     */
    public function setMessageDateAndTimeChar(\dstore\engine\values\stringValue $value){
      return $this->_set(10010, $value);
    }
  }
}

