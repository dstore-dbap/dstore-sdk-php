<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_ModifyPersonData_Pu.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\pm_ModifyPersonData_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $characteristic_id_list = null;
    
    /**  @var boolean */
    public $characteristic_id_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value_list = null;
    
    /**  @var boolean */
    public $value_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $identification_values = null;
    
    /**  @var boolean */
    public $identification_values_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $person_grant_access_ids = null;
    
    /**  @var boolean */
    public $person_grant_access_ids_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_charac_category_id = null;
    
    /**  @var boolean */
    public $person_charac_category_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_charac_category_id = null;
    
    /**  @var boolean */
    public $delete_charac_category_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $result_in_error_id_list = null;
    
    /**  @var boolean */
    public $result_in_error_id_list_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $value_ids_for_predefined_characs = null;
    
    /**  @var boolean */
    public $value_ids_for_predefined_characs_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $change_all_or_nothing = null;
    
    /**  @var boolean */
    public $change_all_or_nothing_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $case_sensitive = null;
    
    /**  @var boolean */
    public $case_sensitive_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $separator_in_value_list = null;
    
    /**  @var boolean */
    public $separator_in_value_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $separator_for_ident_values = null;
    
    /**  @var boolean */
    public $separator_for_ident_values_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_ModifyPersonData_Pu.Parameters');

      // OPTIONAL MESSAGE characteristic_id_list = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characteristic_id_list_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_list_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "value_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE identification_values = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "identification_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL identification_values_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "identification_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_type_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_grant_access_ids = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "person_grant_access_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_grant_access_ids_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "person_grant_access_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_charac_category_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "person_charac_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_charac_category_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "person_charac_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_charac_category_id = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "delete_charac_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_charac_category_id_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "delete_charac_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE result_in_error_id_list = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "result_in_error_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL result_in_error_id_list_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "result_in_error_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_ids_for_predefined_characs = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "value_ids_for_predefined_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_ids_for_predefined_characs_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "value_ids_for_predefined_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE change_all_or_nothing = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "change_all_or_nothing";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL change_all_or_nothing_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "change_all_or_nothing_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE case_sensitive = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "case_sensitive";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL case_sensitive_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "case_sensitive_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_value_list = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "separator_in_value_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_value_list_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "separator_in_value_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_for_ident_values = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "separator_for_ident_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_for_ident_values_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "separator_for_ident_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdList(){
      return $this->_has(1);
    }
    
    /**
     * Clear <characteristic_id_list> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCharacteristicIdList(){
      return $this->_clear(1);
    }
    
    /**
     * Get <characteristic_id_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCharacteristicIdList(){
      return $this->_get(1);
    }
    
    /**
     * Set <characteristic_id_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCharacteristicIdList(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdListNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <characteristic_id_list_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCharacteristicIdListNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getCharacteristicIdListNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCharacteristicIdListNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <value_list> has a value
     *
     * @return boolean
     */
    public function hasValueList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value_list> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearValueList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValueList(){
      return $this->_get(2);
    }
    
    /**
     * Set <value_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setValueList(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <value_list_null> has a value
     *
     * @return boolean
     */
    public function hasValueListNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <value_list_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearValueListNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <value_list_null> value
     *
     * @return boolean
     */
    public function getValueListNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <value_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setValueListNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <identification_values> has a value
     *
     * @return boolean
     */
    public function hasIdentificationValues(){
      return $this->_has(3);
    }
    
    /**
     * Clear <identification_values> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearIdentificationValues(){
      return $this->_clear(3);
    }
    
    /**
     * Get <identification_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getIdentificationValues(){
      return $this->_get(3);
    }
    
    /**
     * Set <identification_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setIdentificationValues(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <identification_values_null> has a value
     *
     * @return boolean
     */
    public function hasIdentificationValuesNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <identification_values_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearIdentificationValuesNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <identification_values_null> value
     *
     * @return boolean
     */
    public function getIdentificationValuesNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <identification_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setIdentificationValuesNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(4);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(5);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <person_grant_access_ids> has a value
     *
     * @return boolean
     */
    public function hasPersonGrantAccessIds(){
      return $this->_has(6);
    }
    
    /**
     * Clear <person_grant_access_ids> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonGrantAccessIds(){
      return $this->_clear(6);
    }
    
    /**
     * Get <person_grant_access_ids> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getPersonGrantAccessIds(){
      return $this->_get(6);
    }
    
    /**
     * Set <person_grant_access_ids> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonGrantAccessIds(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <person_grant_access_ids_null> has a value
     *
     * @return boolean
     */
    public function hasPersonGrantAccessIdsNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <person_grant_access_ids_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonGrantAccessIdsNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <person_grant_access_ids_null> value
     *
     * @return boolean
     */
    public function getPersonGrantAccessIdsNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <person_grant_access_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonGrantAccessIdsNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <person_charac_category_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacCategoryId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <person_charac_category_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonCharacCategoryId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <person_charac_category_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonCharacCategoryId(){
      return $this->_get(7);
    }
    
    /**
     * Set <person_charac_category_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonCharacCategoryId(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <person_charac_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacCategoryIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <person_charac_category_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearPersonCharacCategoryIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <person_charac_category_id_null> value
     *
     * @return boolean
     */
    public function getPersonCharacCategoryIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <person_charac_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setPersonCharacCategoryIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <delete_charac_category_id> has a value
     *
     * @return boolean
     */
    public function hasDeleteCharacCategoryId(){
      return $this->_has(8);
    }
    
    /**
     * Clear <delete_charac_category_id> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearDeleteCharacCategoryId(){
      return $this->_clear(8);
    }
    
    /**
     * Get <delete_charac_category_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteCharacCategoryId(){
      return $this->_get(8);
    }
    
    /**
     * Set <delete_charac_category_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setDeleteCharacCategoryId(\dstore\engine\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <delete_charac_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteCharacCategoryIdNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <delete_charac_category_id_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearDeleteCharacCategoryIdNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <delete_charac_category_id_null> value
     *
     * @return boolean
     */
    public function getDeleteCharacCategoryIdNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <delete_charac_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setDeleteCharacCategoryIdNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <result_in_error_id_list> has a value
     *
     * @return boolean
     */
    public function hasResultInErrorIdList(){
      return $this->_has(9);
    }
    
    /**
     * Clear <result_in_error_id_list> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearResultInErrorIdList(){
      return $this->_clear(9);
    }
    
    /**
     * Get <result_in_error_id_list> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getResultInErrorIdList(){
      return $this->_get(9);
    }
    
    /**
     * Set <result_in_error_id_list> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setResultInErrorIdList(\dstore\engine\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <result_in_error_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasResultInErrorIdListNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <result_in_error_id_list_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearResultInErrorIdListNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <result_in_error_id_list_null> value
     *
     * @return boolean
     */
    public function getResultInErrorIdListNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <result_in_error_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setResultInErrorIdListNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <value_ids_for_predefined_characs> has a value
     *
     * @return boolean
     */
    public function hasValueIdsForPredefinedCharacs(){
      return $this->_has(10);
    }
    
    /**
     * Clear <value_ids_for_predefined_characs> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearValueIdsForPredefinedCharacs(){
      return $this->_clear(10);
    }
    
    /**
     * Get <value_ids_for_predefined_characs> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getValueIdsForPredefinedCharacs(){
      return $this->_get(10);
    }
    
    /**
     * Set <value_ids_for_predefined_characs> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setValueIdsForPredefinedCharacs(\dstore\engine\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <value_ids_for_predefined_characs_null> has a value
     *
     * @return boolean
     */
    public function hasValueIdsForPredefinedCharacsNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <value_ids_for_predefined_characs_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearValueIdsForPredefinedCharacsNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <value_ids_for_predefined_characs_null> value
     *
     * @return boolean
     */
    public function getValueIdsForPredefinedCharacsNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <value_ids_for_predefined_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setValueIdsForPredefinedCharacsNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <change_all_or_nothing> has a value
     *
     * @return boolean
     */
    public function hasChangeAllOrNothing(){
      return $this->_has(11);
    }
    
    /**
     * Clear <change_all_or_nothing> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearChangeAllOrNothing(){
      return $this->_clear(11);
    }
    
    /**
     * Get <change_all_or_nothing> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getChangeAllOrNothing(){
      return $this->_get(11);
    }
    
    /**
     * Set <change_all_or_nothing> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setChangeAllOrNothing(\dstore\engine\values\booleanValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <change_all_or_nothing_null> has a value
     *
     * @return boolean
     */
    public function hasChangeAllOrNothingNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <change_all_or_nothing_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearChangeAllOrNothingNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <change_all_or_nothing_null> value
     *
     * @return boolean
     */
    public function getChangeAllOrNothingNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <change_all_or_nothing_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setChangeAllOrNothingNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <case_sensitive> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitive(){
      return $this->_has(12);
    }
    
    /**
     * Clear <case_sensitive> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCaseSensitive(){
      return $this->_clear(12);
    }
    
    /**
     * Get <case_sensitive> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getCaseSensitive(){
      return $this->_get(12);
    }
    
    /**
     * Set <case_sensitive> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCaseSensitive(\dstore\engine\values\booleanValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <case_sensitive_null> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitiveNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <case_sensitive_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCaseSensitiveNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <case_sensitive_null> value
     *
     * @return boolean
     */
    public function getCaseSensitiveNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <case_sensitive_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCaseSensitiveNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(13);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCountry(){
      return $this->_clear(13);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCountry(){
      return $this->_get(13);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCountry(\dstore\engine\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <separator_in_value_list> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInValueList(){
      return $this->_has(14);
    }
    
    /**
     * Clear <separator_in_value_list> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearSeparatorInValueList(){
      return $this->_clear(14);
    }
    
    /**
     * Get <separator_in_value_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSeparatorInValueList(){
      return $this->_get(14);
    }
    
    /**
     * Set <separator_in_value_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setSeparatorInValueList(\dstore\engine\values\stringValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <separator_in_value_list_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInValueListNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <separator_in_value_list_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearSeparatorInValueListNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <separator_in_value_list_null> value
     *
     * @return boolean
     */
    public function getSeparatorInValueListNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <separator_in_value_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setSeparatorInValueListNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <separator_for_ident_values> has a value
     *
     * @return boolean
     */
    public function hasSeparatorForIdentValues(){
      return $this->_has(15);
    }
    
    /**
     * Clear <separator_for_ident_values> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearSeparatorForIdentValues(){
      return $this->_clear(15);
    }
    
    /**
     * Get <separator_for_ident_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSeparatorForIdentValues(){
      return $this->_get(15);
    }
    
    /**
     * Set <separator_for_ident_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setSeparatorForIdentValues(\dstore\engine\values\stringValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <separator_for_ident_values_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorForIdentValuesNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <separator_for_ident_values_null> value
     *
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function clearSeparatorForIdentValuesNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <separator_for_ident_values_null> value
     *
     * @return boolean
     */
    public function getSeparatorForIdentValuesNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <separator_for_ident_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyPersonData_Pu\Parameters
     */
    public function setSeparatorForIdentValuesNull( $value){
      return $this->_set(1015, $value);
    }
  }
}

