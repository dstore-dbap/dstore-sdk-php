<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_GetVisitorInformation_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\st_GetVisitorInformation_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $visitor_id = null;
    
    /**  @var boolean */
    public $visitor_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $start_row_no = null;
    
    /**  @var boolean */
    public $start_row_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $number_of_rows = null;
    
    /**  @var boolean */
    public $number_of_rows_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_GetVisitorInformation_Ad.Parameters');

      // OPTIONAL MESSAGE visitor_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "visitor_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL visitor_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "visitor_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_row_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "start_row_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL start_row_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "start_row_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE number_of_rows = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "number_of_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL number_of_rows_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "number_of_rows_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <visitor_id> has a value
     *
     * @return boolean
     */
    public function hasVisitorId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <visitor_id> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearVisitorId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <visitor_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisitorId(){
      return $this->_get(1);
    }
    
    /**
     * Set <visitor_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setVisitorId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <visitor_id_null> has a value
     *
     * @return boolean
     */
    public function hasVisitorIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <visitor_id_null> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearVisitorIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <visitor_id_null> value
     *
     * @return boolean
     */
    public function getVisitorIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <visitor_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setVisitorIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <start_row_no> has a value
     *
     * @return boolean
     */
    public function hasStartRowNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <start_row_no> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearStartRowNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <start_row_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStartRowNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <start_row_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setStartRowNo(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <start_row_no_null> has a value
     *
     * @return boolean
     */
    public function hasStartRowNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <start_row_no_null> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearStartRowNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <start_row_no_null> value
     *
     * @return boolean
     */
    public function getStartRowNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <start_row_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setStartRowNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <number_of_rows> has a value
     *
     * @return boolean
     */
    public function hasNumberOfRows(){
      return $this->_has(3);
    }
    
    /**
     * Clear <number_of_rows> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearNumberOfRows(){
      return $this->_clear(3);
    }
    
    /**
     * Get <number_of_rows> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNumberOfRows(){
      return $this->_get(3);
    }
    
    /**
     * Set <number_of_rows> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setNumberOfRows(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <number_of_rows_null> has a value
     *
     * @return boolean
     */
    public function hasNumberOfRowsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <number_of_rows_null> value
     *
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function clearNumberOfRowsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <number_of_rows_null> value
     *
     * @return boolean
     */
    public function getNumberOfRowsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <number_of_rows_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetVisitorInformation_Ad\Parameters
     */
    public function setNumberOfRowsNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

