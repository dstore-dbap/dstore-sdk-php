<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetForumAccessMatrix_Ad.proto
//   Date: 2015-10-06 11:19:44

namespace dstore\engine\fo_GetForumAccessMatrix_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $group_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $access_level_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $forum_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $access = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $group_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $anonymous_access = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $group_access = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $access_type = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetForumAccessMatrix_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "group_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE access_level_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "access_level_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE forum_id = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "forum_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE access = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "access";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "group_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 20003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20003;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE anonymous_access = 20004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20004;
      $f->name      = "anonymous_access";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_access = 20007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20007;
      $f->name      = "group_access";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE access_type = 20008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20008;
      $f->name      = "access_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <group_description> has a value
     *
     * @return boolean
     */
    public function hasGroupDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <group_description> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearGroupDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <group_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getGroupDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <group_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setGroupDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <access_level_id> has a value
     *
     * @return boolean
     */
    public function hasAccessLevelId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <access_level_id> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearAccessLevelId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <access_level_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAccessLevelId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <access_level_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setAccessLevelId(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10003);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <forum_id> has a value
     *
     * @return boolean
     */
    public function hasForumId(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <forum_id> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearForumId(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <forum_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getForumId(){
      return $this->_get(10004);
    }
    
    /**
     * Set <forum_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setForumId(\dstore\engine\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <access> has a value
     *
     * @return boolean
     */
    public function hasAccess(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <access> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearAccess(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <access> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getAccess(){
      return $this->_get(10005);
    }
    
    /**
     * Set <access> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setAccess(\dstore\engine\values\booleanValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <group_id> has a value
     *
     * @return boolean
     */
    public function hasGroupId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <group_id> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearGroupId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <group_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGroupId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <group_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setGroupId(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(20003);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearPersonId(){
      return $this->_clear(20003);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(20003);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(20003, $value);
    }
    
    /**
     * Check if <anonymous_access> has a value
     *
     * @return boolean
     */
    public function hasAnonymousAccess(){
      return $this->_has(20004);
    }
    
    /**
     * Clear <anonymous_access> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearAnonymousAccess(){
      return $this->_clear(20004);
    }
    
    /**
     * Get <anonymous_access> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getAnonymousAccess(){
      return $this->_get(20004);
    }
    
    /**
     * Set <anonymous_access> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setAnonymousAccess(\dstore\engine\values\booleanValue $value){
      return $this->_set(20004, $value);
    }
    
    /**
     * Check if <group_access> has a value
     *
     * @return boolean
     */
    public function hasGroupAccess(){
      return $this->_has(20007);
    }
    
    /**
     * Clear <group_access> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearGroupAccess(){
      return $this->_clear(20007);
    }
    
    /**
     * Get <group_access> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGroupAccess(){
      return $this->_get(20007);
    }
    
    /**
     * Set <group_access> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setGroupAccess(\dstore\engine\values\booleanValue $value){
      return $this->_set(20007, $value);
    }
    
    /**
     * Check if <access_type> has a value
     *
     * @return boolean
     */
    public function hasAccessType(){
      return $this->_has(20008);
    }
    
    /**
     * Clear <access_type> value
     *
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function clearAccessType(){
      return $this->_clear(20008);
    }
    
    /**
     * Get <access_type> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAccessType(){
      return $this->_get(20008);
    }
    
    /**
     * Set <access_type> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetForumAccessMatrix_Ad\Response\Row
     */
    public function setAccessType(\dstore\engine\values\integerValue $value){
      return $this->_set(20008, $value);
    }
  }
}

