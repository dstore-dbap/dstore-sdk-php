<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPersonInfoForOrders_Ad.proto
//   Date: 2016-05-19 08:07:50

namespace dstore\engine\om_GetPersonInfoForOrders_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $value_restricted_by_pattern = null;
    
    /**  @var \dstore\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $invoice_or_delivery_adress = null;
    
    /**  @var \dstore\values\stringValue */
    public $actual_value = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_characteristic_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $value = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_type_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPersonInfoForOrders_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_restricted_by_pattern = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "value_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE invoice_or_delivery_adress = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "invoice_or_delivery_adress";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE actual_value = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "actual_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_characteristic_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "person_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_type_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <value_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValueRestrictedByPattern(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <value_restricted_by_pattern> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearValueRestrictedByPattern(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <value_restricted_by_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValueRestrictedByPattern(){
      return $this->_get(10001);
    }
    
    /**
     * Set <value_restricted_by_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setValueRestrictedByPattern(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10002);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setDescription(\dstore\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearPersonId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <invoice_or_delivery_adress> has a value
     *
     * @return boolean
     */
    public function hasInvoiceOrDeliveryAdress(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <invoice_or_delivery_adress> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearInvoiceOrDeliveryAdress(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <invoice_or_delivery_adress> value
     *
     * @return \dstore\values\stringValue
     */
    public function getInvoiceOrDeliveryAdress(){
      return $this->_get(10004);
    }
    
    /**
     * Set <invoice_or_delivery_adress> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setInvoiceOrDeliveryAdress(\dstore\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <actual_value> has a value
     *
     * @return boolean
     */
    public function hasActualValue(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <actual_value> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearActualValue(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <actual_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getActualValue(){
      return $this->_get(10005);
    }
    
    /**
     * Set <actual_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setActualValue(\dstore\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <person_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <person_characteristic_id> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearPersonCharacteristicId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <person_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonCharacteristicId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <person_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setPersonCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <value> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearValue(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue(){
      return $this->_get(10007);
    }
    
    /**
     * Set <value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setValue(\dstore\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(10008);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setSortNo(\dstore\values\integerValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function clearPersonTypeId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPersonInfoForOrders_Ad\Response\Row
     */
    public function setPersonTypeId(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
  }
}

