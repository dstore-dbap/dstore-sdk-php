<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_GetHTreeNodeStatistics_Ad.proto
//   Date: 2016-05-19 08:07:56

namespace dstore\engine\st_GetHTreeNodeStatistics_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\decimalValue */
    public $percentage_of_all_items = null;
    
    /**  @var \dstore\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\values\stringValue */
    public $basic_characteristic = null;
    
    /**  @var \dstore\values\decimalValue */
    public $percentage_of_item_tree = null;
    
    /**  @var \dstore\values\decimalValue */
    public $total_value_h_tree_node_id = null;
    
    /**  @var \dstore\values\decimalValue */
    public $direct_value_similar_nodes = null;
    
    /**  @var \dstore\values\decimalValue */
    public $total_value_similar_nodes = null;
    
    /**  @var \dstore\values\integerValue */
    public $basic_characteristic_number = null;
    
    /**  @var \dstore\values\decimalValue */
    public $percentage_of_predecessor = null;
    
    /**  @var \dstore\values\decimalValue */
    public $direct_value_h_tree_node_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_GetHTreeNodeStatistics_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE percentage_of_all_items = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "percentage_of_all_items";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "basic_characteristic";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE percentage_of_item_tree = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "percentage_of_item_tree";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_value_h_tree_node_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "total_value_h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE direct_value_similar_nodes = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "direct_value_similar_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_value_similar_nodes = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "total_value_similar_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic_number = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "basic_characteristic_number";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE percentage_of_predecessor = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "percentage_of_predecessor";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE direct_value_h_tree_node_id = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "direct_value_h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <percentage_of_all_items> has a value
     *
     * @return boolean
     */
    public function hasPercentageOfAllItems(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <percentage_of_all_items> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearPercentageOfAllItems(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <percentage_of_all_items> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getPercentageOfAllItems(){
      return $this->_get(10001);
    }
    
    /**
     * Set <percentage_of_all_items> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setPercentageOfAllItems(\dstore\values\decimalValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10002);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setDescription(\dstore\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <basic_characteristic> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristic(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <basic_characteristic> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearBasicCharacteristic(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <basic_characteristic> value
     *
     * @return \dstore\values\stringValue
     */
    public function getBasicCharacteristic(){
      return $this->_get(10003);
    }
    
    /**
     * Set <basic_characteristic> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setBasicCharacteristic(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <percentage_of_item_tree> has a value
     *
     * @return boolean
     */
    public function hasPercentageOfItemTree(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <percentage_of_item_tree> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearPercentageOfItemTree(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <percentage_of_item_tree> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getPercentageOfItemTree(){
      return $this->_get(10004);
    }
    
    /**
     * Set <percentage_of_item_tree> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setPercentageOfItemTree(\dstore\values\decimalValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <total_value_h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTotalValueHTreeNodeId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <total_value_h_tree_node_id> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearTotalValueHTreeNodeId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <total_value_h_tree_node_id> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getTotalValueHTreeNodeId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <total_value_h_tree_node_id> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setTotalValueHTreeNodeId(\dstore\values\decimalValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <direct_value_similar_nodes> has a value
     *
     * @return boolean
     */
    public function hasDirectValueSimilarNodes(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <direct_value_similar_nodes> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearDirectValueSimilarNodes(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <direct_value_similar_nodes> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getDirectValueSimilarNodes(){
      return $this->_get(10006);
    }
    
    /**
     * Set <direct_value_similar_nodes> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setDirectValueSimilarNodes(\dstore\values\decimalValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <total_value_similar_nodes> has a value
     *
     * @return boolean
     */
    public function hasTotalValueSimilarNodes(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <total_value_similar_nodes> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearTotalValueSimilarNodes(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <total_value_similar_nodes> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getTotalValueSimilarNodes(){
      return $this->_get(10007);
    }
    
    /**
     * Set <total_value_similar_nodes> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setTotalValueSimilarNodes(\dstore\values\decimalValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <basic_characteristic_number> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNumber(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <basic_characteristic_number> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearBasicCharacteristicNumber(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <basic_characteristic_number> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBasicCharacteristicNumber(){
      return $this->_get(10008);
    }
    
    /**
     * Set <basic_characteristic_number> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setBasicCharacteristicNumber(\dstore\values\integerValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <percentage_of_predecessor> has a value
     *
     * @return boolean
     */
    public function hasPercentageOfPredecessor(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <percentage_of_predecessor> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearPercentageOfPredecessor(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <percentage_of_predecessor> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getPercentageOfPredecessor(){
      return $this->_get(10009);
    }
    
    /**
     * Set <percentage_of_predecessor> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setPercentageOfPredecessor(\dstore\values\decimalValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <direct_value_h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasDirectValueHTreeNodeId(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <direct_value_h_tree_node_id> value
     *
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function clearDirectValueHTreeNodeId(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <direct_value_h_tree_node_id> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getDirectValueHTreeNodeId(){
      return $this->_get(10010);
    }
    
    /**
     * Set <direct_value_h_tree_node_id> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetHTreeNodeStatistics_Ad\Response\Row
     */
    public function setDirectValueHTreeNodeId(\dstore\values\decimalValue $value){
      return $this->_set(10010, $value);
    }
  }
}

