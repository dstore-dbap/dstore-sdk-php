<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetShippingCost_Pu.proto
//   Date: 2016-05-19 08:07:50

namespace dstore\engine\om_GetShippingCost_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $shipping_type_id = null;
    
    /**  @var boolean */
    public $shipping_type_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $currency_id = null;
    
    /**  @var boolean */
    public $currency_id_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $total_brutto_price = null;
    
    /**  @var boolean */
    public $total_brutto_price_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $total_netto_price = null;
    
    /**  @var boolean */
    public $total_netto_price_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $select_result = null;
    
    /**  @var boolean */
    public $select_result_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $date = null;
    
    /**  @var boolean */
    public $date_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $delivery_person_id = null;
    
    /**  @var boolean */
    public $delivery_person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $price_node_characteristic_id = null;
    
    /**  @var boolean */
    public $price_node_characteristic_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_type_id = null;
    
    /**  @var boolean */
    public $payment_type_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetShippingCost_Pu.Parameters');

      // OPTIONAL MESSAGE shipping_type_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "shipping_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL shipping_type_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "shipping_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL currency_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "currency_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_brutto_price = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "total_brutto_price";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL total_brutto_price_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "total_brutto_price_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE total_netto_price = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "total_netto_price";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL total_netto_price_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "total_netto_price_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE select_result = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "select_result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL select_result_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "select_result_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unique_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delivery_person_id = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "delivery_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delivery_person_id_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "delivery_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE price_node_characteristic_id = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "price_node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL price_node_characteristic_id_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "price_node_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_id = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "payment_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL payment_type_id_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "payment_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <shipping_type_id> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <shipping_type_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearShippingTypeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <shipping_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getShippingTypeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <shipping_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setShippingTypeId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <shipping_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <shipping_type_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearShippingTypeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <shipping_type_id_null> value
     *
     * @return boolean
     */
    public function getShippingTypeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <shipping_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setShippingTypeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearCurrencyId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(2);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setCurrencyId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <currency_id_null> has a value
     *
     * @return boolean
     */
    public function hasCurrencyIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <currency_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearCurrencyIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <currency_id_null> value
     *
     * @return boolean
     */
    public function getCurrencyIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <currency_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setCurrencyIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <total_brutto_price> has a value
     *
     * @return boolean
     */
    public function hasTotalBruttoPrice(){
      return $this->_has(3);
    }
    
    /**
     * Clear <total_brutto_price> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearTotalBruttoPrice(){
      return $this->_clear(3);
    }
    
    /**
     * Get <total_brutto_price> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getTotalBruttoPrice(){
      return $this->_get(3);
    }
    
    /**
     * Set <total_brutto_price> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setTotalBruttoPrice(\dstore\values\decimalValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <total_brutto_price_null> has a value
     *
     * @return boolean
     */
    public function hasTotalBruttoPriceNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <total_brutto_price_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearTotalBruttoPriceNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <total_brutto_price_null> value
     *
     * @return boolean
     */
    public function getTotalBruttoPriceNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <total_brutto_price_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setTotalBruttoPriceNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <total_netto_price> has a value
     *
     * @return boolean
     */
    public function hasTotalNettoPrice(){
      return $this->_has(4);
    }
    
    /**
     * Clear <total_netto_price> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearTotalNettoPrice(){
      return $this->_clear(4);
    }
    
    /**
     * Get <total_netto_price> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getTotalNettoPrice(){
      return $this->_get(4);
    }
    
    /**
     * Set <total_netto_price> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setTotalNettoPrice(\dstore\values\decimalValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <total_netto_price_null> has a value
     *
     * @return boolean
     */
    public function hasTotalNettoPriceNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <total_netto_price_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearTotalNettoPriceNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <total_netto_price_null> value
     *
     * @return boolean
     */
    public function getTotalNettoPriceNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <total_netto_price_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setTotalNettoPriceNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <select_result> has a value
     *
     * @return boolean
     */
    public function hasSelectResult(){
      return $this->_has(5);
    }
    
    /**
     * Clear <select_result> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearSelectResult(){
      return $this->_clear(5);
    }
    
    /**
     * Get <select_result> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSelectResult(){
      return $this->_get(5);
    }
    
    /**
     * Set <select_result> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setSelectResult(\dstore\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <select_result_null> has a value
     *
     * @return boolean
     */
    public function hasSelectResultNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <select_result_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearSelectResultNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <select_result_null> value
     *
     * @return boolean
     */
    public function getSelectResultNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <select_result_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setSelectResultNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <date> has a value
     *
     * @return boolean
     */
    public function hasDate(){
      return $this->_has(6);
    }
    
    /**
     * Clear <date> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearDate(){
      return $this->_clear(6);
    }
    
    /**
     * Get <date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getDate(){
      return $this->_get(6);
    }
    
    /**
     * Set <date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setDate(\dstore\values\timestampValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <date_null> has a value
     *
     * @return boolean
     */
    public function hasDateNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <date_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearDateNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <date_null> value
     *
     * @return boolean
     */
    public function getDateNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setDateNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(7);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setUniqueId(\dstore\values\stringValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(8);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(8);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(8);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <delivery_person_id> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonId(){
      return $this->_has(9);
    }
    
    /**
     * Clear <delivery_person_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearDeliveryPersonId(){
      return $this->_clear(9);
    }
    
    /**
     * Get <delivery_person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDeliveryPersonId(){
      return $this->_get(9);
    }
    
    /**
     * Set <delivery_person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setDeliveryPersonId(\dstore\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <delivery_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonIdNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <delivery_person_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearDeliveryPersonIdNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <delivery_person_id_null> value
     *
     * @return boolean
     */
    public function getDeliveryPersonIdNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <delivery_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setDeliveryPersonIdNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <price_node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPriceNodeCharacteristicId(){
      return $this->_has(10);
    }
    
    /**
     * Clear <price_node_characteristic_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPriceNodeCharacteristicId(){
      return $this->_clear(10);
    }
    
    /**
     * Get <price_node_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPriceNodeCharacteristicId(){
      return $this->_get(10);
    }
    
    /**
     * Set <price_node_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPriceNodeCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <price_node_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasPriceNodeCharacteristicIdNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <price_node_characteristic_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPriceNodeCharacteristicIdNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <price_node_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getPriceNodeCharacteristicIdNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <price_node_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPriceNodeCharacteristicIdNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <payment_type_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeId(){
      return $this->_has(11);
    }
    
    /**
     * Clear <payment_type_id> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPaymentTypeId(){
      return $this->_clear(11);
    }
    
    /**
     * Get <payment_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentTypeId(){
      return $this->_get(11);
    }
    
    /**
     * Set <payment_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPaymentTypeId(\dstore\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <payment_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeIdNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <payment_type_id_null> value
     *
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function clearPaymentTypeIdNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <payment_type_id_null> value
     *
     * @return boolean
     */
    public function getPaymentTypeIdNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <payment_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetShippingCost_Pu\Parameters
     */
    public function setPaymentTypeIdNull( $value){
      return $this->_set(1011, $value);
    }
  }
}

