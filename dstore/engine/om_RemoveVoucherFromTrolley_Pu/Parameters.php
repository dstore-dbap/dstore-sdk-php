<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_RemoveVoucherFromTrolley_Pu.proto
//   Date: 2016-05-19 08:07:53

namespace dstore\engine\om_RemoveVoucherFromTrolley_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $voucher_code = null;
    
    /**  @var boolean */
    public $voucher_code_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_RemoveVoucherFromTrolley_Pu.Parameters');

      // OPTIONAL MESSAGE voucher_code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "voucher_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL voucher_code_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "voucher_code_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unique_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <voucher_code> has a value
     *
     * @return boolean
     */
    public function hasVoucherCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <voucher_code> value
     *
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function clearVoucherCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <voucher_code> value
     *
     * @return \dstore\values\stringValue
     */
    public function getVoucherCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <voucher_code> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function setVoucherCode(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <voucher_code_null> has a value
     *
     * @return boolean
     */
    public function hasVoucherCodeNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <voucher_code_null> value
     *
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function clearVoucherCodeNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <voucher_code_null> value
     *
     * @return boolean
     */
    public function getVoucherCodeNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <voucher_code_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function setVoucherCodeNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(2);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function setUniqueId(\dstore\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_RemoveVoucherFromTrolley_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1002, $value);
    }
  }
}

