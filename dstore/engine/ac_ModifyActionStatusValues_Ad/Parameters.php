<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/ac_ModifyActionStatusValues_Ad.proto
//   Date: 2016-05-19 08:07:39

namespace dstore\engine\ac_ModifyActionStatusValues_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $command_id = null;
    
    /**  @var boolean */
    public $command_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $status = null;
    
    /**  @var boolean */
    public $status_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $status_description = null;
    
    /**  @var boolean */
    public $status_description_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_no = null;
    
    /**  @var boolean */
    public $sort_no_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $detailed_description = null;
    
    /**  @var boolean */
    public $detailed_description_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $status_category_id = null;
    
    /**  @var boolean */
    public $status_category_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $delete_status = null;
    
    /**  @var boolean */
    public $delete_status_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.ac_ModifyActionStatusValues_Ad.Parameters');

      // OPTIONAL MESSAGE command_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "command_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL command_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "command_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE status = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL status_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE status_description = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "status_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL status_description_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "status_description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_no_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "sort_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE detailed_description = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "detailed_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL detailed_description_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "detailed_description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE status_category_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "status_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL status_category_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "status_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_status = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "delete_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_status_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "delete_status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <command_id> has a value
     *
     * @return boolean
     */
    public function hasCommandId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <command_id> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearCommandId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <command_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCommandId(){
      return $this->_get(1);
    }
    
    /**
     * Set <command_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setCommandId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <command_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommandIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <command_id_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearCommandIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <command_id_null> value
     *
     * @return boolean
     */
    public function getCommandIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <command_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setCommandIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(2);
    }
    
    /**
     * Clear <status> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatus(){
      return $this->_clear(2);
    }
    
    /**
     * Get <status> value
     *
     * @return \dstore\values\integerValue
     */
    public function getStatus(){
      return $this->_get(2);
    }
    
    /**
     * Set <status> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatus(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <status_null> has a value
     *
     * @return boolean
     */
    public function hasStatusNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <status_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatusNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <status_null> value
     *
     * @return boolean
     */
    public function getStatusNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatusNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <status_description> has a value
     *
     * @return boolean
     */
    public function hasStatusDescription(){
      return $this->_has(3);
    }
    
    /**
     * Clear <status_description> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatusDescription(){
      return $this->_clear(3);
    }
    
    /**
     * Get <status_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getStatusDescription(){
      return $this->_get(3);
    }
    
    /**
     * Set <status_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatusDescription(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <status_description_null> has a value
     *
     * @return boolean
     */
    public function hasStatusDescriptionNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <status_description_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatusDescriptionNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <status_description_null> value
     *
     * @return boolean
     */
    public function getStatusDescriptionNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <status_description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatusDescriptionNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(4);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearSortNo(){
      return $this->_clear(4);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(4);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setSortNo(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <sort_no_null> has a value
     *
     * @return boolean
     */
    public function hasSortNoNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <sort_no_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearSortNoNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <sort_no_null> value
     *
     * @return boolean
     */
    public function getSortNoNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <sort_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setSortNoNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <detailed_description> has a value
     *
     * @return boolean
     */
    public function hasDetailedDescription(){
      return $this->_has(5);
    }
    
    /**
     * Clear <detailed_description> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearDetailedDescription(){
      return $this->_clear(5);
    }
    
    /**
     * Get <detailed_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDetailedDescription(){
      return $this->_get(5);
    }
    
    /**
     * Set <detailed_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setDetailedDescription(\dstore\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <detailed_description_null> has a value
     *
     * @return boolean
     */
    public function hasDetailedDescriptionNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <detailed_description_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearDetailedDescriptionNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <detailed_description_null> value
     *
     * @return boolean
     */
    public function getDetailedDescriptionNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <detailed_description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setDetailedDescriptionNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <status_category_id> has a value
     *
     * @return boolean
     */
    public function hasStatusCategoryId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <status_category_id> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatusCategoryId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <status_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getStatusCategoryId(){
      return $this->_get(6);
    }
    
    /**
     * Set <status_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatusCategoryId(\dstore\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <status_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasStatusCategoryIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <status_category_id_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearStatusCategoryIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <status_category_id_null> value
     *
     * @return boolean
     */
    public function getStatusCategoryIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <status_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setStatusCategoryIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <delete_status> has a value
     *
     * @return boolean
     */
    public function hasDeleteStatus(){
      return $this->_has(7);
    }
    
    /**
     * Clear <delete_status> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearDeleteStatus(){
      return $this->_clear(7);
    }
    
    /**
     * Get <delete_status> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDeleteStatus(){
      return $this->_get(7);
    }
    
    /**
     * Set <delete_status> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setDeleteStatus(\dstore\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <delete_status_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteStatusNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <delete_status_null> value
     *
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function clearDeleteStatusNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <delete_status_null> value
     *
     * @return boolean
     */
    public function getDeleteStatusNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <delete_status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_ModifyActionStatusValues_Ad\Parameters
     */
    public function setDeleteStatusNull( $value){
      return $this->_set(1007, $value);
    }
  }
}

