<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCampaignPeriodDefs_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_GetCampaignPeriodDefs_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $repeat_every_x_time_units = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $repeat_until = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $start_date_and_time = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $end_date_and_time = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $start_date_and_time_char = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $time_unit_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $period_definition_name = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $end_date_and_time_char = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $time_unit = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $period_definition_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCampaignPeriodDefs_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE repeat_every_x_time_units = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "repeat_every_x_time_units";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE repeat_until = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "repeat_until";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_date_and_time = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "start_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE end_date_and_time = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "end_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_date_and_time_char = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "start_date_and_time_char";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE time_unit_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "time_unit_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE period_definition_name = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "period_definition_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE end_date_and_time_char = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "end_date_and_time_char";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE time_unit = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "time_unit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE period_definition_id = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "period_definition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <repeat_every_x_time_units> has a value
     *
     * @return boolean
     */
    public function hasRepeatEveryXTimeUnits(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <repeat_every_x_time_units> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearRepeatEveryXTimeUnits(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <repeat_every_x_time_units> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRepeatEveryXTimeUnits(){
      return $this->_get(10001);
    }
    
    /**
     * Set <repeat_every_x_time_units> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setRepeatEveryXTimeUnits(\dstore\engine\values\integerValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <repeat_until> has a value
     *
     * @return boolean
     */
    public function hasRepeatUntil(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <repeat_until> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearRepeatUntil(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <repeat_until> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getRepeatUntil(){
      return $this->_get(10002);
    }
    
    /**
     * Set <repeat_until> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setRepeatUntil(\dstore\engine\values\timestampValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <start_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasStartDateAndTime(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <start_date_and_time> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearStartDateAndTime(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <start_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getStartDateAndTime(){
      return $this->_get(10003);
    }
    
    /**
     * Set <start_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setStartDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <end_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasEndDateAndTime(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <end_date_and_time> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearEndDateAndTime(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <end_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getEndDateAndTime(){
      return $this->_get(10004);
    }
    
    /**
     * Set <end_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setEndDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <start_date_and_time_char> has a value
     *
     * @return boolean
     */
    public function hasStartDateAndTimeChar(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <start_date_and_time_char> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearStartDateAndTimeChar(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <start_date_and_time_char> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getStartDateAndTimeChar(){
      return $this->_get(10005);
    }
    
    /**
     * Set <start_date_and_time_char> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setStartDateAndTimeChar(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <time_unit_id> has a value
     *
     * @return boolean
     */
    public function hasTimeUnitId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <time_unit_id> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearTimeUnitId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <time_unit_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTimeUnitId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <time_unit_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setTimeUnitId(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <period_definition_name> has a value
     *
     * @return boolean
     */
    public function hasPeriodDefinitionName(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <period_definition_name> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearPeriodDefinitionName(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <period_definition_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPeriodDefinitionName(){
      return $this->_get(10007);
    }
    
    /**
     * Set <period_definition_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setPeriodDefinitionName(\dstore\engine\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <end_date_and_time_char> has a value
     *
     * @return boolean
     */
    public function hasEndDateAndTimeChar(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <end_date_and_time_char> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearEndDateAndTimeChar(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <end_date_and_time_char> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getEndDateAndTimeChar(){
      return $this->_get(10008);
    }
    
    /**
     * Set <end_date_and_time_char> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setEndDateAndTimeChar(\dstore\engine\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <time_unit> has a value
     *
     * @return boolean
     */
    public function hasTimeUnit(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <time_unit> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearTimeUnit(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <time_unit> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getTimeUnit(){
      return $this->_get(10009);
    }
    
    /**
     * Set <time_unit> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setTimeUnit(\dstore\engine\values\stringValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <period_definition_id> has a value
     *
     * @return boolean
     */
    public function hasPeriodDefinitionId(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <period_definition_id> value
     *
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function clearPeriodDefinitionId(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <period_definition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPeriodDefinitionId(){
      return $this->_get(10010);
    }
    
    /**
     * Set <period_definition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignPeriodDefs_Ad\Response\Row
     */
    public function setPeriodDefinitionId(\dstore\engine\values\integerValue $value){
      return $this->_set(10010, $value);
    }
  }
}

