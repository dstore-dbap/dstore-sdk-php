<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_SearchBinaries_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\mi_SearchBinaries_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $input_nest_level_conds = null;
    
    /**  @var boolean */
    public $input_nest_level_conds_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value_separator_i_n_operator = null;
    
    /**  @var boolean */
    public $value_separator_i_n_operator_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $start_at_row_no = null;
    
    /**  @var boolean */
    public $start_at_row_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $only_used_in_table_bitmap = null;
    
    /**  @var boolean */
    public $only_used_in_table_bitmap_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_binary_code = null;
    
    /**  @var boolean */
    public $include_binary_code_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_binary_charac_id1 = null;
    
    /**  @var boolean */
    public $output_binary_charac_id1_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_binary_charac_id2 = null;
    
    /**  @var boolean */
    public $output_binary_charac_id2_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_binary_charac_id3 = null;
    
    /**  @var boolean */
    public $output_binary_charac_id3_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_SearchBinaries_Ad.Parameters');

      // OPTIONAL MESSAGE input_nest_level_conds = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "input_nest_level_conds";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL input_nest_level_conds_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "input_nest_level_conds_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_separator_i_n_operator = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value_separator_i_n_operator";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_separator_i_n_operator_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "value_separator_i_n_operator_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_at_row_no = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "start_at_row_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL start_at_row_no_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "start_at_row_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_used_in_table_bitmap = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "only_used_in_table_bitmap";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_used_in_table_bitmap_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "only_used_in_table_bitmap_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_binary_code = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "include_binary_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_binary_code_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "include_binary_code_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_binary_charac_id1 = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "output_binary_charac_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_binary_charac_id1_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "output_binary_charac_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_binary_charac_id2 = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "output_binary_charac_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_binary_charac_id2_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "output_binary_charac_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_binary_charac_id3 = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "output_binary_charac_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_binary_charac_id3_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "output_binary_charac_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <input_nest_level_conds> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelConds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <input_nest_level_conds> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearInputNestLevelConds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <input_nest_level_conds> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getInputNestLevelConds(){
      return $this->_get(1);
    }
    
    /**
     * Set <input_nest_level_conds> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setInputNestLevelConds(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <input_nest_level_conds_null> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelCondsNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <input_nest_level_conds_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearInputNestLevelCondsNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <input_nest_level_conds_null> value
     *
     * @return boolean
     */
    public function getInputNestLevelCondsNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <input_nest_level_conds_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setInputNestLevelCondsNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <value_separator_i_n_operator> has a value
     *
     * @return boolean
     */
    public function hasValueSeparatorINOperator(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value_separator_i_n_operator> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearValueSeparatorINOperator(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value_separator_i_n_operator> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValueSeparatorINOperator(){
      return $this->_get(2);
    }
    
    /**
     * Set <value_separator_i_n_operator> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setValueSeparatorINOperator(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <value_separator_i_n_operator_null> has a value
     *
     * @return boolean
     */
    public function hasValueSeparatorINOperatorNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <value_separator_i_n_operator_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearValueSeparatorINOperatorNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <value_separator_i_n_operator_null> value
     *
     * @return boolean
     */
    public function getValueSeparatorINOperatorNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <value_separator_i_n_operator_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setValueSeparatorINOperatorNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <start_at_row_no> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNo(){
      return $this->_has(3);
    }
    
    /**
     * Clear <start_at_row_no> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearStartAtRowNo(){
      return $this->_clear(3);
    }
    
    /**
     * Get <start_at_row_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStartAtRowNo(){
      return $this->_get(3);
    }
    
    /**
     * Set <start_at_row_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setStartAtRowNo(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <start_at_row_no_null> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNoNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <start_at_row_no_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearStartAtRowNoNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <start_at_row_no_null> value
     *
     * @return boolean
     */
    public function getStartAtRowNoNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <start_at_row_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setStartAtRowNoNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(4);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <only_used_in_table_bitmap> has a value
     *
     * @return boolean
     */
    public function hasOnlyUsedInTableBitmap(){
      return $this->_has(5);
    }
    
    /**
     * Clear <only_used_in_table_bitmap> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOnlyUsedInTableBitmap(){
      return $this->_clear(5);
    }
    
    /**
     * Get <only_used_in_table_bitmap> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlyUsedInTableBitmap(){
      return $this->_get(5);
    }
    
    /**
     * Set <only_used_in_table_bitmap> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOnlyUsedInTableBitmap(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <only_used_in_table_bitmap_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyUsedInTableBitmapNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <only_used_in_table_bitmap_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOnlyUsedInTableBitmapNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <only_used_in_table_bitmap_null> value
     *
     * @return boolean
     */
    public function getOnlyUsedInTableBitmapNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <only_used_in_table_bitmap_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOnlyUsedInTableBitmapNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <include_binary_code> has a value
     *
     * @return boolean
     */
    public function hasIncludeBinaryCode(){
      return $this->_has(6);
    }
    
    /**
     * Clear <include_binary_code> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearIncludeBinaryCode(){
      return $this->_clear(6);
    }
    
    /**
     * Get <include_binary_code> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeBinaryCode(){
      return $this->_get(6);
    }
    
    /**
     * Set <include_binary_code> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setIncludeBinaryCode(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <include_binary_code_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeBinaryCodeNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <include_binary_code_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearIncludeBinaryCodeNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <include_binary_code_null> value
     *
     * @return boolean
     */
    public function getIncludeBinaryCodeNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <include_binary_code_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setIncludeBinaryCodeNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <output_binary_charac_id1> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId1(){
      return $this->_has(7);
    }
    
    /**
     * Clear <output_binary_charac_id1> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId1(){
      return $this->_clear(7);
    }
    
    /**
     * Get <output_binary_charac_id1> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputBinaryCharacId1(){
      return $this->_get(7);
    }
    
    /**
     * Set <output_binary_charac_id1> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId1(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <output_binary_charac_id1_null> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId1Null(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <output_binary_charac_id1_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId1Null(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <output_binary_charac_id1_null> value
     *
     * @return boolean
     */
    public function getOutputBinaryCharacId1Null(){
      return $this->_get(1007);
    }
    
    /**
     * Set <output_binary_charac_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId1Null( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <output_binary_charac_id2> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId2(){
      return $this->_has(8);
    }
    
    /**
     * Clear <output_binary_charac_id2> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId2(){
      return $this->_clear(8);
    }
    
    /**
     * Get <output_binary_charac_id2> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputBinaryCharacId2(){
      return $this->_get(8);
    }
    
    /**
     * Set <output_binary_charac_id2> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId2(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <output_binary_charac_id2_null> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId2Null(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <output_binary_charac_id2_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId2Null(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <output_binary_charac_id2_null> value
     *
     * @return boolean
     */
    public function getOutputBinaryCharacId2Null(){
      return $this->_get(1008);
    }
    
    /**
     * Set <output_binary_charac_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId2Null( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <output_binary_charac_id3> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId3(){
      return $this->_has(9);
    }
    
    /**
     * Clear <output_binary_charac_id3> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId3(){
      return $this->_clear(9);
    }
    
    /**
     * Get <output_binary_charac_id3> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputBinaryCharacId3(){
      return $this->_get(9);
    }
    
    /**
     * Set <output_binary_charac_id3> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId3(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <output_binary_charac_id3_null> has a value
     *
     * @return boolean
     */
    public function hasOutputBinaryCharacId3Null(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <output_binary_charac_id3_null> value
     *
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function clearOutputBinaryCharacId3Null(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <output_binary_charac_id3_null> value
     *
     * @return boolean
     */
    public function getOutputBinaryCharacId3Null(){
      return $this->_get(1009);
    }
    
    /**
     * Set <output_binary_charac_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_SearchBinaries_Ad\Parameters
     */
    public function setOutputBinaryCharacId3Null( $value){
      return $this->_set(1009, $value);
    }
  }
}

