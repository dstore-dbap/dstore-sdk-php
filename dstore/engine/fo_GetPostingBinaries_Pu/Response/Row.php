<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetPostingBinaries_Pu.proto
//   Date: 2016-05-19 08:07:41

namespace dstore\engine\fo_GetPostingBinaries_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\values\stringValue */
    public $content_type = null;
    
    /**  @var \dstore\values\stringValue */
    public $posting_binary_identifier = null;
    
    /**  @var \dstore\values\stringValue */
    public $filename = null;
    
    /**  @var \dstore\values\integerValue */
    public $filesize_in_k_b = null;
    
    /**  @var \dstore\values\stringValue */
    public $last_modified_at_date_and_time_char = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\values\timestampValue */
    public $last_modified_at_date_and_time = null;
    
    /**  @var \dstore\values\bytesValue */
    public $binary_code = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetPostingBinaries_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE content_type = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "content_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE posting_binary_identifier = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "posting_binary_identifier";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filename = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "filename";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filesize_in_k_b = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "filesize_in_k_b";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_modified_at_date_and_time_char = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "last_modified_at_date_and_time_char";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_modified_at_date_and_time = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "last_modified_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_code = 20009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20009;
      $f->name      = "binary_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\bytesValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setDescription(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <content_type> has a value
     *
     * @return boolean
     */
    public function hasContentType(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <content_type> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearContentType(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <content_type> value
     *
     * @return \dstore\values\stringValue
     */
    public function getContentType(){
      return $this->_get(10002);
    }
    
    /**
     * Set <content_type> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setContentType(\dstore\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <posting_binary_identifier> has a value
     *
     * @return boolean
     */
    public function hasPostingBinaryIdentifier(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <posting_binary_identifier> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearPostingBinaryIdentifier(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <posting_binary_identifier> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPostingBinaryIdentifier(){
      return $this->_get(10003);
    }
    
    /**
     * Set <posting_binary_identifier> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setPostingBinaryIdentifier(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <filename> has a value
     *
     * @return boolean
     */
    public function hasFilename(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <filename> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearFilename(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <filename> value
     *
     * @return \dstore\values\stringValue
     */
    public function getFilename(){
      return $this->_get(10004);
    }
    
    /**
     * Set <filename> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setFilename(\dstore\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <filesize_in_k_b> has a value
     *
     * @return boolean
     */
    public function hasFilesizeInKB(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <filesize_in_k_b> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearFilesizeInKB(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <filesize_in_k_b> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFilesizeInKB(){
      return $this->_get(10005);
    }
    
    /**
     * Set <filesize_in_k_b> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setFilesizeInKB(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <last_modified_at_date_and_time_char> has a value
     *
     * @return boolean
     */
    public function hasLastModifiedAtDateAndTimeChar(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <last_modified_at_date_and_time_char> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearLastModifiedAtDateAndTimeChar(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <last_modified_at_date_and_time_char> value
     *
     * @return \dstore\values\stringValue
     */
    public function getLastModifiedAtDateAndTimeChar(){
      return $this->_get(10006);
    }
    
    /**
     * Set <last_modified_at_date_and_time_char> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setLastModifiedAtDateAndTimeChar(\dstore\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(10007);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setSortNo(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <last_modified_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastModifiedAtDateAndTime(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <last_modified_at_date_and_time> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearLastModifiedAtDateAndTime(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <last_modified_at_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getLastModifiedAtDateAndTime(){
      return $this->_get(10008);
    }
    
    /**
     * Set <last_modified_at_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setLastModifiedAtDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <binary_code> has a value
     *
     * @return boolean
     */
    public function hasBinaryCode(){
      return $this->_has(20009);
    }
    
    /**
     * Clear <binary_code> value
     *
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function clearBinaryCode(){
      return $this->_clear(20009);
    }
    
    /**
     * Get <binary_code> value
     *
     * @return \dstore\values\bytesValue
     */
    public function getBinaryCode(){
      return $this->_get(20009);
    }
    
    /**
     * Set <binary_code> value
     *
     * @param \dstore\values\bytesValue $value
     * @return \dstore\engine\fo_GetPostingBinaries_Pu\Response\Row
     */
    public function setBinaryCode(\dstore\values\bytesValue $value){
      return $this->_set(20009, $value);
    }
  }
}

