<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_GetDSS_Index_Frequency_Ad.proto
//   Date: 2015-10-06 11:20:09

namespace dstore\engine\st_GetDSS_Index_Frequency_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $orders = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $v_b_o_index = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $frequency_of__id = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $views = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $frequency_of__description = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $buying_interests = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_GetDSS_Index_Frequency_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE orders = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "orders";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE v_b_o_index = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "v_b_o_index";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE frequency_of__id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "frequency_of__id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE views = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "views";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE frequency_of__description = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "frequency_of__description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE buying_interests = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "buying_interests";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <orders> has a value
     *
     * @return boolean
     */
    public function hasOrders(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <orders> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearOrders(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <orders> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getOrders(){
      return $this->_get(10001);
    }
    
    /**
     * Set <orders> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setOrders(\dstore\engine\values\decimalValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <v_b_o_index> has a value
     *
     * @return boolean
     */
    public function hasVBOIndex(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <v_b_o_index> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearVBOIndex(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <v_b_o_index> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getVBOIndex(){
      return $this->_get(10002);
    }
    
    /**
     * Set <v_b_o_index> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setVBOIndex(\dstore\engine\values\decimalValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <frequency_of__id> has a value
     *
     * @return boolean
     */
    public function hasFrequencyOf_Id(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <frequency_of__id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearFrequencyOf_Id(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <frequency_of__id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFrequencyOf_Id(){
      return $this->_get(10003);
    }
    
    /**
     * Set <frequency_of__id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setFrequencyOf_Id(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <views> has a value
     *
     * @return boolean
     */
    public function hasViews(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <views> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearViews(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <views> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getViews(){
      return $this->_get(10004);
    }
    
    /**
     * Set <views> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setViews(\dstore\engine\values\decimalValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <frequency_of__description> has a value
     *
     * @return boolean
     */
    public function hasFrequencyOf_Description(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <frequency_of__description> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearFrequencyOf_Description(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <frequency_of__description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFrequencyOf_Description(){
      return $this->_get(10005);
    }
    
    /**
     * Set <frequency_of__description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setFrequencyOf_Description(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <buying_interests> has a value
     *
     * @return boolean
     */
    public function hasBuyingInterests(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <buying_interests> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function clearBuyingInterests(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <buying_interests> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getBuyingInterests(){
      return $this->_get(10006);
    }
    
    /**
     * Set <buying_interests> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Response\Row
     */
    public function setBuyingInterests(\dstore\engine\values\decimalValue $value){
      return $this->_set(10006, $value);
    }
  }
}

