<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_GetDSS_Index_Frequency_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\st_GetDSS_Index_Frequency_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $domain_tree_node_id = null;
    
    /**  @var boolean */
    public $domain_tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $group_by_nodes_on_level = null;
    
    /**  @var boolean */
    public $group_by_nodes_on_level_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_level_id = null;
    
    /**  @var boolean */
    public $is_level_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $group_by_node_characteristic_id = null;
    
    /**  @var boolean */
    public $group_by_node_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_values_in_one_id = null;
    
    /**  @var boolean */
    public $only_values_in_one_id_null = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $weight_views = null;
    
    /**  @var boolean */
    public $weight_views_null = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $weight_buying_interest = null;
    
    /**  @var boolean */
    public $weight_buying_interest_null = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $weight_order = null;
    
    /**  @var boolean */
    public $weight_order_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_deactivated_nodes = null;
    
    /**  @var boolean */
    public $include_deactivated_nodes_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_nodes_without_tree_node_id = null;
    
    /**  @var boolean */
    public $include_nodes_without_tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_result_by_column = null;
    
    /**  @var boolean */
    public $order_result_by_column_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $get_top_x = null;
    
    /**  @var boolean */
    public $get_top_x_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_GetDSS_Index_Frequency_Ad.Parameters');

      // OPTIONAL MESSAGE domain_tree_node_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "domain_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL domain_tree_node_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "domain_tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_by_nodes_on_level = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "group_by_nodes_on_level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL group_by_nodes_on_level_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "group_by_nodes_on_level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_level_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "is_level_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL is_level_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "is_level_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_by_node_characteristic_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "group_by_node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL group_by_node_characteristic_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "group_by_node_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_values_in_one_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "only_values_in_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_values_in_one_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "only_values_in_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_views = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "weight_views";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_views_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "weight_views_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_buying_interest = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "weight_buying_interest";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_buying_interest_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "weight_buying_interest_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_order = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "weight_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_order_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "weight_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_deactivated_nodes = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "include_deactivated_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_deactivated_nodes_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "include_deactivated_nodes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_nodes_without_tree_node_id = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "include_nodes_without_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_nodes_without_tree_node_id_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "include_nodes_without_tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_result_by_column = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "order_result_by_column";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_result_by_column_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "order_result_by_column_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_top_x = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "get_top_x";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_top_x_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "get_top_x_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <domain_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <domain_tree_node_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearDomainTreeNodeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <domain_tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getDomainTreeNodeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <domain_tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setDomainTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <domain_tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <domain_tree_node_id_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearDomainTreeNodeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <domain_tree_node_id_null> value
     *
     * @return boolean
     */
    public function getDomainTreeNodeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <domain_tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setDomainTreeNodeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <group_by_nodes_on_level> has a value
     *
     * @return boolean
     */
    public function hasGroupByNodesOnLevel(){
      return $this->_has(4);
    }
    
    /**
     * Clear <group_by_nodes_on_level> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGroupByNodesOnLevel(){
      return $this->_clear(4);
    }
    
    /**
     * Get <group_by_nodes_on_level> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGroupByNodesOnLevel(){
      return $this->_get(4);
    }
    
    /**
     * Set <group_by_nodes_on_level> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGroupByNodesOnLevel(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <group_by_nodes_on_level_null> has a value
     *
     * @return boolean
     */
    public function hasGroupByNodesOnLevelNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <group_by_nodes_on_level_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGroupByNodesOnLevelNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <group_by_nodes_on_level_null> value
     *
     * @return boolean
     */
    public function getGroupByNodesOnLevelNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <group_by_nodes_on_level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGroupByNodesOnLevelNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <is_level_id> has a value
     *
     * @return boolean
     */
    public function hasIsLevelId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <is_level_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIsLevelId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <is_level_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsLevelId(){
      return $this->_get(5);
    }
    
    /**
     * Set <is_level_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIsLevelId(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <is_level_id_null> has a value
     *
     * @return boolean
     */
    public function hasIsLevelIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <is_level_id_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIsLevelIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <is_level_id_null> value
     *
     * @return boolean
     */
    public function getIsLevelIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <is_level_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIsLevelIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <group_by_node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasGroupByNodeCharacteristicId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <group_by_node_characteristic_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGroupByNodeCharacteristicId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <group_by_node_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGroupByNodeCharacteristicId(){
      return $this->_get(6);
    }
    
    /**
     * Set <group_by_node_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGroupByNodeCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <group_by_node_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasGroupByNodeCharacteristicIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <group_by_node_characteristic_id_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGroupByNodeCharacteristicIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <group_by_node_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getGroupByNodeCharacteristicIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <group_by_node_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGroupByNodeCharacteristicIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <only_values_in_one_id> has a value
     *
     * @return boolean
     */
    public function hasOnlyValuesInOneId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <only_values_in_one_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearOnlyValuesInOneId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <only_values_in_one_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyValuesInOneId(){
      return $this->_get(7);
    }
    
    /**
     * Set <only_values_in_one_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setOnlyValuesInOneId(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <only_values_in_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyValuesInOneIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <only_values_in_one_id_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearOnlyValuesInOneIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <only_values_in_one_id_null> value
     *
     * @return boolean
     */
    public function getOnlyValuesInOneIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <only_values_in_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setOnlyValuesInOneIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <weight_views> has a value
     *
     * @return boolean
     */
    public function hasWeightViews(){
      return $this->_has(8);
    }
    
    /**
     * Clear <weight_views> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightViews(){
      return $this->_clear(8);
    }
    
    /**
     * Get <weight_views> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getWeightViews(){
      return $this->_get(8);
    }
    
    /**
     * Set <weight_views> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightViews(\dstore\engine\values\decimalValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <weight_views_null> has a value
     *
     * @return boolean
     */
    public function hasWeightViewsNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <weight_views_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightViewsNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <weight_views_null> value
     *
     * @return boolean
     */
    public function getWeightViewsNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <weight_views_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightViewsNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <weight_buying_interest> has a value
     *
     * @return boolean
     */
    public function hasWeightBuyingInterest(){
      return $this->_has(9);
    }
    
    /**
     * Clear <weight_buying_interest> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightBuyingInterest(){
      return $this->_clear(9);
    }
    
    /**
     * Get <weight_buying_interest> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getWeightBuyingInterest(){
      return $this->_get(9);
    }
    
    /**
     * Set <weight_buying_interest> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightBuyingInterest(\dstore\engine\values\decimalValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <weight_buying_interest_null> has a value
     *
     * @return boolean
     */
    public function hasWeightBuyingInterestNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <weight_buying_interest_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightBuyingInterestNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <weight_buying_interest_null> value
     *
     * @return boolean
     */
    public function getWeightBuyingInterestNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <weight_buying_interest_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightBuyingInterestNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <weight_order> has a value
     *
     * @return boolean
     */
    public function hasWeightOrder(){
      return $this->_has(10);
    }
    
    /**
     * Clear <weight_order> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightOrder(){
      return $this->_clear(10);
    }
    
    /**
     * Get <weight_order> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getWeightOrder(){
      return $this->_get(10);
    }
    
    /**
     * Set <weight_order> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightOrder(\dstore\engine\values\decimalValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <weight_order_null> has a value
     *
     * @return boolean
     */
    public function hasWeightOrderNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <weight_order_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearWeightOrderNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <weight_order_null> value
     *
     * @return boolean
     */
    public function getWeightOrderNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <weight_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setWeightOrderNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <include_deactivated_nodes> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeactivatedNodes(){
      return $this->_has(11);
    }
    
    /**
     * Clear <include_deactivated_nodes> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIncludeDeactivatedNodes(){
      return $this->_clear(11);
    }
    
    /**
     * Get <include_deactivated_nodes> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeDeactivatedNodes(){
      return $this->_get(11);
    }
    
    /**
     * Set <include_deactivated_nodes> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIncludeDeactivatedNodes(\dstore\engine\values\booleanValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <include_deactivated_nodes_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeactivatedNodesNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <include_deactivated_nodes_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIncludeDeactivatedNodesNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <include_deactivated_nodes_null> value
     *
     * @return boolean
     */
    public function getIncludeDeactivatedNodesNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <include_deactivated_nodes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIncludeDeactivatedNodesNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <include_nodes_without_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasIncludeNodesWithoutTreeNodeId(){
      return $this->_has(12);
    }
    
    /**
     * Clear <include_nodes_without_tree_node_id> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIncludeNodesWithoutTreeNodeId(){
      return $this->_clear(12);
    }
    
    /**
     * Get <include_nodes_without_tree_node_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeNodesWithoutTreeNodeId(){
      return $this->_get(12);
    }
    
    /**
     * Set <include_nodes_without_tree_node_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIncludeNodesWithoutTreeNodeId(\dstore\engine\values\booleanValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <include_nodes_without_tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeNodesWithoutTreeNodeIdNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <include_nodes_without_tree_node_id_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearIncludeNodesWithoutTreeNodeIdNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <include_nodes_without_tree_node_id_null> value
     *
     * @return boolean
     */
    public function getIncludeNodesWithoutTreeNodeIdNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <include_nodes_without_tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setIncludeNodesWithoutTreeNodeIdNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <order_result_by_column> has a value
     *
     * @return boolean
     */
    public function hasOrderResultByColumn(){
      return $this->_has(13);
    }
    
    /**
     * Clear <order_result_by_column> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearOrderResultByColumn(){
      return $this->_clear(13);
    }
    
    /**
     * Get <order_result_by_column> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderResultByColumn(){
      return $this->_get(13);
    }
    
    /**
     * Set <order_result_by_column> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setOrderResultByColumn(\dstore\engine\values\integerValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <order_result_by_column_null> has a value
     *
     * @return boolean
     */
    public function hasOrderResultByColumnNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <order_result_by_column_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearOrderResultByColumnNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <order_result_by_column_null> value
     *
     * @return boolean
     */
    public function getOrderResultByColumnNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <order_result_by_column_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setOrderResultByColumnNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <get_top_x> has a value
     *
     * @return boolean
     */
    public function hasGetTopX(){
      return $this->_has(14);
    }
    
    /**
     * Clear <get_top_x> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGetTopX(){
      return $this->_clear(14);
    }
    
    /**
     * Get <get_top_x> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGetTopX(){
      return $this->_get(14);
    }
    
    /**
     * Set <get_top_x> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGetTopX(\dstore\engine\values\integerValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <get_top_x_null> has a value
     *
     * @return boolean
     */
    public function hasGetTopXNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <get_top_x_null> value
     *
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function clearGetTopXNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <get_top_x_null> value
     *
     * @return boolean
     */
    public function getGetTopXNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <get_top_x_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDSS_Index_Frequency_Ad\Parameters
     */
    public function setGetTopXNull( $value){
      return $this->_set(1014, $value);
    }
  }
}

