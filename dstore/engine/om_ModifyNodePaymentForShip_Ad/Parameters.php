<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyNodePaymentForShip_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\om_ModifyNodePaymentForShip_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var boolean */
    public $tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $payment_for_shipping_id = null;
    
    /**  @var boolean */
    public $payment_for_shipping_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $hide_when_ordered_alone = null;
    
    /**  @var boolean */
    public $hide_when_ordered_alone_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $always = null;
    
    /**  @var boolean */
    public $always_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete = null;
    
    /**  @var boolean */
    public $delete_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyNodePaymentForShip_Ad.Parameters');

      // OPTIONAL MESSAGE tree_node_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "payment_for_shipping_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL payment_for_shipping_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "payment_for_shipping_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE hide_when_ordered_alone = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "hide_when_ordered_alone";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL hide_when_ordered_alone_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "hide_when_ordered_alone_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE always = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "always";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL always_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "always_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "delete";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "delete_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearTreeNodeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <tree_node_id_null> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearTreeNodeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <tree_node_id_null> value
     *
     * @return boolean
     */
    public function getTreeNodeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setTreeNodeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <payment_for_shipping_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <payment_for_shipping_id> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearPaymentForShippingId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <payment_for_shipping_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPaymentForShippingId(){
      return $this->_get(2);
    }
    
    /**
     * Set <payment_for_shipping_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setPaymentForShippingId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <payment_for_shipping_id_null> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <payment_for_shipping_id_null> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearPaymentForShippingIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <payment_for_shipping_id_null> value
     *
     * @return boolean
     */
    public function getPaymentForShippingIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <payment_for_shipping_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setPaymentForShippingIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <hide_when_ordered_alone> has a value
     *
     * @return boolean
     */
    public function hasHideWhenOrderedAlone(){
      return $this->_has(3);
    }
    
    /**
     * Clear <hide_when_ordered_alone> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearHideWhenOrderedAlone(){
      return $this->_clear(3);
    }
    
    /**
     * Get <hide_when_ordered_alone> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getHideWhenOrderedAlone(){
      return $this->_get(3);
    }
    
    /**
     * Set <hide_when_ordered_alone> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setHideWhenOrderedAlone(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <hide_when_ordered_alone_null> has a value
     *
     * @return boolean
     */
    public function hasHideWhenOrderedAloneNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <hide_when_ordered_alone_null> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearHideWhenOrderedAloneNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <hide_when_ordered_alone_null> value
     *
     * @return boolean
     */
    public function getHideWhenOrderedAloneNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <hide_when_ordered_alone_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setHideWhenOrderedAloneNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <always> has a value
     *
     * @return boolean
     */
    public function hasAlways(){
      return $this->_has(4);
    }
    
    /**
     * Clear <always> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearAlways(){
      return $this->_clear(4);
    }
    
    /**
     * Get <always> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getAlways(){
      return $this->_get(4);
    }
    
    /**
     * Set <always> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setAlways(\dstore\engine\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <always_null> has a value
     *
     * @return boolean
     */
    public function hasAlwaysNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <always_null> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearAlwaysNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <always_null> value
     *
     * @return boolean
     */
    public function getAlwaysNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <always_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setAlwaysNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <delete> has a value
     *
     * @return boolean
     */
    public function hasDelete(){
      return $this->_has(5);
    }
    
    /**
     * Clear <delete> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearDelete(){
      return $this->_clear(5);
    }
    
    /**
     * Get <delete> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDelete(){
      return $this->_get(5);
    }
    
    /**
     * Set <delete> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setDelete(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <delete_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <delete_null> value
     *
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function clearDeleteNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <delete_null> value
     *
     * @return boolean
     */
    public function getDeleteNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <delete_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyNodePaymentForShip_Ad\Parameters
     */
    public function setDeleteNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

