<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetLevels_Pu.proto
//   Date: 2015-10-06 11:19:47

namespace dstore\engine\im_GetLevels_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $level = null;
    
    /**  @var boolean */
    public $level_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_id = null;
    
    /**  @var boolean */
    public $is_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $order_by_level_no = null;
    
    /**  @var boolean */
    public $order_by_level_no_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetLevels_Pu.Parameters');

      // OPTIONAL MESSAGE level = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "is_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL is_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "is_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_by_level_no = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "order_by_level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_level_no_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "order_by_level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <level> has a value
     *
     * @return boolean
     */
    public function hasLevel(){
      return $this->_has(1);
    }
    
    /**
     * Clear <level> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearLevel(){
      return $this->_clear(1);
    }
    
    /**
     * Get <level> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLevel(){
      return $this->_get(1);
    }
    
    /**
     * Set <level> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setLevel(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <level_null> has a value
     *
     * @return boolean
     */
    public function hasLevelNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <level_null> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearLevelNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <level_null> value
     *
     * @return boolean
     */
    public function getLevelNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setLevelNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <is_id> has a value
     *
     * @return boolean
     */
    public function hasIsId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <is_id> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearIsId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <is_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsId(){
      return $this->_get(2);
    }
    
    /**
     * Set <is_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setIsId(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <is_id_null> has a value
     *
     * @return boolean
     */
    public function hasIsIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <is_id_null> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearIsIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <is_id_null> value
     *
     * @return boolean
     */
    public function getIsIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <is_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setIsIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <order_by_level_no> has a value
     *
     * @return boolean
     */
    public function hasOrderByLevelNo(){
      return $this->_has(3);
    }
    
    /**
     * Clear <order_by_level_no> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearOrderByLevelNo(){
      return $this->_clear(3);
    }
    
    /**
     * Get <order_by_level_no> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOrderByLevelNo(){
      return $this->_get(3);
    }
    
    /**
     * Set <order_by_level_no> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setOrderByLevelNo(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <order_by_level_no_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByLevelNoNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <order_by_level_no_null> value
     *
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function clearOrderByLevelNoNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <order_by_level_no_null> value
     *
     * @return boolean
     */
    public function getOrderByLevelNoNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <order_by_level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetLevels_Pu\Parameters
     */
    public function setOrderByLevelNoNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

