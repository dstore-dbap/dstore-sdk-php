<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_SortTreeNodes_Pu.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\im_SortTreeNodes_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $sort_by_characteristic_id_list = null;
    
    /**  @var boolean */
    public $sort_by_characteristic_id_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $sort_option_list = null;
    
    /**  @var boolean */
    public $sort_option_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $inherit_depth_option_list = null;
    
    /**  @var boolean */
    public $inherit_depth_option_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $recursive_evaluation_option_list = null;
    
    /**  @var boolean */
    public $recursive_evaluation_option_list_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $binary_characteristic_value_id = null;
    
    /**  @var boolean */
    public $binary_characteristic_value_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_values_for_sort_by_characs = null;
    
    /**  @var boolean */
    public $get_values_for_sort_by_characs_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_SortTreeNodes_Pu.Parameters');

      // OPTIONAL MESSAGE sort_by_characteristic_id_list = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "sort_by_characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_by_characteristic_id_list_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "sort_by_characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_option_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sort_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_option_list_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "sort_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth_option_list = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "inherit_depth_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL inherit_depth_option_list_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "inherit_depth_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation_option_list = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "recursive_evaluation_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL recursive_evaluation_option_list_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "recursive_evaluation_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_characteristic_value_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "binary_characteristic_value_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL binary_characteristic_value_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "binary_characteristic_value_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_values_for_sort_by_characs = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "get_values_for_sort_by_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_values_for_sort_by_characs_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "get_values_for_sort_by_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <sort_by_characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdList(){
      return $this->_has(1);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearSortByCharacteristicIdList(){
      return $this->_clear(1);
    }
    
    /**
     * Get <sort_by_characteristic_id_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSortByCharacteristicIdList(){
      return $this->_get(1);
    }
    
    /**
     * Set <sort_by_characteristic_id_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setSortByCharacteristicIdList(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sort_by_characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdListNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearSortByCharacteristicIdListNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <sort_by_characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getSortByCharacteristicIdListNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <sort_by_characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setSortByCharacteristicIdListNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <sort_option_list> has a value
     *
     * @return boolean
     */
    public function hasSortOptionList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sort_option_list> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearSortOptionList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sort_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSortOptionList(){
      return $this->_get(2);
    }
    
    /**
     * Set <sort_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setSortOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <sort_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortOptionListNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <sort_option_list_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearSortOptionListNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <sort_option_list_null> value
     *
     * @return boolean
     */
    public function getSortOptionListNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <sort_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setSortOptionListNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionList(){
      return $this->_has(3);
    }
    
    /**
     * Clear <inherit_depth_option_list> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearInheritDepthOptionList(){
      return $this->_clear(3);
    }
    
    /**
     * Get <inherit_depth_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getInheritDepthOptionList(){
      return $this->_get(3);
    }
    
    /**
     * Set <inherit_depth_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setInheritDepthOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionListNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <inherit_depth_option_list_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearInheritDepthOptionListNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <inherit_depth_option_list_null> value
     *
     * @return boolean
     */
    public function getInheritDepthOptionListNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <inherit_depth_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setInheritDepthOptionListNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionList(){
      return $this->_has(4);
    }
    
    /**
     * Clear <recursive_evaluation_option_list> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionList(){
      return $this->_clear(4);
    }
    
    /**
     * Get <recursive_evaluation_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getRecursiveEvaluationOptionList(){
      return $this->_get(4);
    }
    
    /**
     * Set <recursive_evaluation_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionListNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <recursive_evaluation_option_list_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionListNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <recursive_evaluation_option_list_null> value
     *
     * @return boolean
     */
    public function getRecursiveEvaluationOptionListNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <recursive_evaluation_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionListNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <binary_characteristic_value_id> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <binary_characteristic_value_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBinaryCharacteristicValueId(){
      return $this->_get(5);
    }
    
    /**
     * Set <binary_characteristic_value_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setBinaryCharacteristicValueId(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id_null> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <binary_characteristic_value_id_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <binary_characteristic_value_id_null> value
     *
     * @return boolean
     */
    public function getBinaryCharacteristicValueIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <binary_characteristic_value_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setBinaryCharacteristicValueIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacs(){
      return $this->_has(6);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacs(){
      return $this->_clear(6);
    }
    
    /**
     * Get <get_values_for_sort_by_characs> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetValuesForSortByCharacs(){
      return $this->_get(6);
    }
    
    /**
     * Set <get_values_for_sort_by_characs> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setGetValuesForSortByCharacs(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs_null> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacsNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs_null> value
     *
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacsNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <get_values_for_sort_by_characs_null> value
     *
     * @return boolean
     */
    public function getGetValuesForSortByCharacsNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <get_values_for_sort_by_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SortTreeNodes_Pu\Parameters
     */
    public function setGetValuesForSortByCharacsNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

