<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_ModifyRelationships_Ad.proto
//   Date: 2016-05-19 08:07:56

namespace dstore\engine\pm_ModifyRelationships_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $relationship_id = null;
    
    /**  @var boolean */
    public $relationship_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $relationship = null;
    
    /**  @var boolean */
    public $relationship_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $delete_relationship = null;
    
    /**  @var boolean */
    public $delete_relationship_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_ModifyRelationships_Ad.Parameters');

      // OPTIONAL MESSAGE relationship_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "relationship_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL relationship_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "relationship_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE relationship = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "relationship";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL relationship_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "relationship_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_relationship = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "delete_relationship";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_relationship_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "delete_relationship_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <relationship_id> has a value
     *
     * @return boolean
     */
    public function hasRelationshipId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <relationship_id> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearRelationshipId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <relationship_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRelationshipId(){
      return $this->_get(1);
    }
    
    /**
     * Set <relationship_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setRelationshipId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <relationship_id_null> has a value
     *
     * @return boolean
     */
    public function hasRelationshipIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <relationship_id_null> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearRelationshipIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <relationship_id_null> value
     *
     * @return boolean
     */
    public function getRelationshipIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <relationship_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setRelationshipIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <relationship> has a value
     *
     * @return boolean
     */
    public function hasRelationship(){
      return $this->_has(2);
    }
    
    /**
     * Clear <relationship> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearRelationship(){
      return $this->_clear(2);
    }
    
    /**
     * Get <relationship> value
     *
     * @return \dstore\values\stringValue
     */
    public function getRelationship(){
      return $this->_get(2);
    }
    
    /**
     * Set <relationship> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setRelationship(\dstore\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <relationship_null> has a value
     *
     * @return boolean
     */
    public function hasRelationshipNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <relationship_null> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearRelationshipNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <relationship_null> value
     *
     * @return boolean
     */
    public function getRelationshipNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <relationship_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setRelationshipNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <delete_relationship> has a value
     *
     * @return boolean
     */
    public function hasDeleteRelationship(){
      return $this->_has(3);
    }
    
    /**
     * Clear <delete_relationship> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearDeleteRelationship(){
      return $this->_clear(3);
    }
    
    /**
     * Get <delete_relationship> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDeleteRelationship(){
      return $this->_get(3);
    }
    
    /**
     * Set <delete_relationship> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setDeleteRelationship(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <delete_relationship_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteRelationshipNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <delete_relationship_null> value
     *
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function clearDeleteRelationshipNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <delete_relationship_null> value
     *
     * @return boolean
     */
    public function getDeleteRelationshipNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <delete_relationship_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ModifyRelationships_Ad\Parameters
     */
    public function setDeleteRelationshipNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

