<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_SearchOrderNo_Ad.proto
//   Date: 2016-05-19 08:07:53

namespace dstore\engine\om_SearchOrderNo_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $order_no = null;
    
    /**  @var boolean */
    public $order_no_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $max_possible_orders_per_order_no = null;
    
    /**  @var boolean */
    public $max_possible_orders_per_order_no_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $show_person_characteristics = null;
    
    /**  @var boolean */
    public $show_person_characteristics_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $date_and_time_format = null;
    
    /**  @var boolean */
    public $date_and_time_format_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_time = null;
    
    /**  @var boolean */
    public $include_time_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_item_no = null;
    
    /**  @var boolean */
    public $include_item_no_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $node_characteristic_id = null;
    
    /**  @var boolean */
    public $node_characteristic_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $purchase_order = null;
    
    /**  @var boolean */
    public $purchase_order_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_SearchOrderNo_Ad.Parameters');

      // OPTIONAL MESSAGE order_no = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "order_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_no_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "order_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_possible_orders_per_order_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "max_possible_orders_per_order_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_possible_orders_per_order_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "max_possible_orders_per_order_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE show_person_characteristics = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "show_person_characteristics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL show_person_characteristics_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "show_person_characteristics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date_and_time_format = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "date_and_time_format";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_and_time_format_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "date_and_time_format_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_time = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "include_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_time_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "include_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_item_no = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "include_item_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_item_no_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "include_item_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_id_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "node_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE purchase_order = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "purchase_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL purchase_order_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "purchase_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <order_no> has a value
     *
     * @return boolean
     */
    public function hasOrderNo(){
      return $this->_has(1);
    }
    
    /**
     * Clear <order_no> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearOrderNo(){
      return $this->_clear(1);
    }
    
    /**
     * Get <order_no> value
     *
     * @return \dstore\values\stringValue
     */
    public function getOrderNo(){
      return $this->_get(1);
    }
    
    /**
     * Set <order_no> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setOrderNo(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <order_no_null> has a value
     *
     * @return boolean
     */
    public function hasOrderNoNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <order_no_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearOrderNoNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <order_no_null> value
     *
     * @return boolean
     */
    public function getOrderNoNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <order_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setOrderNoNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <max_possible_orders_per_order_no> has a value
     *
     * @return boolean
     */
    public function hasMaxPossibleOrdersPerOrderNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <max_possible_orders_per_order_no> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearMaxPossibleOrdersPerOrderNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <max_possible_orders_per_order_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getMaxPossibleOrdersPerOrderNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <max_possible_orders_per_order_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setMaxPossibleOrdersPerOrderNo(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <max_possible_orders_per_order_no_null> has a value
     *
     * @return boolean
     */
    public function hasMaxPossibleOrdersPerOrderNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <max_possible_orders_per_order_no_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearMaxPossibleOrdersPerOrderNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <max_possible_orders_per_order_no_null> value
     *
     * @return boolean
     */
    public function getMaxPossibleOrdersPerOrderNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <max_possible_orders_per_order_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setMaxPossibleOrdersPerOrderNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setFromDate(\dstore\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <show_person_characteristics> has a value
     *
     * @return boolean
     */
    public function hasShowPersonCharacteristics(){
      return $this->_has(4);
    }
    
    /**
     * Clear <show_person_characteristics> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearShowPersonCharacteristics(){
      return $this->_clear(4);
    }
    
    /**
     * Get <show_person_characteristics> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getShowPersonCharacteristics(){
      return $this->_get(4);
    }
    
    /**
     * Set <show_person_characteristics> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setShowPersonCharacteristics(\dstore\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <show_person_characteristics_null> has a value
     *
     * @return boolean
     */
    public function hasShowPersonCharacteristicsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <show_person_characteristics_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearShowPersonCharacteristicsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <show_person_characteristics_null> value
     *
     * @return boolean
     */
    public function getShowPersonCharacteristicsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <show_person_characteristics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setShowPersonCharacteristicsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <date_and_time_format> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormat(){
      return $this->_has(5);
    }
    
    /**
     * Clear <date_and_time_format> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearDateAndTimeFormat(){
      return $this->_clear(5);
    }
    
    /**
     * Get <date_and_time_format> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDateAndTimeFormat(){
      return $this->_get(5);
    }
    
    /**
     * Set <date_and_time_format> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setDateAndTimeFormat(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <date_and_time_format_null> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormatNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <date_and_time_format_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearDateAndTimeFormatNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <date_and_time_format_null> value
     *
     * @return boolean
     */
    public function getDateAndTimeFormatNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <date_and_time_format_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setDateAndTimeFormatNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <include_time> has a value
     *
     * @return boolean
     */
    public function hasIncludeTime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <include_time> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearIncludeTime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <include_time> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeTime(){
      return $this->_get(6);
    }
    
    /**
     * Set <include_time> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setIncludeTime(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <include_time_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeTimeNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <include_time_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearIncludeTimeNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <include_time_null> value
     *
     * @return boolean
     */
    public function getIncludeTimeNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <include_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setIncludeTimeNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <include_item_no> has a value
     *
     * @return boolean
     */
    public function hasIncludeItemNo(){
      return $this->_has(7);
    }
    
    /**
     * Clear <include_item_no> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearIncludeItemNo(){
      return $this->_clear(7);
    }
    
    /**
     * Get <include_item_no> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeItemNo(){
      return $this->_get(7);
    }
    
    /**
     * Set <include_item_no> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setIncludeItemNo(\dstore\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <include_item_no_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeItemNoNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <include_item_no_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearIncludeItemNoNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <include_item_no_null> value
     *
     * @return boolean
     */
    public function getIncludeItemNoNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <include_item_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setIncludeItemNoNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId(){
      return $this->_has(8);
    }
    
    /**
     * Clear <node_characteristic_id> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearNodeCharacteristicId(){
      return $this->_clear(8);
    }
    
    /**
     * Get <node_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getNodeCharacteristicId(){
      return $this->_get(8);
    }
    
    /**
     * Set <node_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setNodeCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <node_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicIdNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <node_characteristic_id_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearNodeCharacteristicIdNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <node_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicIdNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <node_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setNodeCharacteristicIdNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <purchase_order> has a value
     *
     * @return boolean
     */
    public function hasPurchaseOrder(){
      return $this->_has(9);
    }
    
    /**
     * Clear <purchase_order> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearPurchaseOrder(){
      return $this->_clear(9);
    }
    
    /**
     * Get <purchase_order> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getPurchaseOrder(){
      return $this->_get(9);
    }
    
    /**
     * Set <purchase_order> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setPurchaseOrder(\dstore\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <purchase_order_null> has a value
     *
     * @return boolean
     */
    public function hasPurchaseOrderNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <purchase_order_null> value
     *
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function clearPurchaseOrderNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <purchase_order_null> value
     *
     * @return boolean
     */
    public function getPurchaseOrderNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <purchase_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_SearchOrderNo_Ad\Parameters
     */
    public function setPurchaseOrderNull( $value){
      return $this->_set(1009, $value);
    }
  }
}

