<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_DeleteInterfaceTables_Ad.proto
//   Date: 2015-10-06 11:19:46

namespace dstore\engine\im_DeleteInterfaceTables_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $interfaces_for_binaries = null;
    
    /**  @var boolean */
    public $interfaces_for_binaries_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $create_import_table = null;
    
    /**  @var boolean */
    public $create_import_table_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_DeleteInterfaceTables_Ad.Parameters');

      // OPTIONAL MESSAGE interfaces_for_binaries = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "interfaces_for_binaries";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL interfaces_for_binaries_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "interfaces_for_binaries_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE create_import_table = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "create_import_table";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL create_import_table_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "create_import_table_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <interfaces_for_binaries> has a value
     *
     * @return boolean
     */
    public function hasInterfacesForBinaries(){
      return $this->_has(1);
    }
    
    /**
     * Clear <interfaces_for_binaries> value
     *
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function clearInterfacesForBinaries(){
      return $this->_clear(1);
    }
    
    /**
     * Get <interfaces_for_binaries> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getInterfacesForBinaries(){
      return $this->_get(1);
    }
    
    /**
     * Set <interfaces_for_binaries> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function setInterfacesForBinaries(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <interfaces_for_binaries_null> has a value
     *
     * @return boolean
     */
    public function hasInterfacesForBinariesNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <interfaces_for_binaries_null> value
     *
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function clearInterfacesForBinariesNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <interfaces_for_binaries_null> value
     *
     * @return boolean
     */
    public function getInterfacesForBinariesNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <interfaces_for_binaries_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function setInterfacesForBinariesNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <create_import_table> has a value
     *
     * @return boolean
     */
    public function hasCreateImportTable(){
      return $this->_has(2);
    }
    
    /**
     * Clear <create_import_table> value
     *
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function clearCreateImportTable(){
      return $this->_clear(2);
    }
    
    /**
     * Get <create_import_table> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getCreateImportTable(){
      return $this->_get(2);
    }
    
    /**
     * Set <create_import_table> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function setCreateImportTable(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <create_import_table_null> has a value
     *
     * @return boolean
     */
    public function hasCreateImportTableNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <create_import_table_null> value
     *
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function clearCreateImportTableNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <create_import_table_null> value
     *
     * @return boolean
     */
    public function getCreateImportTableNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <create_import_table_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_DeleteInterfaceTables_Ad\Parameters
     */
    public function setCreateImportTableNull( $value){
      return $this->_set(1002, $value);
    }
  }
}

