<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetNumberOfNodes_Ad.proto
//   Date: 2016-05-19 08:07:42

namespace dstore\engine\im_GetNumberOfNodes_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $include_deleted = null;
    
    /**  @var boolean */
    public $include_deleted_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_de_activated = null;
    
    /**  @var boolean */
    public $include_de_activated_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $only_item_nodes = null;
    
    /**  @var boolean */
    public $only_item_nodes_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetNumberOfNodes_Ad.Parameters');

      // OPTIONAL MESSAGE include_deleted = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "include_deleted";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_deleted_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "include_deleted_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_de_activated = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "include_de_activated";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_de_activated_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "include_de_activated_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_item_nodes = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "only_item_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_item_nodes_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "only_item_nodes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <include_deleted> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeleted(){
      return $this->_has(1);
    }
    
    /**
     * Clear <include_deleted> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearIncludeDeleted(){
      return $this->_clear(1);
    }
    
    /**
     * Get <include_deleted> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeDeleted(){
      return $this->_get(1);
    }
    
    /**
     * Set <include_deleted> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setIncludeDeleted(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <include_deleted_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeletedNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <include_deleted_null> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearIncludeDeletedNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <include_deleted_null> value
     *
     * @return boolean
     */
    public function getIncludeDeletedNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <include_deleted_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setIncludeDeletedNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <include_de_activated> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeActivated(){
      return $this->_has(2);
    }
    
    /**
     * Clear <include_de_activated> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearIncludeDeActivated(){
      return $this->_clear(2);
    }
    
    /**
     * Get <include_de_activated> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeDeActivated(){
      return $this->_get(2);
    }
    
    /**
     * Set <include_de_activated> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setIncludeDeActivated(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <include_de_activated_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeDeActivatedNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <include_de_activated_null> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearIncludeDeActivatedNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <include_de_activated_null> value
     *
     * @return boolean
     */
    public function getIncludeDeActivatedNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <include_de_activated_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setIncludeDeActivatedNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <only_item_nodes> has a value
     *
     * @return boolean
     */
    public function hasOnlyItemNodes(){
      return $this->_has(3);
    }
    
    /**
     * Clear <only_item_nodes> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearOnlyItemNodes(){
      return $this->_clear(3);
    }
    
    /**
     * Get <only_item_nodes> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOnlyItemNodes(){
      return $this->_get(3);
    }
    
    /**
     * Set <only_item_nodes> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setOnlyItemNodes(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <only_item_nodes_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyItemNodesNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <only_item_nodes_null> value
     *
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function clearOnlyItemNodesNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <only_item_nodes_null> value
     *
     * @return boolean
     */
    public function getOnlyItemNodesNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <only_item_nodes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNumberOfNodes_Ad\Parameters
     */
    public function setOnlyItemNodesNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

