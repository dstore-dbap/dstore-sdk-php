<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_ImportItemData_Ad.proto
//   Date: 2016-05-19 08:07:43

namespace dstore\engine\im_ImportItemData_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $log_errors = null;
    
    /**  @var boolean */
    public $log_errors_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $update_sort_no = null;
    
    /**  @var boolean */
    public $update_sort_no_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $check_text_and_bit_characs = null;
    
    /**  @var boolean */
    public $check_text_and_bit_characs_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $check_except_text_and_bit_characs = null;
    
    /**  @var boolean */
    public $check_except_text_and_bit_characs_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $performance_tuning = null;
    
    /**  @var boolean */
    public $performance_tuning_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $activate_imported_items = null;
    
    /**  @var boolean */
    public $activate_imported_items_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $handle_existing_item_not_imported = null;
    
    /**  @var boolean */
    public $handle_existing_item_not_imported_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $dump_transaction = null;
    
    /**  @var boolean */
    public $dump_transaction_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $empty_string_to_delete_details = null;
    
    /**  @var boolean */
    public $empty_string_to_delete_details_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $empty_string_to_delete_property = null;
    
    /**  @var boolean */
    public $empty_string_to_delete_property_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $import_from_table_name = null;
    
    /**  @var boolean */
    public $import_from_table_name_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $debug_mode = null;
    
    /**  @var boolean */
    public $debug_mode_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_ImportItemData_Ad.Parameters');

      // OPTIONAL MESSAGE log_errors = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "log_errors";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL log_errors_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "log_errors_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_sort_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "update_sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL update_sort_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "update_sort_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE check_text_and_bit_characs = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "check_text_and_bit_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL check_text_and_bit_characs_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "check_text_and_bit_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE check_except_text_and_bit_characs = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "check_except_text_and_bit_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL check_except_text_and_bit_characs_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "check_except_text_and_bit_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE performance_tuning = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "performance_tuning";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL performance_tuning_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "performance_tuning_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE activate_imported_items = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "activate_imported_items";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL activate_imported_items_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "activate_imported_items_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE handle_existing_item_not_imported = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "handle_existing_item_not_imported";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL handle_existing_item_not_imported_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "handle_existing_item_not_imported_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE dump_transaction = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "dump_transaction";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL dump_transaction_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "dump_transaction_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE empty_string_to_delete_details = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "empty_string_to_delete_details";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL empty_string_to_delete_details_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "empty_string_to_delete_details_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE empty_string_to_delete_property = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "empty_string_to_delete_property";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL empty_string_to_delete_property_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "empty_string_to_delete_property_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE import_from_table_name = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "import_from_table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL import_from_table_name_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "import_from_table_name_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE debug_mode = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "debug_mode";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL debug_mode_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "debug_mode_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <log_errors> has a value
     *
     * @return boolean
     */
    public function hasLogErrors(){
      return $this->_has(1);
    }
    
    /**
     * Clear <log_errors> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearLogErrors(){
      return $this->_clear(1);
    }
    
    /**
     * Get <log_errors> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getLogErrors(){
      return $this->_get(1);
    }
    
    /**
     * Set <log_errors> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setLogErrors(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <log_errors_null> has a value
     *
     * @return boolean
     */
    public function hasLogErrorsNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <log_errors_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearLogErrorsNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <log_errors_null> value
     *
     * @return boolean
     */
    public function getLogErrorsNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <log_errors_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setLogErrorsNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <update_sort_no> has a value
     *
     * @return boolean
     */
    public function hasUpdateSortNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <update_sort_no> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearUpdateSortNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <update_sort_no> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getUpdateSortNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <update_sort_no> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setUpdateSortNo(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <update_sort_no_null> has a value
     *
     * @return boolean
     */
    public function hasUpdateSortNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <update_sort_no_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearUpdateSortNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <update_sort_no_null> value
     *
     * @return boolean
     */
    public function getUpdateSortNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <update_sort_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setUpdateSortNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <check_text_and_bit_characs> has a value
     *
     * @return boolean
     */
    public function hasCheckTextAndBitCharacs(){
      return $this->_has(3);
    }
    
    /**
     * Clear <check_text_and_bit_characs> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCheckTextAndBitCharacs(){
      return $this->_clear(3);
    }
    
    /**
     * Get <check_text_and_bit_characs> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCheckTextAndBitCharacs(){
      return $this->_get(3);
    }
    
    /**
     * Set <check_text_and_bit_characs> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCheckTextAndBitCharacs(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <check_text_and_bit_characs_null> has a value
     *
     * @return boolean
     */
    public function hasCheckTextAndBitCharacsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <check_text_and_bit_characs_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCheckTextAndBitCharacsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <check_text_and_bit_characs_null> value
     *
     * @return boolean
     */
    public function getCheckTextAndBitCharacsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <check_text_and_bit_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCheckTextAndBitCharacsNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <check_except_text_and_bit_characs> has a value
     *
     * @return boolean
     */
    public function hasCheckExceptTextAndBitCharacs(){
      return $this->_has(4);
    }
    
    /**
     * Clear <check_except_text_and_bit_characs> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCheckExceptTextAndBitCharacs(){
      return $this->_clear(4);
    }
    
    /**
     * Get <check_except_text_and_bit_characs> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCheckExceptTextAndBitCharacs(){
      return $this->_get(4);
    }
    
    /**
     * Set <check_except_text_and_bit_characs> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCheckExceptTextAndBitCharacs(\dstore\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <check_except_text_and_bit_characs_null> has a value
     *
     * @return boolean
     */
    public function hasCheckExceptTextAndBitCharacsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <check_except_text_and_bit_characs_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCheckExceptTextAndBitCharacsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <check_except_text_and_bit_characs_null> value
     *
     * @return boolean
     */
    public function getCheckExceptTextAndBitCharacsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <check_except_text_and_bit_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCheckExceptTextAndBitCharacsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <performance_tuning> has a value
     *
     * @return boolean
     */
    public function hasPerformanceTuning(){
      return $this->_has(5);
    }
    
    /**
     * Clear <performance_tuning> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearPerformanceTuning(){
      return $this->_clear(5);
    }
    
    /**
     * Get <performance_tuning> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPerformanceTuning(){
      return $this->_get(5);
    }
    
    /**
     * Set <performance_tuning> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setPerformanceTuning(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <performance_tuning_null> has a value
     *
     * @return boolean
     */
    public function hasPerformanceTuningNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <performance_tuning_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearPerformanceTuningNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <performance_tuning_null> value
     *
     * @return boolean
     */
    public function getPerformanceTuningNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <performance_tuning_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setPerformanceTuningNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <activate_imported_items> has a value
     *
     * @return boolean
     */
    public function hasActivateImportedItems(){
      return $this->_has(6);
    }
    
    /**
     * Clear <activate_imported_items> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearActivateImportedItems(){
      return $this->_clear(6);
    }
    
    /**
     * Get <activate_imported_items> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getActivateImportedItems(){
      return $this->_get(6);
    }
    
    /**
     * Set <activate_imported_items> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setActivateImportedItems(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <activate_imported_items_null> has a value
     *
     * @return boolean
     */
    public function hasActivateImportedItemsNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <activate_imported_items_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearActivateImportedItemsNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <activate_imported_items_null> value
     *
     * @return boolean
     */
    public function getActivateImportedItemsNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <activate_imported_items_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setActivateImportedItemsNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <handle_existing_item_not_imported> has a value
     *
     * @return boolean
     */
    public function hasHandleExistingItemNotImported(){
      return $this->_has(7);
    }
    
    /**
     * Clear <handle_existing_item_not_imported> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearHandleExistingItemNotImported(){
      return $this->_clear(7);
    }
    
    /**
     * Get <handle_existing_item_not_imported> value
     *
     * @return \dstore\values\integerValue
     */
    public function getHandleExistingItemNotImported(){
      return $this->_get(7);
    }
    
    /**
     * Set <handle_existing_item_not_imported> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setHandleExistingItemNotImported(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <handle_existing_item_not_imported_null> has a value
     *
     * @return boolean
     */
    public function hasHandleExistingItemNotImportedNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <handle_existing_item_not_imported_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearHandleExistingItemNotImportedNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <handle_existing_item_not_imported_null> value
     *
     * @return boolean
     */
    public function getHandleExistingItemNotImportedNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <handle_existing_item_not_imported_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setHandleExistingItemNotImportedNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <dump_transaction> has a value
     *
     * @return boolean
     */
    public function hasDumpTransaction(){
      return $this->_has(8);
    }
    
    /**
     * Clear <dump_transaction> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearDumpTransaction(){
      return $this->_clear(8);
    }
    
    /**
     * Get <dump_transaction> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDumpTransaction(){
      return $this->_get(8);
    }
    
    /**
     * Set <dump_transaction> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setDumpTransaction(\dstore\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <dump_transaction_null> has a value
     *
     * @return boolean
     */
    public function hasDumpTransactionNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <dump_transaction_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearDumpTransactionNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <dump_transaction_null> value
     *
     * @return boolean
     */
    public function getDumpTransactionNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <dump_transaction_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setDumpTransactionNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(9);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(9);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(9);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_details> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeleteDetails(){
      return $this->_has(10);
    }
    
    /**
     * Clear <empty_string_to_delete_details> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearEmptyStringToDeleteDetails(){
      return $this->_clear(10);
    }
    
    /**
     * Get <empty_string_to_delete_details> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getEmptyStringToDeleteDetails(){
      return $this->_get(10);
    }
    
    /**
     * Set <empty_string_to_delete_details> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setEmptyStringToDeleteDetails(\dstore\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_details_null> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeleteDetailsNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <empty_string_to_delete_details_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearEmptyStringToDeleteDetailsNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <empty_string_to_delete_details_null> value
     *
     * @return boolean
     */
    public function getEmptyStringToDeleteDetailsNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <empty_string_to_delete_details_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setEmptyStringToDeleteDetailsNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_property> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeleteProperty(){
      return $this->_has(11);
    }
    
    /**
     * Clear <empty_string_to_delete_property> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearEmptyStringToDeleteProperty(){
      return $this->_clear(11);
    }
    
    /**
     * Get <empty_string_to_delete_property> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getEmptyStringToDeleteProperty(){
      return $this->_get(11);
    }
    
    /**
     * Set <empty_string_to_delete_property> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setEmptyStringToDeleteProperty(\dstore\values\booleanValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_property_null> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeletePropertyNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <empty_string_to_delete_property_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearEmptyStringToDeletePropertyNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <empty_string_to_delete_property_null> value
     *
     * @return boolean
     */
    public function getEmptyStringToDeletePropertyNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <empty_string_to_delete_property_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setEmptyStringToDeletePropertyNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <import_from_table_name> has a value
     *
     * @return boolean
     */
    public function hasImportFromTableName(){
      return $this->_has(12);
    }
    
    /**
     * Clear <import_from_table_name> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearImportFromTableName(){
      return $this->_clear(12);
    }
    
    /**
     * Get <import_from_table_name> value
     *
     * @return \dstore\values\stringValue
     */
    public function getImportFromTableName(){
      return $this->_get(12);
    }
    
    /**
     * Set <import_from_table_name> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setImportFromTableName(\dstore\values\stringValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <import_from_table_name_null> has a value
     *
     * @return boolean
     */
    public function hasImportFromTableNameNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <import_from_table_name_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearImportFromTableNameNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <import_from_table_name_null> value
     *
     * @return boolean
     */
    public function getImportFromTableNameNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <import_from_table_name_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setImportFromTableNameNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <debug_mode> has a value
     *
     * @return boolean
     */
    public function hasDebugMode(){
      return $this->_has(13);
    }
    
    /**
     * Clear <debug_mode> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearDebugMode(){
      return $this->_clear(13);
    }
    
    /**
     * Get <debug_mode> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDebugMode(){
      return $this->_get(13);
    }
    
    /**
     * Set <debug_mode> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setDebugMode(\dstore\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <debug_mode_null> has a value
     *
     * @return boolean
     */
    public function hasDebugModeNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <debug_mode_null> value
     *
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function clearDebugModeNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <debug_mode_null> value
     *
     * @return boolean
     */
    public function getDebugModeNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <debug_mode_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ImportItemData_Ad\Parameters
     */
    public function setDebugModeNull( $value){
      return $this->_set(1013, $value);
    }
  }
}

