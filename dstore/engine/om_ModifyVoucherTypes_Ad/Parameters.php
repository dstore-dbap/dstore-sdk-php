<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyVoucherTypes_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\om_ModifyVoucherTypes_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $description = null;
    
    /**  @var boolean */
    public $description_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $v_code_origin_type_id = null;
    
    /**  @var boolean */
    public $v_code_origin_type_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $generation_pattern = null;
    
    /**  @var boolean */
    public $generation_pattern_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $benefit_type_id = null;
    
    /**  @var boolean */
    public $benefit_type_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $valid_for_x_days = null;
    
    /**  @var boolean */
    public $valid_for_x_days_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $default_valid_until = null;
    
    /**  @var boolean */
    public $default_valid_until_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $code_status = null;
    
    /**  @var boolean */
    public $code_status_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $x_times_usable = null;
    
    /**  @var boolean */
    public $x_times_usable_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $x_times_usable_per_person = null;
    
    /**  @var boolean */
    public $x_times_usable_per_person_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_voucher_type = null;
    
    /**  @var boolean */
    public $delete_voucher_type_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyVoucherTypes_Ad.Parameters');

      // OPTIONAL MESSAGE description = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL description_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE v_code_origin_type_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "v_code_origin_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL v_code_origin_type_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "v_code_origin_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE generation_pattern = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "generation_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL generation_pattern_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "generation_pattern_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_type_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "benefit_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL benefit_type_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "benefit_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE valid_for_x_days = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "valid_for_x_days";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL valid_for_x_days_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "valid_for_x_days_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_valid_until = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "default_valid_until";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL default_valid_until_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "default_valid_until_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE code_status = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "code_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL code_status_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "code_status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_times_usable = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "x_times_usable";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL x_times_usable_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "x_times_usable_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_times_usable_per_person = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "x_times_usable_per_person";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL x_times_usable_per_person_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "x_times_usable_per_person_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_voucher_type = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "delete_voucher_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_voucher_type_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "delete_voucher_type_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDescription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDescription(){
      return $this->_get(1);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <description_null> has a value
     *
     * @return boolean
     */
    public function hasDescriptionNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <description_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDescriptionNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <description_null> value
     *
     * @return boolean
     */
    public function getDescriptionNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDescriptionNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <v_code_origin_type_id> has a value
     *
     * @return boolean
     */
    public function hasVCodeOriginTypeId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <v_code_origin_type_id> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearVCodeOriginTypeId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <v_code_origin_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVCodeOriginTypeId(){
      return $this->_get(2);
    }
    
    /**
     * Set <v_code_origin_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setVCodeOriginTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <v_code_origin_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasVCodeOriginTypeIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <v_code_origin_type_id_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearVCodeOriginTypeIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <v_code_origin_type_id_null> value
     *
     * @return boolean
     */
    public function getVCodeOriginTypeIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <v_code_origin_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setVCodeOriginTypeIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <generation_pattern> has a value
     *
     * @return boolean
     */
    public function hasGenerationPattern(){
      return $this->_has(3);
    }
    
    /**
     * Clear <generation_pattern> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearGenerationPattern(){
      return $this->_clear(3);
    }
    
    /**
     * Get <generation_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getGenerationPattern(){
      return $this->_get(3);
    }
    
    /**
     * Set <generation_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setGenerationPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <generation_pattern_null> has a value
     *
     * @return boolean
     */
    public function hasGenerationPatternNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <generation_pattern_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearGenerationPatternNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <generation_pattern_null> value
     *
     * @return boolean
     */
    public function getGenerationPatternNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <generation_pattern_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setGenerationPatternNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <benefit_type_id> has a value
     *
     * @return boolean
     */
    public function hasBenefitTypeId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <benefit_type_id> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearBenefitTypeId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <benefit_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBenefitTypeId(){
      return $this->_get(4);
    }
    
    /**
     * Set <benefit_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setBenefitTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <benefit_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasBenefitTypeIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <benefit_type_id_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearBenefitTypeIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <benefit_type_id_null> value
     *
     * @return boolean
     */
    public function getBenefitTypeIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <benefit_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setBenefitTypeIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <valid_for_x_days> has a value
     *
     * @return boolean
     */
    public function hasValidForXDays(){
      return $this->_has(5);
    }
    
    /**
     * Clear <valid_for_x_days> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearValidForXDays(){
      return $this->_clear(5);
    }
    
    /**
     * Get <valid_for_x_days> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getValidForXDays(){
      return $this->_get(5);
    }
    
    /**
     * Set <valid_for_x_days> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setValidForXDays(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <valid_for_x_days_null> has a value
     *
     * @return boolean
     */
    public function hasValidForXDaysNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <valid_for_x_days_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearValidForXDaysNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <valid_for_x_days_null> value
     *
     * @return boolean
     */
    public function getValidForXDaysNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <valid_for_x_days_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setValidForXDaysNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <default_valid_until> has a value
     *
     * @return boolean
     */
    public function hasDefaultValidUntil(){
      return $this->_has(6);
    }
    
    /**
     * Clear <default_valid_until> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDefaultValidUntil(){
      return $this->_clear(6);
    }
    
    /**
     * Get <default_valid_until> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getDefaultValidUntil(){
      return $this->_get(6);
    }
    
    /**
     * Set <default_valid_until> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDefaultValidUntil(\dstore\engine\values\timestampValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <default_valid_until_null> has a value
     *
     * @return boolean
     */
    public function hasDefaultValidUntilNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <default_valid_until_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDefaultValidUntilNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <default_valid_until_null> value
     *
     * @return boolean
     */
    public function getDefaultValidUntilNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <default_valid_until_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDefaultValidUntilNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <code_status> has a value
     *
     * @return boolean
     */
    public function hasCodeStatus(){
      return $this->_has(7);
    }
    
    /**
     * Clear <code_status> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearCodeStatus(){
      return $this->_clear(7);
    }
    
    /**
     * Get <code_status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCodeStatus(){
      return $this->_get(7);
    }
    
    /**
     * Set <code_status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setCodeStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <code_status_null> has a value
     *
     * @return boolean
     */
    public function hasCodeStatusNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <code_status_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearCodeStatusNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <code_status_null> value
     *
     * @return boolean
     */
    public function getCodeStatusNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <code_status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setCodeStatusNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <x_times_usable> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsable(){
      return $this->_has(8);
    }
    
    /**
     * Clear <x_times_usable> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearXTimesUsable(){
      return $this->_clear(8);
    }
    
    /**
     * Get <x_times_usable> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getXTimesUsable(){
      return $this->_get(8);
    }
    
    /**
     * Set <x_times_usable> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setXTimesUsable(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <x_times_usable_null> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsableNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <x_times_usable_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearXTimesUsableNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <x_times_usable_null> value
     *
     * @return boolean
     */
    public function getXTimesUsableNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <x_times_usable_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setXTimesUsableNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <x_times_usable_per_person> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsablePerPerson(){
      return $this->_has(9);
    }
    
    /**
     * Clear <x_times_usable_per_person> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearXTimesUsablePerPerson(){
      return $this->_clear(9);
    }
    
    /**
     * Get <x_times_usable_per_person> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getXTimesUsablePerPerson(){
      return $this->_get(9);
    }
    
    /**
     * Set <x_times_usable_per_person> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setXTimesUsablePerPerson(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <x_times_usable_per_person_null> has a value
     *
     * @return boolean
     */
    public function hasXTimesUsablePerPersonNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <x_times_usable_per_person_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearXTimesUsablePerPersonNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <x_times_usable_per_person_null> value
     *
     * @return boolean
     */
    public function getXTimesUsablePerPersonNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <x_times_usable_per_person_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setXTimesUsablePerPersonNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <delete_voucher_type> has a value
     *
     * @return boolean
     */
    public function hasDeleteVoucherType(){
      return $this->_has(10);
    }
    
    /**
     * Clear <delete_voucher_type> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDeleteVoucherType(){
      return $this->_clear(10);
    }
    
    /**
     * Get <delete_voucher_type> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteVoucherType(){
      return $this->_get(10);
    }
    
    /**
     * Set <delete_voucher_type> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDeleteVoucherType(\dstore\engine\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <delete_voucher_type_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteVoucherTypeNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <delete_voucher_type_null> value
     *
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function clearDeleteVoucherTypeNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <delete_voucher_type_null> value
     *
     * @return boolean
     */
    public function getDeleteVoucherTypeNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <delete_voucher_type_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyVoucherTypes_Ad\Parameters
     */
    public function setDeleteVoucherTypeNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

