<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetOrderStateRules_Ad.proto
//   Date: 2016-05-19 08:07:49

namespace dstore\engine\om_GetOrderStateRules_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $user_name = null;
    
    /**  @var \dstore\values\integerValue */
    public $to_order_state_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $user_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_for_shipping_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $from_order_state_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $to_order_state = null;
    
    /**  @var \dstore\values\stringValue */
    public $payment_for_shipping_description = null;
    
    /**  @var \dstore\values\stringValue */
    public $from_order_state = null;
    
    /**  @var \dstore\values\booleanValue */
    public $allowed = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetOrderStateRules_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user_name = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "user_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_order_state_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "to_order_state_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE user_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "user_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_id = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "payment_for_shipping_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_order_state_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "from_order_state_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_order_state = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "to_order_state";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_description = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "payment_for_shipping_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_order_state = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "from_order_state";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE allowed = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "allowed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <user_name> has a value
     *
     * @return boolean
     */
    public function hasUserName(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <user_name> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearUserName(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <user_name> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUserName(){
      return $this->_get(10001);
    }
    
    /**
     * Set <user_name> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setUserName(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <to_order_state_id> has a value
     *
     * @return boolean
     */
    public function hasToOrderStateId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <to_order_state_id> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearToOrderStateId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <to_order_state_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getToOrderStateId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <to_order_state_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setToOrderStateId(\dstore\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <user_id> has a value
     *
     * @return boolean
     */
    public function hasUserId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <user_id> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearUserId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <user_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getUserId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <user_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setUserId(\dstore\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <payment_for_shipping_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingId(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <payment_for_shipping_id> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearPaymentForShippingId(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <payment_for_shipping_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentForShippingId(){
      return $this->_get(10004);
    }
    
    /**
     * Set <payment_for_shipping_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setPaymentForShippingId(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <from_order_state_id> has a value
     *
     * @return boolean
     */
    public function hasFromOrderStateId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <from_order_state_id> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearFromOrderStateId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <from_order_state_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFromOrderStateId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <from_order_state_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setFromOrderStateId(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <to_order_state> has a value
     *
     * @return boolean
     */
    public function hasToOrderState(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <to_order_state> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearToOrderState(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <to_order_state> value
     *
     * @return \dstore\values\stringValue
     */
    public function getToOrderState(){
      return $this->_get(10006);
    }
    
    /**
     * Set <to_order_state> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setToOrderState(\dstore\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <payment_for_shipping_description> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingDescription(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <payment_for_shipping_description> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearPaymentForShippingDescription(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <payment_for_shipping_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPaymentForShippingDescription(){
      return $this->_get(10007);
    }
    
    /**
     * Set <payment_for_shipping_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setPaymentForShippingDescription(\dstore\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <from_order_state> has a value
     *
     * @return boolean
     */
    public function hasFromOrderState(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <from_order_state> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearFromOrderState(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <from_order_state> value
     *
     * @return \dstore\values\stringValue
     */
    public function getFromOrderState(){
      return $this->_get(10008);
    }
    
    /**
     * Set <from_order_state> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setFromOrderState(\dstore\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <allowed> has a value
     *
     * @return boolean
     */
    public function hasAllowed(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <allowed> value
     *
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function clearAllowed(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <allowed> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getAllowed(){
      return $this->_get(10009);
    }
    
    /**
     * Set <allowed> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrderStateRules_Ad\Response\Row
     */
    public function setAllowed(\dstore\values\booleanValue $value){
      return $this->_set(10009, $value);
    }
  }
}

