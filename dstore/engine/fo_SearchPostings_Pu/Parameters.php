<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_SearchPostings_Pu.proto
//   Date: 2015-10-06 11:19:45

namespace dstore\engine\fo_SearchPostings_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $person_identification_values = null;
    
    /**  @var boolean */
    public $person_identification_values_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $forum_id = null;
    
    /**  @var boolean */
    public $forum_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $search_with_like_operator = null;
    
    /**  @var boolean */
    public $search_with_like_operator_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_posting_bodies = null;
    
    /**  @var boolean */
    public $include_posting_bodies_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_additional_infos = null;
    
    /**  @var boolean */
    public $include_additional_infos_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $visibility = null;
    
    /**  @var boolean */
    public $visibility_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_own_not_approved_postings = null;
    
    /**  @var boolean */
    public $get_own_not_approved_postings_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $posting_characteristic_id_list = null;
    
    /**  @var boolean */
    public $posting_characteristic_id_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition_list = null;
    
    /**  @var boolean */
    public $condition_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $filter_by_person_id_list = null;
    
    /**  @var boolean */
    public $filter_by_person_id_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $search_only_postings_in_one_id = null;
    
    /**  @var boolean */
    public $search_only_postings_in_one_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $separator_in_ident_vals = null;
    
    /**  @var boolean */
    public $separator_in_ident_vals_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_SearchPostings_Pu.Parameters');

      // OPTIONAL MESSAGE person_identification_values = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_identification_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_identification_values_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_identification_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_type_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unique_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE forum_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "forum_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL forum_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "forum_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_with_like_operator = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "search_with_like_operator";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_with_like_operator_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "search_with_like_operator_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_posting_bodies = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "include_posting_bodies";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_posting_bodies_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "include_posting_bodies_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_additional_infos = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "include_additional_infos";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_additional_infos_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "include_additional_infos_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE visibility = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "visibility";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL visibility_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "visibility_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_own_not_approved_postings = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "get_own_not_approved_postings";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_own_not_approved_postings_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "get_own_not_approved_postings_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE posting_characteristic_id_list = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "posting_characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL posting_characteristic_id_list_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "posting_characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_list = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_list_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_person_id_list = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "filter_by_person_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_person_id_list_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "filter_by_person_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1017;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_only_postings_in_one_id = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "search_only_postings_in_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_only_postings_in_one_id_null = 1018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1018;
      $f->name      = "search_only_postings_in_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_ident_vals = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "separator_in_ident_vals";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_ident_vals_null = 1019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1019;
      $f->name      = "separator_in_ident_vals_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_identification_values> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValues(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_identification_values> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPersonIdentificationValues(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_identification_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPersonIdentificationValues(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_identification_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPersonIdentificationValues(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_identification_values_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValuesNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_identification_values_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPersonIdentificationValuesNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_identification_values_null> value
     *
     * @return boolean
     */
    public function getPersonIdentificationValuesNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_identification_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPersonIdentificationValuesNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(2);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPersonTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(3);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setUniqueId(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <forum_id> has a value
     *
     * @return boolean
     */
    public function hasForumId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <forum_id> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearForumId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <forum_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getForumId(){
      return $this->_get(4);
    }
    
    /**
     * Set <forum_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setForumId(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <forum_id_null> has a value
     *
     * @return boolean
     */
    public function hasForumIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <forum_id_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearForumIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <forum_id_null> value
     *
     * @return boolean
     */
    public function getForumIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <forum_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setForumIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <search_with_like_operator> has a value
     *
     * @return boolean
     */
    public function hasSearchWithLikeOperator(){
      return $this->_has(5);
    }
    
    /**
     * Clear <search_with_like_operator> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSearchWithLikeOperator(){
      return $this->_clear(5);
    }
    
    /**
     * Get <search_with_like_operator> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getSearchWithLikeOperator(){
      return $this->_get(5);
    }
    
    /**
     * Set <search_with_like_operator> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSearchWithLikeOperator(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <search_with_like_operator_null> has a value
     *
     * @return boolean
     */
    public function hasSearchWithLikeOperatorNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <search_with_like_operator_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSearchWithLikeOperatorNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <search_with_like_operator_null> value
     *
     * @return boolean
     */
    public function getSearchWithLikeOperatorNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <search_with_like_operator_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSearchWithLikeOperatorNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <include_posting_bodies> has a value
     *
     * @return boolean
     */
    public function hasIncludePostingBodies(){
      return $this->_has(6);
    }
    
    /**
     * Clear <include_posting_bodies> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearIncludePostingBodies(){
      return $this->_clear(6);
    }
    
    /**
     * Get <include_posting_bodies> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludePostingBodies(){
      return $this->_get(6);
    }
    
    /**
     * Set <include_posting_bodies> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setIncludePostingBodies(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <include_posting_bodies_null> has a value
     *
     * @return boolean
     */
    public function hasIncludePostingBodiesNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <include_posting_bodies_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearIncludePostingBodiesNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <include_posting_bodies_null> value
     *
     * @return boolean
     */
    public function getIncludePostingBodiesNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <include_posting_bodies_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setIncludePostingBodiesNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(7);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(7);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(7);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <include_additional_infos> has a value
     *
     * @return boolean
     */
    public function hasIncludeAdditionalInfos(){
      return $this->_has(8);
    }
    
    /**
     * Clear <include_additional_infos> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearIncludeAdditionalInfos(){
      return $this->_clear(8);
    }
    
    /**
     * Get <include_additional_infos> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeAdditionalInfos(){
      return $this->_get(8);
    }
    
    /**
     * Set <include_additional_infos> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setIncludeAdditionalInfos(\dstore\engine\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <include_additional_infos_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeAdditionalInfosNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <include_additional_infos_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearIncludeAdditionalInfosNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <include_additional_infos_null> value
     *
     * @return boolean
     */
    public function getIncludeAdditionalInfosNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <include_additional_infos_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setIncludeAdditionalInfosNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(9);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(9);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(9);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(10);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearToDate(){
      return $this->_clear(10);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(10);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <visibility> has a value
     *
     * @return boolean
     */
    public function hasVisibility(){
      return $this->_has(11);
    }
    
    /**
     * Clear <visibility> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearVisibility(){
      return $this->_clear(11);
    }
    
    /**
     * Get <visibility> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisibility(){
      return $this->_get(11);
    }
    
    /**
     * Set <visibility> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setVisibility(\dstore\engine\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <visibility_null> has a value
     *
     * @return boolean
     */
    public function hasVisibilityNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <visibility_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearVisibilityNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <visibility_null> value
     *
     * @return boolean
     */
    public function getVisibilityNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <visibility_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setVisibilityNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <get_own_not_approved_postings> has a value
     *
     * @return boolean
     */
    public function hasGetOwnNotApprovedPostings(){
      return $this->_has(12);
    }
    
    /**
     * Clear <get_own_not_approved_postings> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearGetOwnNotApprovedPostings(){
      return $this->_clear(12);
    }
    
    /**
     * Get <get_own_not_approved_postings> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetOwnNotApprovedPostings(){
      return $this->_get(12);
    }
    
    /**
     * Set <get_own_not_approved_postings> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setGetOwnNotApprovedPostings(\dstore\engine\values\booleanValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <get_own_not_approved_postings_null> has a value
     *
     * @return boolean
     */
    public function hasGetOwnNotApprovedPostingsNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <get_own_not_approved_postings_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearGetOwnNotApprovedPostingsNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <get_own_not_approved_postings_null> value
     *
     * @return boolean
     */
    public function getGetOwnNotApprovedPostingsNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <get_own_not_approved_postings_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setGetOwnNotApprovedPostingsNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(13);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(13);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(13);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setOutputIntoOneId(\dstore\engine\values\integerValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <posting_characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasPostingCharacteristicIdList(){
      return $this->_has(14);
    }
    
    /**
     * Clear <posting_characteristic_id_list> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPostingCharacteristicIdList(){
      return $this->_clear(14);
    }
    
    /**
     * Get <posting_characteristic_id_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPostingCharacteristicIdList(){
      return $this->_get(14);
    }
    
    /**
     * Set <posting_characteristic_id_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPostingCharacteristicIdList(\dstore\engine\values\stringValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <posting_characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasPostingCharacteristicIdListNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <posting_characteristic_id_list_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearPostingCharacteristicIdListNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <posting_characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getPostingCharacteristicIdListNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <posting_characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setPostingCharacteristicIdListNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <condition_list> has a value
     *
     * @return boolean
     */
    public function hasConditionList(){
      return $this->_has(15);
    }
    
    /**
     * Clear <condition_list> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearConditionList(){
      return $this->_clear(15);
    }
    
    /**
     * Get <condition_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getConditionList(){
      return $this->_get(15);
    }
    
    /**
     * Set <condition_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setConditionList(\dstore\engine\values\stringValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasConditionListNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <condition_list_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearConditionListNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <condition_list_null> value
     *
     * @return boolean
     */
    public function getConditionListNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setConditionListNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <filter_by_person_id_list> has a value
     *
     * @return boolean
     */
    public function hasFilterByPersonIdList(){
      return $this->_has(16);
    }
    
    /**
     * Clear <filter_by_person_id_list> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearFilterByPersonIdList(){
      return $this->_clear(16);
    }
    
    /**
     * Get <filter_by_person_id_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFilterByPersonIdList(){
      return $this->_get(16);
    }
    
    /**
     * Set <filter_by_person_id_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setFilterByPersonIdList(\dstore\engine\values\stringValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <filter_by_person_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByPersonIdListNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <filter_by_person_id_list_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearFilterByPersonIdListNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <filter_by_person_id_list_null> value
     *
     * @return boolean
     */
    public function getFilterByPersonIdListNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <filter_by_person_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setFilterByPersonIdListNull( $value){
      return $this->_set(1016, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(17);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearCountry(){
      return $this->_clear(17);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCountry(){
      return $this->_get(17);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setCountry(\dstore\engine\values\stringValue $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1017);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1017);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1017);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1017, $value);
    }
    
    /**
     * Check if <search_only_postings_in_one_id> has a value
     *
     * @return boolean
     */
    public function hasSearchOnlyPostingsInOneId(){
      return $this->_has(18);
    }
    
    /**
     * Clear <search_only_postings_in_one_id> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSearchOnlyPostingsInOneId(){
      return $this->_clear(18);
    }
    
    /**
     * Get <search_only_postings_in_one_id> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getSearchOnlyPostingsInOneId(){
      return $this->_get(18);
    }
    
    /**
     * Set <search_only_postings_in_one_id> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSearchOnlyPostingsInOneId(\dstore\engine\values\booleanValue $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <search_only_postings_in_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasSearchOnlyPostingsInOneIdNull(){
      return $this->_has(1018);
    }
    
    /**
     * Clear <search_only_postings_in_one_id_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSearchOnlyPostingsInOneIdNull(){
      return $this->_clear(1018);
    }
    
    /**
     * Get <search_only_postings_in_one_id_null> value
     *
     * @return boolean
     */
    public function getSearchOnlyPostingsInOneIdNull(){
      return $this->_get(1018);
    }
    
    /**
     * Set <search_only_postings_in_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSearchOnlyPostingsInOneIdNull( $value){
      return $this->_set(1018, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentVals(){
      return $this->_has(19);
    }
    
    /**
     * Clear <separator_in_ident_vals> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSeparatorInIdentVals(){
      return $this->_clear(19);
    }
    
    /**
     * Get <separator_in_ident_vals> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSeparatorInIdentVals(){
      return $this->_get(19);
    }
    
    /**
     * Set <separator_in_ident_vals> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSeparatorInIdentVals(\dstore\engine\values\stringValue $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentValsNull(){
      return $this->_has(1019);
    }
    
    /**
     * Clear <separator_in_ident_vals_null> value
     *
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function clearSeparatorInIdentValsNull(){
      return $this->_clear(1019);
    }
    
    /**
     * Get <separator_in_ident_vals_null> value
     *
     * @return boolean
     */
    public function getSeparatorInIdentValsNull(){
      return $this->_get(1019);
    }
    
    /**
     * Set <separator_in_ident_vals_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_SearchPostings_Pu\Parameters
     */
    public function setSeparatorInIdentValsNull( $value){
      return $this->_set(1019, $value);
    }
  }
}

