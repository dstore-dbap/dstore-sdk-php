<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetNodeCharacteristics_Ad.proto
//   Date: 2016-05-19 08:07:42

namespace dstore\engine\im_GetNodeCharacteristics_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $include_currency_information = null;
    
    /**  @var boolean */
    public $include_currency_information_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_currency_informations = null;
    
    /**  @var boolean */
    public $include_currency_informations_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $only_ids_in_table_one_id = null;
    
    /**  @var boolean */
    public $only_ids_in_table_one_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $node_charac_category_id = null;
    
    /**  @var boolean */
    public $node_charac_category_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $sort_order = null;
    
    /**  @var boolean */
    public $sort_order_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_category_information = null;
    
    /**  @var boolean */
    public $get_category_information_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetNodeCharacteristics_Ad.Parameters');

      // OPTIONAL MESSAGE include_currency_information = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "include_currency_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_currency_information_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "include_currency_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_currency_informations = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "include_currency_informations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_currency_informations_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "include_currency_informations_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_ids_in_table_one_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "only_ids_in_table_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_ids_in_table_one_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "only_ids_in_table_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_charac_category_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "node_charac_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_charac_category_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "node_charac_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_order = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "sort_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_order_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "sort_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_category_information = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "get_category_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_category_information_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "get_category_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <include_currency_information> has a value
     *
     * @return boolean
     */
    public function hasIncludeCurrencyInformation(){
      return $this->_has(1);
    }
    
    /**
     * Clear <include_currency_information> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearIncludeCurrencyInformation(){
      return $this->_clear(1);
    }
    
    /**
     * Get <include_currency_information> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeCurrencyInformation(){
      return $this->_get(1);
    }
    
    /**
     * Set <include_currency_information> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setIncludeCurrencyInformation(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <include_currency_information_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeCurrencyInformationNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <include_currency_information_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearIncludeCurrencyInformationNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <include_currency_information_null> value
     *
     * @return boolean
     */
    public function getIncludeCurrencyInformationNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <include_currency_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setIncludeCurrencyInformationNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <include_currency_informations> has a value
     *
     * @return boolean
     */
    public function hasIncludeCurrencyInformations(){
      return $this->_has(2);
    }
    
    /**
     * Clear <include_currency_informations> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearIncludeCurrencyInformations(){
      return $this->_clear(2);
    }
    
    /**
     * Get <include_currency_informations> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeCurrencyInformations(){
      return $this->_get(2);
    }
    
    /**
     * Set <include_currency_informations> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setIncludeCurrencyInformations(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <include_currency_informations_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeCurrencyInformationsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <include_currency_informations_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearIncludeCurrencyInformationsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <include_currency_informations_null> value
     *
     * @return boolean
     */
    public function getIncludeCurrencyInformationsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <include_currency_informations_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setIncludeCurrencyInformationsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <only_ids_in_table_one_id> has a value
     *
     * @return boolean
     */
    public function hasOnlyIdsInTableOneId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <only_ids_in_table_one_id> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearOnlyIdsInTableOneId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <only_ids_in_table_one_id> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOnlyIdsInTableOneId(){
      return $this->_get(3);
    }
    
    /**
     * Set <only_ids_in_table_one_id> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setOnlyIdsInTableOneId(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <only_ids_in_table_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyIdsInTableOneIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <only_ids_in_table_one_id_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearOnlyIdsInTableOneIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <only_ids_in_table_one_id_null> value
     *
     * @return boolean
     */
    public function getOnlyIdsInTableOneIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <only_ids_in_table_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setOnlyIdsInTableOneIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <node_charac_category_id> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacCategoryId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <node_charac_category_id> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearNodeCharacCategoryId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <node_charac_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getNodeCharacCategoryId(){
      return $this->_get(4);
    }
    
    /**
     * Set <node_charac_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setNodeCharacCategoryId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <node_charac_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacCategoryIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <node_charac_category_id_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearNodeCharacCategoryIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <node_charac_category_id_null> value
     *
     * @return boolean
     */
    public function getNodeCharacCategoryIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <node_charac_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setNodeCharacCategoryIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <sort_order> has a value
     *
     * @return boolean
     */
    public function hasSortOrder(){
      return $this->_has(5);
    }
    
    /**
     * Clear <sort_order> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearSortOrder(){
      return $this->_clear(5);
    }
    
    /**
     * Get <sort_order> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortOrder(){
      return $this->_get(5);
    }
    
    /**
     * Set <sort_order> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setSortOrder(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <sort_order_null> has a value
     *
     * @return boolean
     */
    public function hasSortOrderNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <sort_order_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearSortOrderNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <sort_order_null> value
     *
     * @return boolean
     */
    public function getSortOrderNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <sort_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setSortOrderNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <get_category_information> has a value
     *
     * @return boolean
     */
    public function hasGetCategoryInformation(){
      return $this->_has(6);
    }
    
    /**
     * Clear <get_category_information> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearGetCategoryInformation(){
      return $this->_clear(6);
    }
    
    /**
     * Get <get_category_information> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetCategoryInformation(){
      return $this->_get(6);
    }
    
    /**
     * Set <get_category_information> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setGetCategoryInformation(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <get_category_information_null> has a value
     *
     * @return boolean
     */
    public function hasGetCategoryInformationNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <get_category_information_null> value
     *
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function clearGetCategoryInformationNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <get_category_information_null> value
     *
     * @return boolean
     */
    public function getGetCategoryInformationNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <get_category_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetNodeCharacteristics_Ad\Parameters
     */
    public function setGetCategoryInformationNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

