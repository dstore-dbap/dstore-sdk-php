<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCampVoucherCodeConds_Ad.proto
//   Date: 2015-10-06 11:19:56

namespace dstore\engine\om_GetCampVoucherCodeConds_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $voucher_type_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $valid_code_of_voucher_type_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $condition_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCampVoucherCodeConds_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE voucher_type_description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "voucher_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE valid_code_of_voucher_type_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "valid_code_of_voucher_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <voucher_type_description> has a value
     *
     * @return boolean
     */
    public function hasVoucherTypeDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <voucher_type_description> value
     *
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function clearVoucherTypeDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <voucher_type_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getVoucherTypeDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <voucher_type_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function setVoucherTypeDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <valid_code_of_voucher_type_id> has a value
     *
     * @return boolean
     */
    public function hasValidCodeOfVoucherTypeId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <valid_code_of_voucher_type_id> value
     *
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function clearValidCodeOfVoucherTypeId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <valid_code_of_voucher_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getValidCodeOfVoucherTypeId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <valid_code_of_voucher_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function setValidCodeOfVoucherTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <condition_id> has a value
     *
     * @return boolean
     */
    public function hasConditionId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <condition_id> value
     *
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function clearConditionId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <condition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <condition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampVoucherCodeConds_Ad\Response\Row
     */
    public function setConditionId(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
  }
}

