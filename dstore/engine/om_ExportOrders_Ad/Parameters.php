<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ExportOrders_Ad.proto
//   Date: 2015-10-06 11:19:55

namespace dstore\engine\om_ExportOrders_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_characteristic_id1 = null;
    
    /**  @var boolean */
    public $node_characteristic_id1_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_characteristic_id2 = null;
    
    /**  @var boolean */
    public $node_characteristic_id2_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_characteristic_id3 = null;
    
    /**  @var boolean */
    public $node_characteristic_id3_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $skip_o_having_different_o_states = null;
    
    /**  @var boolean */
    public $skip_o_having_different_o_states_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_all_positions_of_order = null;
    
    /**  @var boolean */
    public $get_all_positions_of_order_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_orders = null;
    
    /**  @var boolean */
    public $max_number_of_orders_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $include_orders_with_order_no = null;
    
    /**  @var boolean */
    public $include_orders_with_order_no_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_actual_item_info = null;
    
    /**  @var boolean */
    public $get_actual_item_info_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ExportOrders_Ad.Parameters');

      // OPTIONAL MESSAGE from_date = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id1 = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "node_characteristic_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_id1_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "node_characteristic_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id2 = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "node_characteristic_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_id2_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "node_characteristic_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id3 = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "node_characteristic_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_id3_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "node_characteristic_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE skip_o_having_different_o_states = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "skip_o_having_different_o_states";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL skip_o_having_different_o_states_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "skip_o_having_different_o_states_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_all_positions_of_order = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "get_all_positions_of_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_all_positions_of_order_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "get_all_positions_of_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_orders = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "max_number_of_orders";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_orders_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "max_number_of_orders_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_orders_with_order_no = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "include_orders_with_order_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_orders_with_order_no_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "include_orders_with_order_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_actual_item_info = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "get_actual_item_info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_actual_item_info_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "get_actual_item_info_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(1);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(1);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(1);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <node_characteristic_id1> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId1(){
      return $this->_has(3);
    }
    
    /**
     * Clear <node_characteristic_id1> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId1(){
      return $this->_clear(3);
    }
    
    /**
     * Get <node_characteristic_id1> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeCharacteristicId1(){
      return $this->_get(3);
    }
    
    /**
     * Set <node_characteristic_id1> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId1(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <node_characteristic_id1_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId1Null(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <node_characteristic_id1_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId1Null(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <node_characteristic_id1_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicId1Null(){
      return $this->_get(1003);
    }
    
    /**
     * Set <node_characteristic_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId1Null( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <node_characteristic_id2> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId2(){
      return $this->_has(4);
    }
    
    /**
     * Clear <node_characteristic_id2> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId2(){
      return $this->_clear(4);
    }
    
    /**
     * Get <node_characteristic_id2> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeCharacteristicId2(){
      return $this->_get(4);
    }
    
    /**
     * Set <node_characteristic_id2> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId2(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <node_characteristic_id2_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId2Null(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <node_characteristic_id2_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId2Null(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <node_characteristic_id2_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicId2Null(){
      return $this->_get(1004);
    }
    
    /**
     * Set <node_characteristic_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId2Null( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <node_characteristic_id3> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId3(){
      return $this->_has(5);
    }
    
    /**
     * Clear <node_characteristic_id3> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId3(){
      return $this->_clear(5);
    }
    
    /**
     * Get <node_characteristic_id3> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeCharacteristicId3(){
      return $this->_get(5);
    }
    
    /**
     * Set <node_characteristic_id3> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId3(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <node_characteristic_id3_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId3Null(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <node_characteristic_id3_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearNodeCharacteristicId3Null(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <node_characteristic_id3_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicId3Null(){
      return $this->_get(1005);
    }
    
    /**
     * Set <node_characteristic_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setNodeCharacteristicId3Null( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <skip_o_having_different_o_states> has a value
     *
     * @return boolean
     */
    public function hasSkipOHavingDifferentOStates(){
      return $this->_has(6);
    }
    
    /**
     * Clear <skip_o_having_different_o_states> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearSkipOHavingDifferentOStates(){
      return $this->_clear(6);
    }
    
    /**
     * Get <skip_o_having_different_o_states> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getSkipOHavingDifferentOStates(){
      return $this->_get(6);
    }
    
    /**
     * Set <skip_o_having_different_o_states> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setSkipOHavingDifferentOStates(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <skip_o_having_different_o_states_null> has a value
     *
     * @return boolean
     */
    public function hasSkipOHavingDifferentOStatesNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <skip_o_having_different_o_states_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearSkipOHavingDifferentOStatesNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <skip_o_having_different_o_states_null> value
     *
     * @return boolean
     */
    public function getSkipOHavingDifferentOStatesNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <skip_o_having_different_o_states_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setSkipOHavingDifferentOStatesNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <get_all_positions_of_order> has a value
     *
     * @return boolean
     */
    public function hasGetAllPositionsOfOrder(){
      return $this->_has(7);
    }
    
    /**
     * Clear <get_all_positions_of_order> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearGetAllPositionsOfOrder(){
      return $this->_clear(7);
    }
    
    /**
     * Get <get_all_positions_of_order> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetAllPositionsOfOrder(){
      return $this->_get(7);
    }
    
    /**
     * Set <get_all_positions_of_order> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setGetAllPositionsOfOrder(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <get_all_positions_of_order_null> has a value
     *
     * @return boolean
     */
    public function hasGetAllPositionsOfOrderNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <get_all_positions_of_order_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearGetAllPositionsOfOrderNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <get_all_positions_of_order_null> value
     *
     * @return boolean
     */
    public function getGetAllPositionsOfOrderNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <get_all_positions_of_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setGetAllPositionsOfOrderNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <max_number_of_orders> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfOrders(){
      return $this->_has(8);
    }
    
    /**
     * Clear <max_number_of_orders> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearMaxNumberOfOrders(){
      return $this->_clear(8);
    }
    
    /**
     * Get <max_number_of_orders> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfOrders(){
      return $this->_get(8);
    }
    
    /**
     * Set <max_number_of_orders> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setMaxNumberOfOrders(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <max_number_of_orders_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfOrdersNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <max_number_of_orders_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearMaxNumberOfOrdersNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <max_number_of_orders_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfOrdersNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <max_number_of_orders_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setMaxNumberOfOrdersNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <include_orders_with_order_no> has a value
     *
     * @return boolean
     */
    public function hasIncludeOrdersWithOrderNo(){
      return $this->_has(9);
    }
    
    /**
     * Clear <include_orders_with_order_no> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearIncludeOrdersWithOrderNo(){
      return $this->_clear(9);
    }
    
    /**
     * Get <include_orders_with_order_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getIncludeOrdersWithOrderNo(){
      return $this->_get(9);
    }
    
    /**
     * Set <include_orders_with_order_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setIncludeOrdersWithOrderNo(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <include_orders_with_order_no_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeOrdersWithOrderNoNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <include_orders_with_order_no_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearIncludeOrdersWithOrderNoNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <include_orders_with_order_no_null> value
     *
     * @return boolean
     */
    public function getIncludeOrdersWithOrderNoNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <include_orders_with_order_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setIncludeOrdersWithOrderNoNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <get_actual_item_info> has a value
     *
     * @return boolean
     */
    public function hasGetActualItemInfo(){
      return $this->_has(10);
    }
    
    /**
     * Clear <get_actual_item_info> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearGetActualItemInfo(){
      return $this->_clear(10);
    }
    
    /**
     * Get <get_actual_item_info> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetActualItemInfo(){
      return $this->_get(10);
    }
    
    /**
     * Set <get_actual_item_info> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setGetActualItemInfo(\dstore\engine\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <get_actual_item_info_null> has a value
     *
     * @return boolean
     */
    public function hasGetActualItemInfoNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <get_actual_item_info_null> value
     *
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function clearGetActualItemInfoNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <get_actual_item_info_null> value
     *
     * @return boolean
     */
    public function getGetActualItemInfoNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <get_actual_item_info_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ExportOrders_Ad\Parameters
     */
    public function setGetActualItemInfoNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

