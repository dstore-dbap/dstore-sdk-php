<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_GetPersonBinaries_Pu.proto
//   Date: 2016-05-19 08:07:54

namespace dstore\engine\pm_GetPersonBinaries_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $person_identification_values = null;
    
    /**  @var boolean */
    public $person_identification_values_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $case_sensitive = null;
    
    /**  @var boolean */
    public $case_sensitive_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $include_binary_code = null;
    
    /**  @var boolean */
    public $include_binary_code_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $binary_characteristic_id = null;
    
    /**  @var boolean */
    public $binary_characteristic_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $value = null;
    
    /**  @var boolean */
    public $value_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_GetPersonBinaries_Pu.Parameters');

      // OPTIONAL MESSAGE person_identification_values = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_identification_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_identification_values_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_identification_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_type_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE case_sensitive = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "case_sensitive";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL case_sensitive_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "case_sensitive_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_binary_code = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "include_binary_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_binary_code_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "include_binary_code_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_characteristic_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "binary_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL binary_characteristic_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "binary_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_identification_values> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValues(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_identification_values> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonIdentificationValues(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_identification_values> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPersonIdentificationValues(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_identification_values> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonIdentificationValues(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_identification_values_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValuesNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_identification_values_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonIdentificationValuesNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_identification_values_null> value
     *
     * @return boolean
     */
    public function getPersonIdentificationValuesNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_identification_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonIdentificationValuesNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(2);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonTypeId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <case_sensitive> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitive(){
      return $this->_has(3);
    }
    
    /**
     * Clear <case_sensitive> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearCaseSensitive(){
      return $this->_clear(3);
    }
    
    /**
     * Get <case_sensitive> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCaseSensitive(){
      return $this->_get(3);
    }
    
    /**
     * Set <case_sensitive> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setCaseSensitive(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <case_sensitive_null> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitiveNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <case_sensitive_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearCaseSensitiveNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <case_sensitive_null> value
     *
     * @return boolean
     */
    public function getCaseSensitiveNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <case_sensitive_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setCaseSensitiveNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(4);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <include_binary_code> has a value
     *
     * @return boolean
     */
    public function hasIncludeBinaryCode(){
      return $this->_has(5);
    }
    
    /**
     * Clear <include_binary_code> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearIncludeBinaryCode(){
      return $this->_clear(5);
    }
    
    /**
     * Get <include_binary_code> value
     *
     * @return \dstore\values\integerValue
     */
    public function getIncludeBinaryCode(){
      return $this->_get(5);
    }
    
    /**
     * Set <include_binary_code> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setIncludeBinaryCode(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <include_binary_code_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeBinaryCodeNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <include_binary_code_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearIncludeBinaryCodeNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <include_binary_code_null> value
     *
     * @return boolean
     */
    public function getIncludeBinaryCodeNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <include_binary_code_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setIncludeBinaryCodeNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <binary_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <binary_characteristic_id> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearBinaryCharacteristicId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <binary_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBinaryCharacteristicId(){
      return $this->_get(6);
    }
    
    /**
     * Set <binary_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setBinaryCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <binary_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <binary_characteristic_id_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearBinaryCharacteristicIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <binary_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getBinaryCharacteristicIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <binary_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setBinaryCharacteristicIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(7);
    }
    
    /**
     * Clear <value> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearValue(){
      return $this->_clear(7);
    }
    
    /**
     * Get <value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValue(){
      return $this->_get(7);
    }
    
    /**
     * Set <value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setValue(\dstore\values\stringValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <value_null> has a value
     *
     * @return boolean
     */
    public function hasValueNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <value_null> value
     *
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function clearValueNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <value_null> value
     *
     * @return boolean
     */
    public function getValueNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersonBinaries_Pu\Parameters
     */
    public function setValueNull( $value){
      return $this->_set(1007, $value);
    }
  }
}

