<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_GetMD5ForBinaryID_Pu.proto
//   Date: 2015-10-06 11:19:42

namespace dstore\engine\co_GetMD5ForBinaryID_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $m_d5_hash = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $content_type = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $file_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $filesize_in_k_b = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_GetMD5ForBinaryID_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE m_d5_hash = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "m_d5_hash";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE content_type = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "content_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE file_date_and_time = 20002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20002;
      $f->name      = "file_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filesize_in_k_b = 20004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20004;
      $f->name      = "filesize_in_k_b";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <m_d5_hash> has a value
     *
     * @return boolean
     */
    public function hasMD5Hash(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <m_d5_hash> value
     *
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function clearMD5Hash(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <m_d5_hash> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getMD5Hash(){
      return $this->_get(10001);
    }
    
    /**
     * Set <m_d5_hash> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function setMD5Hash(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <content_type> has a value
     *
     * @return boolean
     */
    public function hasContentType(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <content_type> value
     *
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function clearContentType(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <content_type> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getContentType(){
      return $this->_get(20001);
    }
    
    /**
     * Set <content_type> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function setContentType(\dstore\engine\values\stringValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <file_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasFileDateAndTime(){
      return $this->_has(20002);
    }
    
    /**
     * Clear <file_date_and_time> value
     *
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function clearFileDateAndTime(){
      return $this->_clear(20002);
    }
    
    /**
     * Get <file_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFileDateAndTime(){
      return $this->_get(20002);
    }
    
    /**
     * Set <file_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function setFileDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(20002, $value);
    }
    
    /**
     * Check if <filesize_in_k_b> has a value
     *
     * @return boolean
     */
    public function hasFilesizeInKB(){
      return $this->_has(20004);
    }
    
    /**
     * Clear <filesize_in_k_b> value
     *
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function clearFilesizeInKB(){
      return $this->_clear(20004);
    }
    
    /**
     * Get <filesize_in_k_b> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFilesizeInKB(){
      return $this->_get(20004);
    }
    
    /**
     * Set <filesize_in_k_b> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetMD5ForBinaryID_Pu\Response\Row
     */
    public function setFilesizeInKB(\dstore\engine\values\integerValue $value){
      return $this->_set(20004, $value);
    }
  }
}

