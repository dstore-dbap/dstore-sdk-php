<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/do_GetGlossary_Ad.proto
//   Date: 2016-05-19 08:07:40

namespace dstore\engine\do_GetGlossary_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $keyword = null;
    
    /**  @var boolean */
    public $keyword_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $order_by_lowercase = null;
    
    /**  @var boolean */
    public $order_by_lowercase_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $language_id = null;
    
    /**  @var boolean */
    public $language_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.do_GetGlossary_Ad.Parameters');

      // OPTIONAL MESSAGE keyword = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "keyword";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL keyword_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "keyword_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_by_lowercase = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "order_by_lowercase";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_lowercase_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "order_by_lowercase_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE language_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "language_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL language_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "language_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <keyword> has a value
     *
     * @return boolean
     */
    public function hasKeyword(){
      return $this->_has(1);
    }
    
    /**
     * Clear <keyword> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearKeyword(){
      return $this->_clear(1);
    }
    
    /**
     * Get <keyword> value
     *
     * @return \dstore\values\stringValue
     */
    public function getKeyword(){
      return $this->_get(1);
    }
    
    /**
     * Set <keyword> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setKeyword(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <keyword_null> has a value
     *
     * @return boolean
     */
    public function hasKeywordNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <keyword_null> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearKeywordNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <keyword_null> value
     *
     * @return boolean
     */
    public function getKeywordNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <keyword_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setKeywordNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <order_by_lowercase> has a value
     *
     * @return boolean
     */
    public function hasOrderByLowercase(){
      return $this->_has(2);
    }
    
    /**
     * Clear <order_by_lowercase> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearOrderByLowercase(){
      return $this->_clear(2);
    }
    
    /**
     * Get <order_by_lowercase> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOrderByLowercase(){
      return $this->_get(2);
    }
    
    /**
     * Set <order_by_lowercase> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setOrderByLowercase(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <order_by_lowercase_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByLowercaseNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <order_by_lowercase_null> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearOrderByLowercaseNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <order_by_lowercase_null> value
     *
     * @return boolean
     */
    public function getOrderByLowercaseNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <order_by_lowercase_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setOrderByLowercaseNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <language_id> has a value
     *
     * @return boolean
     */
    public function hasLanguageId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <language_id> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearLanguageId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <language_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLanguageId(){
      return $this->_get(3);
    }
    
    /**
     * Set <language_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setLanguageId(\dstore\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <language_id_null> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <language_id_null> value
     *
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function clearLanguageIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <language_id_null> value
     *
     * @return boolean
     */
    public function getLanguageIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <language_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetGlossary_Ad\Parameters
     */
    public function setLanguageIdNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

