<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_ImportPersonData_Ad.proto
//   Date: 2016-05-19 08:07:55

namespace dstore\engine\pm_ImportPersonData_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $how_many_characteristics = null;
    
    /**  @var boolean */
    public $how_many_characteristics_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $dump_transaction = null;
    
    /**  @var boolean */
    public $dump_transaction_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $identifying_characteristic_id = null;
    
    /**  @var boolean */
    public $identifying_characteristic_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $verify_changes = null;
    
    /**  @var boolean */
    public $verify_changes_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $log_errors = null;
    
    /**  @var boolean */
    public $log_errors_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $ident_values_are_case_sensitive = null;
    
    /**  @var boolean */
    public $ident_values_are_case_sensitive_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $empty_string_to_delete_details = null;
    
    /**  @var boolean */
    public $empty_string_to_delete_details_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $ign_empt_str_in_n_or_m_tab_for_new_pers = null;
    
    /**  @var boolean */
    public $ign_empt_str_in_n_or_m_tab_for_new_pers_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_ImportPersonData_Ad.Parameters');

      // OPTIONAL MESSAGE person_type_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE how_many_characteristics = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "how_many_characteristics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL how_many_characteristics_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "how_many_characteristics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE dump_transaction = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "dump_transaction";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL dump_transaction_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "dump_transaction_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE identifying_characteristic_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "identifying_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL identifying_characteristic_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "identifying_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE verify_changes = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "verify_changes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL verify_changes_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "verify_changes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE log_errors = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "log_errors";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL log_errors_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "log_errors_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ident_values_are_case_sensitive = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "ident_values_are_case_sensitive";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL ident_values_are_case_sensitive_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "ident_values_are_case_sensitive_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE empty_string_to_delete_details = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "empty_string_to_delete_details";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL empty_string_to_delete_details_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "empty_string_to_delete_details_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ign_empt_str_in_n_or_m_tab_for_new_pers = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "ign_empt_str_in_n_or_m_tab_for_new_pers";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL ign_empt_str_in_n_or_m_tab_for_new_pers_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "ign_empt_str_in_n_or_m_tab_for_new_pers_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setPersonTypeId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <how_many_characteristics> has a value
     *
     * @return boolean
     */
    public function hasHowManyCharacteristics(){
      return $this->_has(2);
    }
    
    /**
     * Clear <how_many_characteristics> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearHowManyCharacteristics(){
      return $this->_clear(2);
    }
    
    /**
     * Get <how_many_characteristics> value
     *
     * @return \dstore\values\integerValue
     */
    public function getHowManyCharacteristics(){
      return $this->_get(2);
    }
    
    /**
     * Set <how_many_characteristics> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setHowManyCharacteristics(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <how_many_characteristics_null> has a value
     *
     * @return boolean
     */
    public function hasHowManyCharacteristicsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <how_many_characteristics_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearHowManyCharacteristicsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <how_many_characteristics_null> value
     *
     * @return boolean
     */
    public function getHowManyCharacteristicsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <how_many_characteristics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setHowManyCharacteristicsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <dump_transaction> has a value
     *
     * @return boolean
     */
    public function hasDumpTransaction(){
      return $this->_has(3);
    }
    
    /**
     * Clear <dump_transaction> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearDumpTransaction(){
      return $this->_clear(3);
    }
    
    /**
     * Get <dump_transaction> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDumpTransaction(){
      return $this->_get(3);
    }
    
    /**
     * Set <dump_transaction> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setDumpTransaction(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <dump_transaction_null> has a value
     *
     * @return boolean
     */
    public function hasDumpTransactionNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <dump_transaction_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearDumpTransactionNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <dump_transaction_null> value
     *
     * @return boolean
     */
    public function getDumpTransactionNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <dump_transaction_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setDumpTransactionNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(4);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(4);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(4);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <identifying_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasIdentifyingCharacteristicId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <identifying_characteristic_id> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIdentifyingCharacteristicId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <identifying_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getIdentifyingCharacteristicId(){
      return $this->_get(5);
    }
    
    /**
     * Set <identifying_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIdentifyingCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <identifying_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasIdentifyingCharacteristicIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <identifying_characteristic_id_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIdentifyingCharacteristicIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <identifying_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getIdentifyingCharacteristicIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <identifying_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIdentifyingCharacteristicIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <verify_changes> has a value
     *
     * @return boolean
     */
    public function hasVerifyChanges(){
      return $this->_has(6);
    }
    
    /**
     * Clear <verify_changes> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearVerifyChanges(){
      return $this->_clear(6);
    }
    
    /**
     * Get <verify_changes> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getVerifyChanges(){
      return $this->_get(6);
    }
    
    /**
     * Set <verify_changes> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setVerifyChanges(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <verify_changes_null> has a value
     *
     * @return boolean
     */
    public function hasVerifyChangesNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <verify_changes_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearVerifyChangesNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <verify_changes_null> value
     *
     * @return boolean
     */
    public function getVerifyChangesNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <verify_changes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setVerifyChangesNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <log_errors> has a value
     *
     * @return boolean
     */
    public function hasLogErrors(){
      return $this->_has(7);
    }
    
    /**
     * Clear <log_errors> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearLogErrors(){
      return $this->_clear(7);
    }
    
    /**
     * Get <log_errors> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getLogErrors(){
      return $this->_get(7);
    }
    
    /**
     * Set <log_errors> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setLogErrors(\dstore\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <log_errors_null> has a value
     *
     * @return boolean
     */
    public function hasLogErrorsNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <log_errors_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearLogErrorsNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <log_errors_null> value
     *
     * @return boolean
     */
    public function getLogErrorsNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <log_errors_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setLogErrorsNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <ident_values_are_case_sensitive> has a value
     *
     * @return boolean
     */
    public function hasIdentValuesAreCaseSensitive(){
      return $this->_has(8);
    }
    
    /**
     * Clear <ident_values_are_case_sensitive> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIdentValuesAreCaseSensitive(){
      return $this->_clear(8);
    }
    
    /**
     * Get <ident_values_are_case_sensitive> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIdentValuesAreCaseSensitive(){
      return $this->_get(8);
    }
    
    /**
     * Set <ident_values_are_case_sensitive> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIdentValuesAreCaseSensitive(\dstore\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <ident_values_are_case_sensitive_null> has a value
     *
     * @return boolean
     */
    public function hasIdentValuesAreCaseSensitiveNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <ident_values_are_case_sensitive_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIdentValuesAreCaseSensitiveNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <ident_values_are_case_sensitive_null> value
     *
     * @return boolean
     */
    public function getIdentValuesAreCaseSensitiveNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <ident_values_are_case_sensitive_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIdentValuesAreCaseSensitiveNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_details> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeleteDetails(){
      return $this->_has(9);
    }
    
    /**
     * Clear <empty_string_to_delete_details> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearEmptyStringToDeleteDetails(){
      return $this->_clear(9);
    }
    
    /**
     * Get <empty_string_to_delete_details> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getEmptyStringToDeleteDetails(){
      return $this->_get(9);
    }
    
    /**
     * Set <empty_string_to_delete_details> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setEmptyStringToDeleteDetails(\dstore\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <empty_string_to_delete_details_null> has a value
     *
     * @return boolean
     */
    public function hasEmptyStringToDeleteDetailsNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <empty_string_to_delete_details_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearEmptyStringToDeleteDetailsNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <empty_string_to_delete_details_null> value
     *
     * @return boolean
     */
    public function getEmptyStringToDeleteDetailsNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <empty_string_to_delete_details_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setEmptyStringToDeleteDetailsNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <ign_empt_str_in_n_or_m_tab_for_new_pers> has a value
     *
     * @return boolean
     */
    public function hasIgnEmptStrInNOrMTabForNewPers(){
      return $this->_has(10);
    }
    
    /**
     * Clear <ign_empt_str_in_n_or_m_tab_for_new_pers> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIgnEmptStrInNOrMTabForNewPers(){
      return $this->_clear(10);
    }
    
    /**
     * Get <ign_empt_str_in_n_or_m_tab_for_new_pers> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIgnEmptStrInNOrMTabForNewPers(){
      return $this->_get(10);
    }
    
    /**
     * Set <ign_empt_str_in_n_or_m_tab_for_new_pers> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIgnEmptStrInNOrMTabForNewPers(\dstore\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <ign_empt_str_in_n_or_m_tab_for_new_pers_null> has a value
     *
     * @return boolean
     */
    public function hasIgnEmptStrInNOrMTabForNewPersNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <ign_empt_str_in_n_or_m_tab_for_new_pers_null> value
     *
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function clearIgnEmptStrInNOrMTabForNewPersNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <ign_empt_str_in_n_or_m_tab_for_new_pers_null> value
     *
     * @return boolean
     */
    public function getIgnEmptStrInNOrMTabForNewPersNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <ign_empt_str_in_n_or_m_tab_for_new_pers_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_ImportPersonData_Ad\Parameters
     */
    public function setIgnEmptStrInNOrMTabForNewPersNull( $value){
      return $this->_set(1010, $value);
    }
  }
}

