<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyOrderContentInfo_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\om_ModifyOrderContentInfo_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\booleanValue */
    public $change_all_or_nothing = null;
    
    /**  @var boolean */
    public $change_all_or_nothing_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_new_data = null;
    
    /**  @var boolean */
    public $only_new_data_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyOrderContentInfo_Ad.Parameters');

      // OPTIONAL MESSAGE change_all_or_nothing = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "change_all_or_nothing";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL change_all_or_nothing_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "change_all_or_nothing_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_new_data = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "only_new_data";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_new_data_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "only_new_data_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <change_all_or_nothing> has a value
     *
     * @return boolean
     */
    public function hasChangeAllOrNothing(){
      return $this->_has(1);
    }
    
    /**
     * Clear <change_all_or_nothing> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearChangeAllOrNothing(){
      return $this->_clear(1);
    }
    
    /**
     * Get <change_all_or_nothing> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getChangeAllOrNothing(){
      return $this->_get(1);
    }
    
    /**
     * Set <change_all_or_nothing> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setChangeAllOrNothing(\dstore\engine\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <change_all_or_nothing_null> has a value
     *
     * @return boolean
     */
    public function hasChangeAllOrNothingNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <change_all_or_nothing_null> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearChangeAllOrNothingNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <change_all_or_nothing_null> value
     *
     * @return boolean
     */
    public function getChangeAllOrNothingNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <change_all_or_nothing_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setChangeAllOrNothingNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <only_new_data> has a value
     *
     * @return boolean
     */
    public function hasOnlyNewData(){
      return $this->_has(2);
    }
    
    /**
     * Clear <only_new_data> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearOnlyNewData(){
      return $this->_clear(2);
    }
    
    /**
     * Get <only_new_data> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyNewData(){
      return $this->_get(2);
    }
    
    /**
     * Set <only_new_data> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setOnlyNewData(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <only_new_data_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyNewDataNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <only_new_data_null> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearOnlyNewDataNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <only_new_data_null> value
     *
     * @return boolean
     */
    public function getOnlyNewDataNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <only_new_data_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setOnlyNewDataNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(3);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(3);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCountry(){
      return $this->_get(3);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setCountry(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyOrderContentInfo_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

