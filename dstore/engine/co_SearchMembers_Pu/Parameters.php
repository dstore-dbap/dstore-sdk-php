<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_SearchMembers_Pu.proto
//   Date: 2016-05-19 08:07:40

namespace dstore\engine\co_SearchMembers_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $rowcount = null;
    
    /**  @var boolean */
    public $rowcount_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $result = null;
    
    /**  @var boolean */
    public $result_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $person_identification_values = null;
    
    /**  @var boolean */
    public $person_identification_values_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $search_string = null;
    
    /**  @var boolean */
    public $search_string_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $max_number_of_rows = null;
    
    /**  @var boolean */
    public $max_number_of_rows_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $case_sensitive = null;
    
    /**  @var boolean */
    public $case_sensitive_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $output_characteristic_id1 = null;
    
    /**  @var boolean */
    public $output_characteristic_id1_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $output_characteristic_id2 = null;
    
    /**  @var boolean */
    public $output_characteristic_id2_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $output_characteristic_id3 = null;
    
    /**  @var boolean */
    public $output_characteristic_id3_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $community_binary_category_id = null;
    
    /**  @var boolean */
    public $community_binary_category_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $exact_matching = null;
    
    /**  @var boolean */
    public $exact_matching_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $online_status_instead_of_is_online = null;
    
    /**  @var boolean */
    public $online_status_instead_of_is_online_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $characteristic_id_list = null;
    
    /**  @var boolean */
    public $characteristic_id_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $condition_list = null;
    
    /**  @var boolean */
    public $condition_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $search_only_members_in_one_id = null;
    
    /**  @var boolean */
    public $search_only_members_in_one_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $filter_by_binary_category_id = null;
    
    /**  @var boolean */
    public $filter_by_binary_category_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $last_nickname = null;
    
    /**  @var boolean */
    public $last_nickname_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $next = null;
    
    /**  @var boolean */
    public $next_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $separator_in_ident_vals = null;
    
    /**  @var boolean */
    public $separator_in_ident_vals_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $separator_in_condition_list = null;
    
    /**  @var boolean */
    public $separator_in_condition_list_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_SearchMembers_Pu.Parameters');

      // OPTIONAL MESSAGE rowcount = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "rowcount";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL rowcount_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "rowcount_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE result = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL result_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "result_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unique_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_identification_values = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "person_identification_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_identification_values_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "person_identification_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_string = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "search_string";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_string_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "search_string_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_rows = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "max_number_of_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_rows_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "max_number_of_rows_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE case_sensitive = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "case_sensitive";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL case_sensitive_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "case_sensitive_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id1 = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "output_characteristic_id1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id1_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "output_characteristic_id1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id2 = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "output_characteristic_id2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id2_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "output_characteristic_id2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_id3 = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "output_characteristic_id3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_id3_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "output_characteristic_id3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_binary_category_id = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "community_binary_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_binary_category_id_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "community_binary_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE exact_matching = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "exact_matching";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL exact_matching_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "exact_matching_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE online_status_instead_of_is_online = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "online_status_instead_of_is_online";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL online_status_instead_of_is_online_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "online_status_instead_of_is_online_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_id_list = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characteristic_id_list_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_list = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_list_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1017;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1018;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_only_members_in_one_id = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "search_only_members_in_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_only_members_in_one_id_null = 1019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1019;
      $f->name      = "search_only_members_in_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_binary_category_id = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "filter_by_binary_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_binary_category_id_null = 1020
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1020;
      $f->name      = "filter_by_binary_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_nickname = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "last_nickname";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL last_nickname_null = 1021
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1021;
      $f->name      = "last_nickname_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE next = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "next";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL next_null = 1022
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1022;
      $f->name      = "next_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_ident_vals = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "separator_in_ident_vals";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_ident_vals_null = 1023
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1023;
      $f->name      = "separator_in_ident_vals_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_condition_list = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "separator_in_condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_condition_list_null = 1024
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1024;
      $f->name      = "separator_in_condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <rowcount> has a value
     *
     * @return boolean
     */
    public function hasRowcount(){
      return $this->_has(1);
    }
    
    /**
     * Clear <rowcount> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearRowcount(){
      return $this->_clear(1);
    }
    
    /**
     * Get <rowcount> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRowcount(){
      return $this->_get(1);
    }
    
    /**
     * Set <rowcount> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setRowcount(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <rowcount_null> has a value
     *
     * @return boolean
     */
    public function hasRowcountNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <rowcount_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearRowcountNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <rowcount_null> value
     *
     * @return boolean
     */
    public function getRowcountNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <rowcount_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setRowcountNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <result> has a value
     *
     * @return boolean
     */
    public function hasResult(){
      return $this->_has(2);
    }
    
    /**
     * Clear <result> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearResult(){
      return $this->_clear(2);
    }
    
    /**
     * Get <result> value
     *
     * @return \dstore\values\integerValue
     */
    public function getResult(){
      return $this->_get(2);
    }
    
    /**
     * Set <result> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setResult(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <result_null> has a value
     *
     * @return boolean
     */
    public function hasResultNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <result_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearResultNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <result_null> value
     *
     * @return boolean
     */
    public function getResultNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <result_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setResultNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(3);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setUniqueId(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <person_identification_values> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValues(){
      return $this->_has(4);
    }
    
    /**
     * Clear <person_identification_values> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearPersonIdentificationValues(){
      return $this->_clear(4);
    }
    
    /**
     * Get <person_identification_values> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPersonIdentificationValues(){
      return $this->_get(4);
    }
    
    /**
     * Set <person_identification_values> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setPersonIdentificationValues(\dstore\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <person_identification_values_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdentificationValuesNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <person_identification_values_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearPersonIdentificationValuesNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <person_identification_values_null> value
     *
     * @return boolean
     */
    public function getPersonIdentificationValuesNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <person_identification_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setPersonIdentificationValuesNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(5);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCommunityId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <search_string> has a value
     *
     * @return boolean
     */
    public function hasSearchString(){
      return $this->_has(6);
    }
    
    /**
     * Clear <search_string> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSearchString(){
      return $this->_clear(6);
    }
    
    /**
     * Get <search_string> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSearchString(){
      return $this->_get(6);
    }
    
    /**
     * Set <search_string> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSearchString(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <search_string_null> has a value
     *
     * @return boolean
     */
    public function hasSearchStringNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <search_string_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSearchStringNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <search_string_null> value
     *
     * @return boolean
     */
    public function getSearchStringNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <search_string_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSearchStringNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <max_number_of_rows> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRows(){
      return $this->_has(7);
    }
    
    /**
     * Clear <max_number_of_rows> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearMaxNumberOfRows(){
      return $this->_clear(7);
    }
    
    /**
     * Get <max_number_of_rows> value
     *
     * @return \dstore\values\integerValue
     */
    public function getMaxNumberOfRows(){
      return $this->_get(7);
    }
    
    /**
     * Set <max_number_of_rows> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setMaxNumberOfRows(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <max_number_of_rows_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfRowsNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <max_number_of_rows_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearMaxNumberOfRowsNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <max_number_of_rows_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfRowsNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <max_number_of_rows_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setMaxNumberOfRowsNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <case_sensitive> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitive(){
      return $this->_has(8);
    }
    
    /**
     * Clear <case_sensitive> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCaseSensitive(){
      return $this->_clear(8);
    }
    
    /**
     * Get <case_sensitive> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCaseSensitive(){
      return $this->_get(8);
    }
    
    /**
     * Set <case_sensitive> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCaseSensitive(\dstore\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <case_sensitive_null> has a value
     *
     * @return boolean
     */
    public function hasCaseSensitiveNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <case_sensitive_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCaseSensitiveNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <case_sensitive_null> value
     *
     * @return boolean
     */
    public function getCaseSensitiveNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <case_sensitive_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCaseSensitiveNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <output_characteristic_id1> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1(){
      return $this->_has(9);
    }
    
    /**
     * Clear <output_characteristic_id1> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId1(){
      return $this->_clear(9);
    }
    
    /**
     * Get <output_characteristic_id1> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOutputCharacteristicId1(){
      return $this->_get(9);
    }
    
    /**
     * Set <output_characteristic_id1> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId1(\dstore\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <output_characteristic_id1_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId1Null(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <output_characteristic_id1_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId1Null(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <output_characteristic_id1_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId1Null(){
      return $this->_get(1009);
    }
    
    /**
     * Set <output_characteristic_id1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId1Null( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <output_characteristic_id2> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2(){
      return $this->_has(10);
    }
    
    /**
     * Clear <output_characteristic_id2> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId2(){
      return $this->_clear(10);
    }
    
    /**
     * Get <output_characteristic_id2> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOutputCharacteristicId2(){
      return $this->_get(10);
    }
    
    /**
     * Set <output_characteristic_id2> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId2(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <output_characteristic_id2_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId2Null(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <output_characteristic_id2_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId2Null(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <output_characteristic_id2_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId2Null(){
      return $this->_get(1010);
    }
    
    /**
     * Set <output_characteristic_id2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId2Null( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <output_characteristic_id3> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3(){
      return $this->_has(11);
    }
    
    /**
     * Clear <output_characteristic_id3> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId3(){
      return $this->_clear(11);
    }
    
    /**
     * Get <output_characteristic_id3> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOutputCharacteristicId3(){
      return $this->_get(11);
    }
    
    /**
     * Set <output_characteristic_id3> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId3(\dstore\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <output_characteristic_id3_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicId3Null(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <output_characteristic_id3_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputCharacteristicId3Null(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <output_characteristic_id3_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicId3Null(){
      return $this->_get(1011);
    }
    
    /**
     * Set <output_characteristic_id3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputCharacteristicId3Null( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <community_binary_category_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryId(){
      return $this->_has(12);
    }
    
    /**
     * Clear <community_binary_category_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCommunityBinaryCategoryId(){
      return $this->_clear(12);
    }
    
    /**
     * Get <community_binary_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCommunityBinaryCategoryId(){
      return $this->_get(12);
    }
    
    /**
     * Set <community_binary_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCommunityBinaryCategoryId(\dstore\values\integerValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <community_binary_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryIdNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <community_binary_category_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCommunityBinaryCategoryIdNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <community_binary_category_id_null> value
     *
     * @return boolean
     */
    public function getCommunityBinaryCategoryIdNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <community_binary_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCommunityBinaryCategoryIdNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <exact_matching> has a value
     *
     * @return boolean
     */
    public function hasExactMatching(){
      return $this->_has(13);
    }
    
    /**
     * Clear <exact_matching> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearExactMatching(){
      return $this->_clear(13);
    }
    
    /**
     * Get <exact_matching> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getExactMatching(){
      return $this->_get(13);
    }
    
    /**
     * Set <exact_matching> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setExactMatching(\dstore\values\booleanValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <exact_matching_null> has a value
     *
     * @return boolean
     */
    public function hasExactMatchingNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <exact_matching_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearExactMatchingNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <exact_matching_null> value
     *
     * @return boolean
     */
    public function getExactMatchingNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <exact_matching_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setExactMatchingNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <online_status_instead_of_is_online> has a value
     *
     * @return boolean
     */
    public function hasOnlineStatusInsteadOfIsOnline(){
      return $this->_has(14);
    }
    
    /**
     * Clear <online_status_instead_of_is_online> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOnlineStatusInsteadOfIsOnline(){
      return $this->_clear(14);
    }
    
    /**
     * Get <online_status_instead_of_is_online> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOnlineStatusInsteadOfIsOnline(){
      return $this->_get(14);
    }
    
    /**
     * Set <online_status_instead_of_is_online> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOnlineStatusInsteadOfIsOnline(\dstore\values\booleanValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <online_status_instead_of_is_online_null> has a value
     *
     * @return boolean
     */
    public function hasOnlineStatusInsteadOfIsOnlineNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <online_status_instead_of_is_online_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOnlineStatusInsteadOfIsOnlineNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <online_status_instead_of_is_online_null> value
     *
     * @return boolean
     */
    public function getOnlineStatusInsteadOfIsOnlineNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <online_status_instead_of_is_online_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOnlineStatusInsteadOfIsOnlineNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdList(){
      return $this->_has(15);
    }
    
    /**
     * Clear <characteristic_id_list> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCharacteristicIdList(){
      return $this->_clear(15);
    }
    
    /**
     * Get <characteristic_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCharacteristicIdList(){
      return $this->_get(15);
    }
    
    /**
     * Set <characteristic_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCharacteristicIdList(\dstore\values\stringValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdListNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <characteristic_id_list_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCharacteristicIdListNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getCharacteristicIdListNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCharacteristicIdListNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <condition_list> has a value
     *
     * @return boolean
     */
    public function hasConditionList(){
      return $this->_has(16);
    }
    
    /**
     * Clear <condition_list> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearConditionList(){
      return $this->_clear(16);
    }
    
    /**
     * Get <condition_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getConditionList(){
      return $this->_get(16);
    }
    
    /**
     * Set <condition_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setConditionList(\dstore\values\stringValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasConditionListNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <condition_list_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearConditionListNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <condition_list_null> value
     *
     * @return boolean
     */
    public function getConditionListNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setConditionListNull( $value){
      return $this->_set(1016, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(17);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCountry(){
      return $this->_clear(17);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(17);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1017);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1017);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1017);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1017, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(18);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(18);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(18);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputIntoOneId(\dstore\values\integerValue $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1018);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1018);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1018);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1018, $value);
    }
    
    /**
     * Check if <search_only_members_in_one_id> has a value
     *
     * @return boolean
     */
    public function hasSearchOnlyMembersInOneId(){
      return $this->_has(19);
    }
    
    /**
     * Clear <search_only_members_in_one_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSearchOnlyMembersInOneId(){
      return $this->_clear(19);
    }
    
    /**
     * Get <search_only_members_in_one_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSearchOnlyMembersInOneId(){
      return $this->_get(19);
    }
    
    /**
     * Set <search_only_members_in_one_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSearchOnlyMembersInOneId(\dstore\values\integerValue $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <search_only_members_in_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasSearchOnlyMembersInOneIdNull(){
      return $this->_has(1019);
    }
    
    /**
     * Clear <search_only_members_in_one_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSearchOnlyMembersInOneIdNull(){
      return $this->_clear(1019);
    }
    
    /**
     * Get <search_only_members_in_one_id_null> value
     *
     * @return boolean
     */
    public function getSearchOnlyMembersInOneIdNull(){
      return $this->_get(1019);
    }
    
    /**
     * Set <search_only_members_in_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSearchOnlyMembersInOneIdNull( $value){
      return $this->_set(1019, $value);
    }
    
    /**
     * Check if <filter_by_binary_category_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByBinaryCategoryId(){
      return $this->_has(20);
    }
    
    /**
     * Clear <filter_by_binary_category_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearFilterByBinaryCategoryId(){
      return $this->_clear(20);
    }
    
    /**
     * Get <filter_by_binary_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFilterByBinaryCategoryId(){
      return $this->_get(20);
    }
    
    /**
     * Set <filter_by_binary_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setFilterByBinaryCategoryId(\dstore\values\integerValue $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <filter_by_binary_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByBinaryCategoryIdNull(){
      return $this->_has(1020);
    }
    
    /**
     * Clear <filter_by_binary_category_id_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearFilterByBinaryCategoryIdNull(){
      return $this->_clear(1020);
    }
    
    /**
     * Get <filter_by_binary_category_id_null> value
     *
     * @return boolean
     */
    public function getFilterByBinaryCategoryIdNull(){
      return $this->_get(1020);
    }
    
    /**
     * Set <filter_by_binary_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setFilterByBinaryCategoryIdNull( $value){
      return $this->_set(1020, $value);
    }
    
    /**
     * Check if <last_nickname> has a value
     *
     * @return boolean
     */
    public function hasLastNickname(){
      return $this->_has(21);
    }
    
    /**
     * Clear <last_nickname> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearLastNickname(){
      return $this->_clear(21);
    }
    
    /**
     * Get <last_nickname> value
     *
     * @return \dstore\values\stringValue
     */
    public function getLastNickname(){
      return $this->_get(21);
    }
    
    /**
     * Set <last_nickname> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setLastNickname(\dstore\values\stringValue $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <last_nickname_null> has a value
     *
     * @return boolean
     */
    public function hasLastNicknameNull(){
      return $this->_has(1021);
    }
    
    /**
     * Clear <last_nickname_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearLastNicknameNull(){
      return $this->_clear(1021);
    }
    
    /**
     * Get <last_nickname_null> value
     *
     * @return boolean
     */
    public function getLastNicknameNull(){
      return $this->_get(1021);
    }
    
    /**
     * Set <last_nickname_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setLastNicknameNull( $value){
      return $this->_set(1021, $value);
    }
    
    /**
     * Check if <next> has a value
     *
     * @return boolean
     */
    public function hasNext(){
      return $this->_has(22);
    }
    
    /**
     * Clear <next> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearNext(){
      return $this->_clear(22);
    }
    
    /**
     * Get <next> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getNext(){
      return $this->_get(22);
    }
    
    /**
     * Set <next> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setNext(\dstore\values\booleanValue $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <next_null> has a value
     *
     * @return boolean
     */
    public function hasNextNull(){
      return $this->_has(1022);
    }
    
    /**
     * Clear <next_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearNextNull(){
      return $this->_clear(1022);
    }
    
    /**
     * Get <next_null> value
     *
     * @return boolean
     */
    public function getNextNull(){
      return $this->_get(1022);
    }
    
    /**
     * Set <next_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setNextNull( $value){
      return $this->_set(1022, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentVals(){
      return $this->_has(23);
    }
    
    /**
     * Clear <separator_in_ident_vals> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSeparatorInIdentVals(){
      return $this->_clear(23);
    }
    
    /**
     * Get <separator_in_ident_vals> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSeparatorInIdentVals(){
      return $this->_get(23);
    }
    
    /**
     * Set <separator_in_ident_vals> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSeparatorInIdentVals(\dstore\values\stringValue $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <separator_in_ident_vals_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInIdentValsNull(){
      return $this->_has(1023);
    }
    
    /**
     * Clear <separator_in_ident_vals_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSeparatorInIdentValsNull(){
      return $this->_clear(1023);
    }
    
    /**
     * Get <separator_in_ident_vals_null> value
     *
     * @return boolean
     */
    public function getSeparatorInIdentValsNull(){
      return $this->_get(1023);
    }
    
    /**
     * Set <separator_in_ident_vals_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSeparatorInIdentValsNull( $value){
      return $this->_set(1023, $value);
    }
    
    /**
     * Check if <separator_in_condition_list> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInConditionList(){
      return $this->_has(24);
    }
    
    /**
     * Clear <separator_in_condition_list> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSeparatorInConditionList(){
      return $this->_clear(24);
    }
    
    /**
     * Get <separator_in_condition_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSeparatorInConditionList(){
      return $this->_get(24);
    }
    
    /**
     * Set <separator_in_condition_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSeparatorInConditionList(\dstore\values\stringValue $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <separator_in_condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInConditionListNull(){
      return $this->_has(1024);
    }
    
    /**
     * Clear <separator_in_condition_list_null> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function clearSeparatorInConditionListNull(){
      return $this->_clear(1024);
    }
    
    /**
     * Get <separator_in_condition_list_null> value
     *
     * @return boolean
     */
    public function getSeparatorInConditionListNull(){
      return $this->_get(1024);
    }
    
    /**
     * Set <separator_in_condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_SearchMembers_Pu\Parameters
     */
    public function setSeparatorInConditionListNull( $value){
      return $this->_set(1024, $value);
    }
  }
}

