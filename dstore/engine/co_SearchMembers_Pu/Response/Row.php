<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_SearchMembers_Pu.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\co_SearchMembers_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value1_restricted_by_pattern = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $binary_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value2_restricted_by_pattern = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_member_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value3 = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $online_status = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value3_restricted_by_pattern = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $nickname = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_online = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $characteristic_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $estimated_rows_affected = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $characteristic_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_SearchMembers_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value1_restricted_by_pattern = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "value1_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "binary_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value2_restricted_by_pattern = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "value2_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_member_id = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "community_member_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value3 = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "value3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE online_status = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "online_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value1 = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "value1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value2 = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "value2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value3_restricted_by_pattern = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "value3_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE nickname = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "nickname";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_online = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "is_online";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator1 = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "operator1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition1 = 20002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20002;
      $f->name      = "condition1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition2 = 20003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20003;
      $f->name      = "condition2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator2 = 20004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20004;
      $f->name      = "operator2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_description = 20005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20005;
      $f->name      = "characteristic_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE estimated_rows_affected = 20006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20006;
      $f->name      = "estimated_rows_affected";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_id = 20007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20007;
      $f->name      = "characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <value1_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue1RestrictedByPattern(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <value1_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue1RestrictedByPattern(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <value1_restricted_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue1RestrictedByPattern(){
      return $this->_get(10001);
    }
    
    /**
     * Set <value1_restricted_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue1RestrictedByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <binary_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <binary_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearBinaryId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <binary_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBinaryId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <binary_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setBinaryId(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <value2_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue2RestrictedByPattern(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <value2_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue2RestrictedByPattern(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <value2_restricted_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue2RestrictedByPattern(){
      return $this->_get(10003);
    }
    
    /**
     * Set <value2_restricted_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue2RestrictedByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <community_member_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityMemberId(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <community_member_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearCommunityMemberId(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <community_member_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityMemberId(){
      return $this->_get(10004);
    }
    
    /**
     * Set <community_member_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setCommunityMemberId(\dstore\engine\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <value3> has a value
     *
     * @return boolean
     */
    public function hasValue3(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <value3> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue3(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <value3> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue3(){
      return $this->_get(10005);
    }
    
    /**
     * Set <value3> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue3(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <online_status> has a value
     *
     * @return boolean
     */
    public function hasOnlineStatus(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <online_status> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearOnlineStatus(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <online_status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOnlineStatus(){
      return $this->_get(10006);
    }
    
    /**
     * Set <online_status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setOnlineStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <value1> has a value
     *
     * @return boolean
     */
    public function hasValue1(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <value1> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue1(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <value1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue1(){
      return $this->_get(10007);
    }
    
    /**
     * Set <value1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue1(\dstore\engine\values\stringValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <value2> has a value
     *
     * @return boolean
     */
    public function hasValue2(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <value2> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue2(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <value2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue2(){
      return $this->_get(10008);
    }
    
    /**
     * Set <value2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue2(\dstore\engine\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <value3_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasValue3RestrictedByPattern(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <value3_restricted_by_pattern> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearValue3RestrictedByPattern(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <value3_restricted_by_pattern> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue3RestrictedByPattern(){
      return $this->_get(10009);
    }
    
    /**
     * Set <value3_restricted_by_pattern> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setValue3RestrictedByPattern(\dstore\engine\values\stringValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <nickname> has a value
     *
     * @return boolean
     */
    public function hasNickname(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <nickname> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearNickname(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <nickname> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNickname(){
      return $this->_get(10010);
    }
    
    /**
     * Set <nickname> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setNickname(\dstore\engine\values\stringValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <is_online> has a value
     *
     * @return boolean
     */
    public function hasIsOnline(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <is_online> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearIsOnline(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <is_online> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsOnline(){
      return $this->_get(10011);
    }
    
    /**
     * Set <is_online> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setIsOnline(\dstore\engine\values\booleanValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <operator1> has a value
     *
     * @return boolean
     */
    public function hasOperator1(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <operator1> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearOperator1(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <operator1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator1(){
      return $this->_get(20001);
    }
    
    /**
     * Set <operator1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setOperator1(\dstore\engine\values\stringValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <condition1> has a value
     *
     * @return boolean
     */
    public function hasCondition1(){
      return $this->_has(20002);
    }
    
    /**
     * Clear <condition1> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearCondition1(){
      return $this->_clear(20002);
    }
    
    /**
     * Get <condition1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition1(){
      return $this->_get(20002);
    }
    
    /**
     * Set <condition1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setCondition1(\dstore\engine\values\stringValue $value){
      return $this->_set(20002, $value);
    }
    
    /**
     * Check if <condition2> has a value
     *
     * @return boolean
     */
    public function hasCondition2(){
      return $this->_has(20003);
    }
    
    /**
     * Clear <condition2> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearCondition2(){
      return $this->_clear(20003);
    }
    
    /**
     * Get <condition2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition2(){
      return $this->_get(20003);
    }
    
    /**
     * Set <condition2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setCondition2(\dstore\engine\values\stringValue $value){
      return $this->_set(20003, $value);
    }
    
    /**
     * Check if <operator2> has a value
     *
     * @return boolean
     */
    public function hasOperator2(){
      return $this->_has(20004);
    }
    
    /**
     * Clear <operator2> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearOperator2(){
      return $this->_clear(20004);
    }
    
    /**
     * Get <operator2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator2(){
      return $this->_get(20004);
    }
    
    /**
     * Set <operator2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setOperator2(\dstore\engine\values\stringValue $value){
      return $this->_set(20004, $value);
    }
    
    /**
     * Check if <characteristic_description> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicDescription(){
      return $this->_has(20005);
    }
    
    /**
     * Clear <characteristic_description> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearCharacteristicDescription(){
      return $this->_clear(20005);
    }
    
    /**
     * Get <characteristic_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCharacteristicDescription(){
      return $this->_get(20005);
    }
    
    /**
     * Set <characteristic_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setCharacteristicDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(20005, $value);
    }
    
    /**
     * Check if <estimated_rows_affected> has a value
     *
     * @return boolean
     */
    public function hasEstimatedRowsAffected(){
      return $this->_has(20006);
    }
    
    /**
     * Clear <estimated_rows_affected> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearEstimatedRowsAffected(){
      return $this->_clear(20006);
    }
    
    /**
     * Get <estimated_rows_affected> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getEstimatedRowsAffected(){
      return $this->_get(20006);
    }
    
    /**
     * Set <estimated_rows_affected> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setEstimatedRowsAffected(\dstore\engine\values\integerValue $value){
      return $this->_set(20006, $value);
    }
    
    /**
     * Check if <characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicId(){
      return $this->_has(20007);
    }
    
    /**
     * Clear <characteristic_id> value
     *
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function clearCharacteristicId(){
      return $this->_clear(20007);
    }
    
    /**
     * Get <characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCharacteristicId(){
      return $this->_get(20007);
    }
    
    /**
     * Set <characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_SearchMembers_Pu\Response\Row
     */
    public function setCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(20007, $value);
    }
  }
}

