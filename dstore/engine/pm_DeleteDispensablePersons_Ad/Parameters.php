<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_DeleteDispensablePersons_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\pm_DeleteDispensablePersons_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_persons_to_delete = null;
    
    /**  @var boolean */
    public $max_number_of_persons_to_delete_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $persons_created_during_last_x_days = null;
    
    /**  @var boolean */
    public $persons_created_during_last_x_days_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_DeleteDispensablePersons_Ad.Parameters');

      // OPTIONAL MESSAGE person_type_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_persons_to_delete = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "max_number_of_persons_to_delete";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_persons_to_delete_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "max_number_of_persons_to_delete_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE persons_created_during_last_x_days = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "persons_created_during_last_x_days";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL persons_created_during_last_x_days_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "persons_created_during_last_x_days_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setPersonTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <max_number_of_persons_to_delete> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfPersonsToDelete(){
      return $this->_has(2);
    }
    
    /**
     * Clear <max_number_of_persons_to_delete> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearMaxNumberOfPersonsToDelete(){
      return $this->_clear(2);
    }
    
    /**
     * Get <max_number_of_persons_to_delete> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfPersonsToDelete(){
      return $this->_get(2);
    }
    
    /**
     * Set <max_number_of_persons_to_delete> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setMaxNumberOfPersonsToDelete(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <max_number_of_persons_to_delete_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfPersonsToDeleteNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <max_number_of_persons_to_delete_null> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearMaxNumberOfPersonsToDeleteNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <max_number_of_persons_to_delete_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfPersonsToDeleteNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <max_number_of_persons_to_delete_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setMaxNumberOfPersonsToDeleteNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <persons_created_during_last_x_days> has a value
     *
     * @return boolean
     */
    public function hasPersonsCreatedDuringLastXDays(){
      return $this->_has(3);
    }
    
    /**
     * Clear <persons_created_during_last_x_days> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearPersonsCreatedDuringLastXDays(){
      return $this->_clear(3);
    }
    
    /**
     * Get <persons_created_during_last_x_days> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonsCreatedDuringLastXDays(){
      return $this->_get(3);
    }
    
    /**
     * Set <persons_created_during_last_x_days> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setPersonsCreatedDuringLastXDays(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <persons_created_during_last_x_days_null> has a value
     *
     * @return boolean
     */
    public function hasPersonsCreatedDuringLastXDaysNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <persons_created_during_last_x_days_null> value
     *
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function clearPersonsCreatedDuringLastXDaysNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <persons_created_during_last_x_days_null> value
     *
     * @return boolean
     */
    public function getPersonsCreatedDuringLastXDaysNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <persons_created_during_last_x_days_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_DeleteDispensablePersons_Ad\Parameters
     */
    public function setPersonsCreatedDuringLastXDaysNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

