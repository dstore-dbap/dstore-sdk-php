<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/ac_GetActions_Ad.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\ac_GetActions_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $status = null;
    
    /**  @var boolean */
    public $status_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $action_id = null;
    
    /**  @var boolean */
    public $action_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $command_id = null;
    
    /**  @var boolean */
    public $command_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_parameter_values = null;
    
    /**  @var boolean */
    public $include_parameter_values_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.ac_GetActions_Ad.Parameters');

      // OPTIONAL MESSAGE status = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL status_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE action_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "action_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL action_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "action_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE command_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "command_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL command_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "command_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_parameter_values = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "include_parameter_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_parameter_values_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "include_parameter_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(1);
    }
    
    /**
     * Clear <status> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearStatus(){
      return $this->_clear(1);
    }
    
    /**
     * Get <status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStatus(){
      return $this->_get(1);
    }
    
    /**
     * Set <status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <status_null> has a value
     *
     * @return boolean
     */
    public function hasStatusNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <status_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearStatusNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <status_null> value
     *
     * @return boolean
     */
    public function getStatusNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setStatusNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <action_id> has a value
     *
     * @return boolean
     */
    public function hasActionId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <action_id> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearActionId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <action_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getActionId(){
      return $this->_get(4);
    }
    
    /**
     * Set <action_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setActionId(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <action_id_null> has a value
     *
     * @return boolean
     */
    public function hasActionIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <action_id_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearActionIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <action_id_null> value
     *
     * @return boolean
     */
    public function getActionIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <action_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setActionIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <command_id> has a value
     *
     * @return boolean
     */
    public function hasCommandId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <command_id> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearCommandId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <command_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommandId(){
      return $this->_get(5);
    }
    
    /**
     * Set <command_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setCommandId(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <command_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommandIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <command_id_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearCommandIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <command_id_null> value
     *
     * @return boolean
     */
    public function getCommandIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <command_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setCommandIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <include_parameter_values> has a value
     *
     * @return boolean
     */
    public function hasIncludeParameterValues(){
      return $this->_has(6);
    }
    
    /**
     * Clear <include_parameter_values> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearIncludeParameterValues(){
      return $this->_clear(6);
    }
    
    /**
     * Get <include_parameter_values> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeParameterValues(){
      return $this->_get(6);
    }
    
    /**
     * Set <include_parameter_values> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setIncludeParameterValues(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <include_parameter_values_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeParameterValuesNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <include_parameter_values_null> value
     *
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function clearIncludeParameterValuesNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <include_parameter_values_null> value
     *
     * @return boolean
     */
    public function getIncludeParameterValuesNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <include_parameter_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_GetActions_Ad\Parameters
     */
    public function setIncludeParameterValuesNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

