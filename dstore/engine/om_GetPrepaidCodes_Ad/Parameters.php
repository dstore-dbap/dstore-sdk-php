<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPrepaidCodes_Ad.proto
//   Date: 2015-10-06 11:19:59

namespace dstore\engine\om_GetPrepaidCodes_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $prepaid_code = null;
    
    /**  @var boolean */
    public $prepaid_code_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_code_valid_until = null;
    
    /**  @var boolean */
    public $from_code_valid_until_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_code_valid_until = null;
    
    /**  @var boolean */
    public $to_code_valid_until_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $filter_by_use_state = null;
    
    /**  @var boolean */
    public $filter_by_use_state_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $order_by = null;
    
    /**  @var boolean */
    public $order_by_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPrepaidCodes_Ad.Parameters');

      // OPTIONAL MESSAGE prepaid_code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "prepaid_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL prepaid_code_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "prepaid_code_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_code_valid_until = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "from_code_valid_until";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_code_valid_until_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "from_code_valid_until_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_code_valid_until = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "to_code_valid_until";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_code_valid_until_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "to_code_valid_until_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_use_state = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "filter_by_use_state";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_use_state_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "filter_by_use_state_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_by = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "order_by";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "order_by_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <prepaid_code> has a value
     *
     * @return boolean
     */
    public function hasPrepaidCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <prepaid_code> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearPrepaidCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <prepaid_code> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPrepaidCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <prepaid_code> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setPrepaidCode(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <prepaid_code_null> has a value
     *
     * @return boolean
     */
    public function hasPrepaidCodeNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <prepaid_code_null> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearPrepaidCodeNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <prepaid_code_null> value
     *
     * @return boolean
     */
    public function getPrepaidCodeNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <prepaid_code_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setPrepaidCodeNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <from_code_valid_until> has a value
     *
     * @return boolean
     */
    public function hasFromCodeValidUntil(){
      return $this->_has(2);
    }
    
    /**
     * Clear <from_code_valid_until> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearFromCodeValidUntil(){
      return $this->_clear(2);
    }
    
    /**
     * Get <from_code_valid_until> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromCodeValidUntil(){
      return $this->_get(2);
    }
    
    /**
     * Set <from_code_valid_until> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setFromCodeValidUntil(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <from_code_valid_until_null> has a value
     *
     * @return boolean
     */
    public function hasFromCodeValidUntilNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <from_code_valid_until_null> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearFromCodeValidUntilNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <from_code_valid_until_null> value
     *
     * @return boolean
     */
    public function getFromCodeValidUntilNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <from_code_valid_until_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setFromCodeValidUntilNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <to_code_valid_until> has a value
     *
     * @return boolean
     */
    public function hasToCodeValidUntil(){
      return $this->_has(3);
    }
    
    /**
     * Clear <to_code_valid_until> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearToCodeValidUntil(){
      return $this->_clear(3);
    }
    
    /**
     * Get <to_code_valid_until> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToCodeValidUntil(){
      return $this->_get(3);
    }
    
    /**
     * Set <to_code_valid_until> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setToCodeValidUntil(\dstore\engine\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <to_code_valid_until_null> has a value
     *
     * @return boolean
     */
    public function hasToCodeValidUntilNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <to_code_valid_until_null> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearToCodeValidUntilNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <to_code_valid_until_null> value
     *
     * @return boolean
     */
    public function getToCodeValidUntilNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <to_code_valid_until_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setToCodeValidUntilNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <filter_by_use_state> has a value
     *
     * @return boolean
     */
    public function hasFilterByUseState(){
      return $this->_has(4);
    }
    
    /**
     * Clear <filter_by_use_state> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearFilterByUseState(){
      return $this->_clear(4);
    }
    
    /**
     * Get <filter_by_use_state> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFilterByUseState(){
      return $this->_get(4);
    }
    
    /**
     * Set <filter_by_use_state> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setFilterByUseState(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <filter_by_use_state_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByUseStateNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <filter_by_use_state_null> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearFilterByUseStateNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <filter_by_use_state_null> value
     *
     * @return boolean
     */
    public function getFilterByUseStateNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <filter_by_use_state_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setFilterByUseStateNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <order_by> has a value
     *
     * @return boolean
     */
    public function hasOrderBy(){
      return $this->_has(5);
    }
    
    /**
     * Clear <order_by> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearOrderBy(){
      return $this->_clear(5);
    }
    
    /**
     * Get <order_by> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOrderBy(){
      return $this->_get(5);
    }
    
    /**
     * Set <order_by> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setOrderBy(\dstore\engine\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <order_by_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <order_by_null> value
     *
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function clearOrderByNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <order_by_null> value
     *
     * @return boolean
     */
    public function getOrderByNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <order_by_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetPrepaidCodes_Ad\Parameters
     */
    public function setOrderByNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

