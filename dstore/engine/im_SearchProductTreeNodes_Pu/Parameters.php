<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_SearchProductTreeNodes_Pu.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\im_SearchProductTreeNodes_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $domain_tree_node_id = null;
    
    /**  @var boolean */
    public $domain_tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $node_characteristic_ids = null;
    
    /**  @var boolean */
    public $node_characteristic_ids_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value = null;
    
    /**  @var boolean */
    public $value_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_like = null;
    
    /**  @var boolean */
    public $is_like_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_inherited = null;
    
    /**  @var boolean */
    public $include_inherited_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $start_at_row_no = null;
    
    /**  @var boolean */
    public $start_at_row_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_value_details = null;
    
    /**  @var boolean */
    public $include_value_details_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_variants = null;
    
    /**  @var boolean */
    public $include_variants_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $maintain_search_item_lacks = null;
    
    /**  @var boolean */
    public $maintain_search_item_lacks_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $binary_characteristic_value_id = null;
    
    /**  @var boolean */
    public $binary_characteristic_value_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $filter_by_characteristic_id = null;
    
    /**  @var boolean */
    public $filter_by_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $filter_by_charac_value = null;
    
    /**  @var boolean */
    public $filter_by_charac_value_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $negate_filter_by_params = null;
    
    /**  @var boolean */
    public $negate_filter_by_params_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $sort_by_characteristic_id_list = null;
    
    /**  @var boolean */
    public $sort_by_characteristic_id_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $sort_option_list = null;
    
    /**  @var boolean */
    public $sort_option_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $inherit_depth_option_list = null;
    
    /**  @var boolean */
    public $inherit_depth_option_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $recursive_evaluation_option_list = null;
    
    /**  @var boolean */
    public $recursive_evaluation_option_list_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_values_for_sort_by_characs = null;
    
    /**  @var boolean */
    public $get_values_for_sort_by_characs_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_SearchProductTreeNodes_Pu.Parameters');

      // OPTIONAL MESSAGE domain_tree_node_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "domain_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL domain_tree_node_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "domain_tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "node_characteristic_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_ids_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "node_characteristic_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_like = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "is_like";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL is_like_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "is_like_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_inherited = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "include_inherited";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_inherited_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "include_inherited_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_at_row_no = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "start_at_row_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL start_at_row_no_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "start_at_row_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_value_details = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "include_value_details";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_value_details_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "include_value_details_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_variants = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "include_variants";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_variants_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "include_variants_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE maintain_search_item_lacks = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "maintain_search_item_lacks";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL maintain_search_item_lacks_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "maintain_search_item_lacks_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_characteristic_value_id = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "binary_characteristic_value_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL binary_characteristic_value_id_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "binary_characteristic_value_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_characteristic_id = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "filter_by_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_characteristic_id_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "filter_by_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_charac_value = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "filter_by_charac_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_charac_value_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "filter_by_charac_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE negate_filter_by_params = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "negate_filter_by_params";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL negate_filter_by_params_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "negate_filter_by_params_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_by_characteristic_id_list = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "sort_by_characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_by_characteristic_id_list_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "sort_by_characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_option_list = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "sort_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_option_list_null = 1017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1017;
      $f->name      = "sort_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth_option_list = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "inherit_depth_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL inherit_depth_option_list_null = 1018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1018;
      $f->name      = "inherit_depth_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation_option_list = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "recursive_evaluation_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL recursive_evaluation_option_list_null = 1019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1019;
      $f->name      = "recursive_evaluation_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_values_for_sort_by_characs = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "get_values_for_sort_by_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_values_for_sort_by_characs_null = 1020
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1020;
      $f->name      = "get_values_for_sort_by_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1021
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1021;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <domain_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <domain_tree_node_id> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearDomainTreeNodeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <domain_tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getDomainTreeNodeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <domain_tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setDomainTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <domain_tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <domain_tree_node_id_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearDomainTreeNodeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <domain_tree_node_id_null> value
     *
     * @return boolean
     */
    public function getDomainTreeNodeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <domain_tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setDomainTreeNodeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <node_characteristic_ids> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <node_characteristic_ids> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearNodeCharacteristicIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <node_characteristic_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNodeCharacteristicIds(){
      return $this->_get(2);
    }
    
    /**
     * Set <node_characteristic_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setNodeCharacteristicIds(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <node_characteristic_ids_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicIdsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <node_characteristic_ids_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearNodeCharacteristicIdsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <node_characteristic_ids_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicIdsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <node_characteristic_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setNodeCharacteristicIdsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(3);
    }
    
    /**
     * Clear <value> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearValue(){
      return $this->_clear(3);
    }
    
    /**
     * Get <value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue(){
      return $this->_get(3);
    }
    
    /**
     * Set <value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setValue(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <value_null> has a value
     *
     * @return boolean
     */
    public function hasValueNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <value_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearValueNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <value_null> value
     *
     * @return boolean
     */
    public function getValueNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setValueNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <is_like> has a value
     *
     * @return boolean
     */
    public function hasIsLike(){
      return $this->_has(4);
    }
    
    /**
     * Clear <is_like> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIsLike(){
      return $this->_clear(4);
    }
    
    /**
     * Get <is_like> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsLike(){
      return $this->_get(4);
    }
    
    /**
     * Set <is_like> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIsLike(\dstore\engine\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <is_like_null> has a value
     *
     * @return boolean
     */
    public function hasIsLikeNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <is_like_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIsLikeNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <is_like_null> value
     *
     * @return boolean
     */
    public function getIsLikeNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <is_like_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIsLikeNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <include_inherited> has a value
     *
     * @return boolean
     */
    public function hasIncludeInherited(){
      return $this->_has(5);
    }
    
    /**
     * Clear <include_inherited> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeInherited(){
      return $this->_clear(5);
    }
    
    /**
     * Get <include_inherited> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeInherited(){
      return $this->_get(5);
    }
    
    /**
     * Set <include_inherited> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeInherited(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <include_inherited_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeInheritedNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <include_inherited_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeInheritedNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <include_inherited_null> value
     *
     * @return boolean
     */
    public function getIncludeInheritedNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <include_inherited_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeInheritedNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <start_at_row_no> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNo(){
      return $this->_has(6);
    }
    
    /**
     * Clear <start_at_row_no> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearStartAtRowNo(){
      return $this->_clear(6);
    }
    
    /**
     * Get <start_at_row_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStartAtRowNo(){
      return $this->_get(6);
    }
    
    /**
     * Set <start_at_row_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setStartAtRowNo(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <start_at_row_no_null> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNoNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <start_at_row_no_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearStartAtRowNoNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <start_at_row_no_null> value
     *
     * @return boolean
     */
    public function getStartAtRowNoNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <start_at_row_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setStartAtRowNoNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(7);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(7);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(7);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <include_value_details> has a value
     *
     * @return boolean
     */
    public function hasIncludeValueDetails(){
      return $this->_has(8);
    }
    
    /**
     * Clear <include_value_details> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeValueDetails(){
      return $this->_clear(8);
    }
    
    /**
     * Get <include_value_details> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeValueDetails(){
      return $this->_get(8);
    }
    
    /**
     * Set <include_value_details> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeValueDetails(\dstore\engine\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <include_value_details_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeValueDetailsNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <include_value_details_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeValueDetailsNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <include_value_details_null> value
     *
     * @return boolean
     */
    public function getIncludeValueDetailsNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <include_value_details_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeValueDetailsNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <include_variants> has a value
     *
     * @return boolean
     */
    public function hasIncludeVariants(){
      return $this->_has(9);
    }
    
    /**
     * Clear <include_variants> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeVariants(){
      return $this->_clear(9);
    }
    
    /**
     * Get <include_variants> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeVariants(){
      return $this->_get(9);
    }
    
    /**
     * Set <include_variants> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeVariants(\dstore\engine\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <include_variants_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeVariantsNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <include_variants_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearIncludeVariantsNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <include_variants_null> value
     *
     * @return boolean
     */
    public function getIncludeVariantsNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <include_variants_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setIncludeVariantsNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <maintain_search_item_lacks> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchItemLacks(){
      return $this->_has(10);
    }
    
    /**
     * Clear <maintain_search_item_lacks> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearMaintainSearchItemLacks(){
      return $this->_clear(10);
    }
    
    /**
     * Get <maintain_search_item_lacks> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getMaintainSearchItemLacks(){
      return $this->_get(10);
    }
    
    /**
     * Set <maintain_search_item_lacks> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setMaintainSearchItemLacks(\dstore\engine\values\booleanValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <maintain_search_item_lacks_null> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchItemLacksNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <maintain_search_item_lacks_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearMaintainSearchItemLacksNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <maintain_search_item_lacks_null> value
     *
     * @return boolean
     */
    public function getMaintainSearchItemLacksNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <maintain_search_item_lacks_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setMaintainSearchItemLacksNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueId(){
      return $this->_has(11);
    }
    
    /**
     * Clear <binary_characteristic_value_id> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueId(){
      return $this->_clear(11);
    }
    
    /**
     * Get <binary_characteristic_value_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBinaryCharacteristicValueId(){
      return $this->_get(11);
    }
    
    /**
     * Set <binary_characteristic_value_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setBinaryCharacteristicValueId(\dstore\engine\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id_null> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueIdNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <binary_characteristic_value_id_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueIdNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <binary_characteristic_value_id_null> value
     *
     * @return boolean
     */
    public function getBinaryCharacteristicValueIdNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <binary_characteristic_value_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setBinaryCharacteristicValueIdNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicId(){
      return $this->_has(12);
    }
    
    /**
     * Clear <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearFilterByCharacteristicId(){
      return $this->_clear(12);
    }
    
    /**
     * Get <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFilterByCharacteristicId(){
      return $this->_get(12);
    }
    
    /**
     * Set <filter_by_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setFilterByCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicIdNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <filter_by_characteristic_id_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearFilterByCharacteristicIdNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <filter_by_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacteristicIdNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <filter_by_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setFilterByCharacteristicIdNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <filter_by_charac_value> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValue(){
      return $this->_has(13);
    }
    
    /**
     * Clear <filter_by_charac_value> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearFilterByCharacValue(){
      return $this->_clear(13);
    }
    
    /**
     * Get <filter_by_charac_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFilterByCharacValue(){
      return $this->_get(13);
    }
    
    /**
     * Set <filter_by_charac_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setFilterByCharacValue(\dstore\engine\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <filter_by_charac_value_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValueNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <filter_by_charac_value_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearFilterByCharacValueNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <filter_by_charac_value_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacValueNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <filter_by_charac_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setFilterByCharacValueNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(14);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearCountry(){
      return $this->_clear(14);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCountry(){
      return $this->_get(14);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setCountry(\dstore\engine\values\stringValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <negate_filter_by_params> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParams(){
      return $this->_has(15);
    }
    
    /**
     * Clear <negate_filter_by_params> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearNegateFilterByParams(){
      return $this->_clear(15);
    }
    
    /**
     * Get <negate_filter_by_params> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getNegateFilterByParams(){
      return $this->_get(15);
    }
    
    /**
     * Set <negate_filter_by_params> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setNegateFilterByParams(\dstore\engine\values\booleanValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <negate_filter_by_params_null> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParamsNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <negate_filter_by_params_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearNegateFilterByParamsNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <negate_filter_by_params_null> value
     *
     * @return boolean
     */
    public function getNegateFilterByParamsNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <negate_filter_by_params_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setNegateFilterByParamsNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <sort_by_characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdList(){
      return $this->_has(16);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearSortByCharacteristicIdList(){
      return $this->_clear(16);
    }
    
    /**
     * Get <sort_by_characteristic_id_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSortByCharacteristicIdList(){
      return $this->_get(16);
    }
    
    /**
     * Set <sort_by_characteristic_id_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setSortByCharacteristicIdList(\dstore\engine\values\stringValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <sort_by_characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdListNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearSortByCharacteristicIdListNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <sort_by_characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getSortByCharacteristicIdListNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <sort_by_characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setSortByCharacteristicIdListNull( $value){
      return $this->_set(1016, $value);
    }
    
    /**
     * Check if <sort_option_list> has a value
     *
     * @return boolean
     */
    public function hasSortOptionList(){
      return $this->_has(17);
    }
    
    /**
     * Clear <sort_option_list> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearSortOptionList(){
      return $this->_clear(17);
    }
    
    /**
     * Get <sort_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSortOptionList(){
      return $this->_get(17);
    }
    
    /**
     * Set <sort_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setSortOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <sort_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortOptionListNull(){
      return $this->_has(1017);
    }
    
    /**
     * Clear <sort_option_list_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearSortOptionListNull(){
      return $this->_clear(1017);
    }
    
    /**
     * Get <sort_option_list_null> value
     *
     * @return boolean
     */
    public function getSortOptionListNull(){
      return $this->_get(1017);
    }
    
    /**
     * Set <sort_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setSortOptionListNull( $value){
      return $this->_set(1017, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionList(){
      return $this->_has(18);
    }
    
    /**
     * Clear <inherit_depth_option_list> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearInheritDepthOptionList(){
      return $this->_clear(18);
    }
    
    /**
     * Get <inherit_depth_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getInheritDepthOptionList(){
      return $this->_get(18);
    }
    
    /**
     * Set <inherit_depth_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setInheritDepthOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionListNull(){
      return $this->_has(1018);
    }
    
    /**
     * Clear <inherit_depth_option_list_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearInheritDepthOptionListNull(){
      return $this->_clear(1018);
    }
    
    /**
     * Get <inherit_depth_option_list_null> value
     *
     * @return boolean
     */
    public function getInheritDepthOptionListNull(){
      return $this->_get(1018);
    }
    
    /**
     * Set <inherit_depth_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setInheritDepthOptionListNull( $value){
      return $this->_set(1018, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionList(){
      return $this->_has(19);
    }
    
    /**
     * Clear <recursive_evaluation_option_list> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionList(){
      return $this->_clear(19);
    }
    
    /**
     * Get <recursive_evaluation_option_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getRecursiveEvaluationOptionList(){
      return $this->_get(19);
    }
    
    /**
     * Set <recursive_evaluation_option_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionList(\dstore\engine\values\stringValue $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionListNull(){
      return $this->_has(1019);
    }
    
    /**
     * Clear <recursive_evaluation_option_list_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionListNull(){
      return $this->_clear(1019);
    }
    
    /**
     * Get <recursive_evaluation_option_list_null> value
     *
     * @return boolean
     */
    public function getRecursiveEvaluationOptionListNull(){
      return $this->_get(1019);
    }
    
    /**
     * Set <recursive_evaluation_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionListNull( $value){
      return $this->_set(1019, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacs(){
      return $this->_has(20);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacs(){
      return $this->_clear(20);
    }
    
    /**
     * Get <get_values_for_sort_by_characs> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetValuesForSortByCharacs(){
      return $this->_get(20);
    }
    
    /**
     * Set <get_values_for_sort_by_characs> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setGetValuesForSortByCharacs(\dstore\engine\values\booleanValue $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs_null> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacsNull(){
      return $this->_has(1020);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacsNull(){
      return $this->_clear(1020);
    }
    
    /**
     * Get <get_values_for_sort_by_characs_null> value
     *
     * @return boolean
     */
    public function getGetValuesForSortByCharacsNull(){
      return $this->_get(1020);
    }
    
    /**
     * Set <get_values_for_sort_by_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setGetValuesForSortByCharacsNull( $value){
      return $this->_set(1020, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(21);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(21);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(21);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setOutputIntoOneId(\dstore\engine\values\integerValue $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1021);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1021);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1021);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchProductTreeNodes_Pu\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1021, $value);
    }
  }
}

