<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_SearchCharacteristics_Pu.proto
//   Date: 2015-10-06 11:19:49

namespace dstore\engine\im_SearchCharacteristics_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $node_characteristic_ids = null;
    
    /**  @var boolean */
    public $node_characteristic_ids_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value = null;
    
    /**  @var boolean */
    public $value_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_like = null;
    
    /**  @var boolean */
    public $is_like_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $date = null;
    
    /**  @var boolean */
    public $date_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_inherited = null;
    
    /**  @var boolean */
    public $include_inherited_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $language_id = null;
    
    /**  @var boolean */
    public $language_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_node_description = null;
    
    /**  @var boolean */
    public $include_node_description_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $result_up_to_level_no = null;
    
    /**  @var boolean */
    public $result_up_to_level_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $search_up_to_level_no = null;
    
    /**  @var boolean */
    public $search_up_to_level_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $start_at_row_no = null;
    
    /**  @var boolean */
    public $start_at_row_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $maintain_search_item_lacks = null;
    
    /**  @var boolean */
    public $maintain_search_item_lacks_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $filter_by_characteristic_id = null;
    
    /**  @var boolean */
    public $filter_by_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $filter_by_charac_value = null;
    
    /**  @var boolean */
    public $filter_by_charac_value_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $sort_result = null;
    
    /**  @var boolean */
    public $sort_result_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $negate_filter_by_params = null;
    
    /**  @var boolean */
    public $negate_filter_by_params_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_SearchCharacteristics_Pu.Parameters');

      // OPTIONAL MESSAGE node_characteristic_ids = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "node_characteristic_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL node_characteristic_ids_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "node_characteristic_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_like = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "is_like";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL is_like_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "is_like_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_inherited = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "include_inherited";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_inherited_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "include_inherited_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE language_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "language_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL language_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "language_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_node_description = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "include_node_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_node_description_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "include_node_description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE result_up_to_level_no = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "result_up_to_level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL result_up_to_level_no_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "result_up_to_level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_up_to_level_no = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "search_up_to_level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_up_to_level_no_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "search_up_to_level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_at_row_no = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "start_at_row_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL start_at_row_no_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "start_at_row_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE maintain_search_item_lacks = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "maintain_search_item_lacks";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL maintain_search_item_lacks_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "maintain_search_item_lacks_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_characteristic_id = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "filter_by_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_characteristic_id_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "filter_by_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_charac_value = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "filter_by_charac_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_charac_value_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "filter_by_charac_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_result = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "sort_result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_result_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "sort_result_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE negate_filter_by_params = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "negate_filter_by_params";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL negate_filter_by_params_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "negate_filter_by_params_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <node_characteristic_ids> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicIds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <node_characteristic_ids> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearNodeCharacteristicIds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <node_characteristic_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNodeCharacteristicIds(){
      return $this->_get(1);
    }
    
    /**
     * Set <node_characteristic_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setNodeCharacteristicIds(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <node_characteristic_ids_null> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicIdsNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <node_characteristic_ids_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearNodeCharacteristicIdsNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <node_characteristic_ids_null> value
     *
     * @return boolean
     */
    public function getNodeCharacteristicIdsNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <node_characteristic_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setNodeCharacteristicIdsNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setValue(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <value_null> has a value
     *
     * @return boolean
     */
    public function hasValueNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <value_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearValueNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <value_null> value
     *
     * @return boolean
     */
    public function getValueNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setValueNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <is_like> has a value
     *
     * @return boolean
     */
    public function hasIsLike(){
      return $this->_has(3);
    }
    
    /**
     * Clear <is_like> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIsLike(){
      return $this->_clear(3);
    }
    
    /**
     * Get <is_like> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsLike(){
      return $this->_get(3);
    }
    
    /**
     * Set <is_like> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIsLike(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <is_like_null> has a value
     *
     * @return boolean
     */
    public function hasIsLikeNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <is_like_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIsLikeNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <is_like_null> value
     *
     * @return boolean
     */
    public function getIsLikeNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <is_like_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIsLikeNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <date> has a value
     *
     * @return boolean
     */
    public function hasDate(){
      return $this->_has(4);
    }
    
    /**
     * Clear <date> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearDate(){
      return $this->_clear(4);
    }
    
    /**
     * Get <date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getDate(){
      return $this->_get(4);
    }
    
    /**
     * Set <date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <date_null> has a value
     *
     * @return boolean
     */
    public function hasDateNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <date_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearDateNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <date_null> value
     *
     * @return boolean
     */
    public function getDateNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setDateNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <include_inherited> has a value
     *
     * @return boolean
     */
    public function hasIncludeInherited(){
      return $this->_has(5);
    }
    
    /**
     * Clear <include_inherited> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIncludeInherited(){
      return $this->_clear(5);
    }
    
    /**
     * Get <include_inherited> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeInherited(){
      return $this->_get(5);
    }
    
    /**
     * Set <include_inherited> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIncludeInherited(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <include_inherited_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeInheritedNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <include_inherited_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIncludeInheritedNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <include_inherited_null> value
     *
     * @return boolean
     */
    public function getIncludeInheritedNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <include_inherited_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIncludeInheritedNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <language_id> has a value
     *
     * @return boolean
     */
    public function hasLanguageId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <language_id> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearLanguageId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <language_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLanguageId(){
      return $this->_get(6);
    }
    
    /**
     * Set <language_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setLanguageId(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <language_id_null> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <language_id_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearLanguageIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <language_id_null> value
     *
     * @return boolean
     */
    public function getLanguageIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <language_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setLanguageIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <include_node_description> has a value
     *
     * @return boolean
     */
    public function hasIncludeNodeDescription(){
      return $this->_has(7);
    }
    
    /**
     * Clear <include_node_description> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIncludeNodeDescription(){
      return $this->_clear(7);
    }
    
    /**
     * Get <include_node_description> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeNodeDescription(){
      return $this->_get(7);
    }
    
    /**
     * Set <include_node_description> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIncludeNodeDescription(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <include_node_description_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeNodeDescriptionNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <include_node_description_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearIncludeNodeDescriptionNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <include_node_description_null> value
     *
     * @return boolean
     */
    public function getIncludeNodeDescriptionNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <include_node_description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setIncludeNodeDescriptionNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <result_up_to_level_no> has a value
     *
     * @return boolean
     */
    public function hasResultUpToLevelNo(){
      return $this->_has(8);
    }
    
    /**
     * Clear <result_up_to_level_no> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearResultUpToLevelNo(){
      return $this->_clear(8);
    }
    
    /**
     * Get <result_up_to_level_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getResultUpToLevelNo(){
      return $this->_get(8);
    }
    
    /**
     * Set <result_up_to_level_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setResultUpToLevelNo(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <result_up_to_level_no_null> has a value
     *
     * @return boolean
     */
    public function hasResultUpToLevelNoNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <result_up_to_level_no_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearResultUpToLevelNoNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <result_up_to_level_no_null> value
     *
     * @return boolean
     */
    public function getResultUpToLevelNoNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <result_up_to_level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setResultUpToLevelNoNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <search_up_to_level_no> has a value
     *
     * @return boolean
     */
    public function hasSearchUpToLevelNo(){
      return $this->_has(9);
    }
    
    /**
     * Clear <search_up_to_level_no> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearSearchUpToLevelNo(){
      return $this->_clear(9);
    }
    
    /**
     * Get <search_up_to_level_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSearchUpToLevelNo(){
      return $this->_get(9);
    }
    
    /**
     * Set <search_up_to_level_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setSearchUpToLevelNo(\dstore\engine\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <search_up_to_level_no_null> has a value
     *
     * @return boolean
     */
    public function hasSearchUpToLevelNoNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <search_up_to_level_no_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearSearchUpToLevelNoNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <search_up_to_level_no_null> value
     *
     * @return boolean
     */
    public function getSearchUpToLevelNoNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <search_up_to_level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setSearchUpToLevelNoNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <start_at_row_no> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNo(){
      return $this->_has(10);
    }
    
    /**
     * Clear <start_at_row_no> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearStartAtRowNo(){
      return $this->_clear(10);
    }
    
    /**
     * Get <start_at_row_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStartAtRowNo(){
      return $this->_get(10);
    }
    
    /**
     * Set <start_at_row_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setStartAtRowNo(\dstore\engine\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <start_at_row_no_null> has a value
     *
     * @return boolean
     */
    public function hasStartAtRowNoNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <start_at_row_no_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearStartAtRowNoNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <start_at_row_no_null> value
     *
     * @return boolean
     */
    public function getStartAtRowNoNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <start_at_row_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setStartAtRowNoNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(11);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(11);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(11);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <maintain_search_item_lacks> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchItemLacks(){
      return $this->_has(12);
    }
    
    /**
     * Clear <maintain_search_item_lacks> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearMaintainSearchItemLacks(){
      return $this->_clear(12);
    }
    
    /**
     * Get <maintain_search_item_lacks> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getMaintainSearchItemLacks(){
      return $this->_get(12);
    }
    
    /**
     * Set <maintain_search_item_lacks> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setMaintainSearchItemLacks(\dstore\engine\values\booleanValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <maintain_search_item_lacks_null> has a value
     *
     * @return boolean
     */
    public function hasMaintainSearchItemLacksNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <maintain_search_item_lacks_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearMaintainSearchItemLacksNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <maintain_search_item_lacks_null> value
     *
     * @return boolean
     */
    public function getMaintainSearchItemLacksNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <maintain_search_item_lacks_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setMaintainSearchItemLacksNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicId(){
      return $this->_has(13);
    }
    
    /**
     * Clear <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearFilterByCharacteristicId(){
      return $this->_clear(13);
    }
    
    /**
     * Get <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getFilterByCharacteristicId(){
      return $this->_get(13);
    }
    
    /**
     * Set <filter_by_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setFilterByCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicIdNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <filter_by_characteristic_id_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearFilterByCharacteristicIdNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <filter_by_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacteristicIdNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <filter_by_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setFilterByCharacteristicIdNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <filter_by_charac_value> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValue(){
      return $this->_has(14);
    }
    
    /**
     * Clear <filter_by_charac_value> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearFilterByCharacValue(){
      return $this->_clear(14);
    }
    
    /**
     * Get <filter_by_charac_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFilterByCharacValue(){
      return $this->_get(14);
    }
    
    /**
     * Set <filter_by_charac_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setFilterByCharacValue(\dstore\engine\values\stringValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <filter_by_charac_value_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValueNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <filter_by_charac_value_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearFilterByCharacValueNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <filter_by_charac_value_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacValueNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <filter_by_charac_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setFilterByCharacValueNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <sort_result> has a value
     *
     * @return boolean
     */
    public function hasSortResult(){
      return $this->_has(15);
    }
    
    /**
     * Clear <sort_result> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearSortResult(){
      return $this->_clear(15);
    }
    
    /**
     * Get <sort_result> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getSortResult(){
      return $this->_get(15);
    }
    
    /**
     * Set <sort_result> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setSortResult(\dstore\engine\values\booleanValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <sort_result_null> has a value
     *
     * @return boolean
     */
    public function hasSortResultNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <sort_result_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearSortResultNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <sort_result_null> value
     *
     * @return boolean
     */
    public function getSortResultNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <sort_result_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setSortResultNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <negate_filter_by_params> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParams(){
      return $this->_has(16);
    }
    
    /**
     * Clear <negate_filter_by_params> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearNegateFilterByParams(){
      return $this->_clear(16);
    }
    
    /**
     * Get <negate_filter_by_params> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getNegateFilterByParams(){
      return $this->_get(16);
    }
    
    /**
     * Set <negate_filter_by_params> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setNegateFilterByParams(\dstore\engine\values\booleanValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <negate_filter_by_params_null> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParamsNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <negate_filter_by_params_null> value
     *
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function clearNegateFilterByParamsNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <negate_filter_by_params_null> value
     *
     * @return boolean
     */
    public function getNegateFilterByParamsNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <negate_filter_by_params_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_SearchCharacteristics_Pu\Parameters
     */
    public function setNegateFilterByParamsNull( $value){
      return $this->_set(1016, $value);
    }
  }
}

