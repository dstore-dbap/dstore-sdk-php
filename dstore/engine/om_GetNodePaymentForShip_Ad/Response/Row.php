<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetNodePaymentForShip_Ad.proto
//   Date: 2016-05-19 08:07:49

namespace dstore\engine\om_GetNodePaymentForShip_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\booleanValue */
    public $hide_when_ordered_alone = null;
    
    /**  @var \dstore\values\stringValue */
    public $node_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_for_shipping_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description_for_admin = null;
    
    /**  @var \dstore\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $node_id = null;
    
    /**  @var \dstore\values\booleanValue */
    public $always = null;
    
    /**  @var \dstore\values\stringValue */
    public $payment_for_shipping_description = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetNodePaymentForShip_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE hide_when_ordered_alone = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "hide_when_ordered_alone";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_description = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "node_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "payment_for_shipping_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description_for_admin = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "description_for_admin";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE always = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "always";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_description = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "payment_for_shipping_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <hide_when_ordered_alone> has a value
     *
     * @return boolean
     */
    public function hasHideWhenOrderedAlone(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <hide_when_ordered_alone> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearHideWhenOrderedAlone(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <hide_when_ordered_alone> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getHideWhenOrderedAlone(){
      return $this->_get(10001);
    }
    
    /**
     * Set <hide_when_ordered_alone> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setHideWhenOrderedAlone(\dstore\values\booleanValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <node_description> has a value
     *
     * @return boolean
     */
    public function hasNodeDescription(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <node_description> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearNodeDescription(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <node_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getNodeDescription(){
      return $this->_get(10002);
    }
    
    /**
     * Set <node_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setNodeDescription(\dstore\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <payment_for_shipping_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <payment_for_shipping_id> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearPaymentForShippingId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <payment_for_shipping_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentForShippingId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <payment_for_shipping_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setPaymentForShippingId(\dstore\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <description_for_admin> has a value
     *
     * @return boolean
     */
    public function hasDescriptionForAdmin(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <description_for_admin> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearDescriptionForAdmin(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <description_for_admin> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescriptionForAdmin(){
      return $this->_get(10004);
    }
    
    /**
     * Set <description_for_admin> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setDescriptionForAdmin(\dstore\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearTreeNodeId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setTreeNodeId(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <node_id> has a value
     *
     * @return boolean
     */
    public function hasNodeId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <node_id> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearNodeId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <node_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getNodeId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <node_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setNodeId(\dstore\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <always> has a value
     *
     * @return boolean
     */
    public function hasAlways(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <always> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearAlways(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <always> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getAlways(){
      return $this->_get(10007);
    }
    
    /**
     * Set <always> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setAlways(\dstore\values\booleanValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <payment_for_shipping_description> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingDescription(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <payment_for_shipping_description> value
     *
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function clearPaymentForShippingDescription(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <payment_for_shipping_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPaymentForShippingDescription(){
      return $this->_get(10008);
    }
    
    /**
     * Set <payment_for_shipping_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetNodePaymentForShip_Ad\Response\Row
     */
    public function setPaymentForShippingDescription(\dstore\values\stringValue $value){
      return $this->_set(10008, $value);
    }
  }
}

