<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/ac_InsertAction_Ad.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\ac_InsertAction_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $command_id = null;
    
    /**  @var boolean */
    public $command_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $status = null;
    
    /**  @var boolean */
    public $status_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $parameter_names = null;
    
    /**  @var boolean */
    public $parameter_names_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $parameter_values = null;
    
    /**  @var boolean */
    public $parameter_values_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $separator_in_param_values = null;
    
    /**  @var boolean */
    public $separator_in_param_values_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $sep_in_any_values_other_than_l_f = null;
    
    /**  @var boolean */
    public $sep_in_any_values_other_than_l_f_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.ac_InsertAction_Ad.Parameters');

      // OPTIONAL MESSAGE command_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "command_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL command_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "command_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE status = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL status_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE parameter_names = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "parameter_names";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL parameter_names_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "parameter_names_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE parameter_values = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "parameter_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL parameter_values_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "parameter_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_param_values = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "separator_in_param_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_param_values_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "separator_in_param_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sep_in_any_values_other_than_l_f = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "sep_in_any_values_other_than_l_f";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sep_in_any_values_other_than_l_f_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "sep_in_any_values_other_than_l_f_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <command_id> has a value
     *
     * @return boolean
     */
    public function hasCommandId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <command_id> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearCommandId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <command_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommandId(){
      return $this->_get(1);
    }
    
    /**
     * Set <command_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setCommandId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <command_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommandIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <command_id_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearCommandIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <command_id_null> value
     *
     * @return boolean
     */
    public function getCommandIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <command_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setCommandIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(2);
    }
    
    /**
     * Clear <status> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearStatus(){
      return $this->_clear(2);
    }
    
    /**
     * Get <status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getStatus(){
      return $this->_get(2);
    }
    
    /**
     * Set <status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <status_null> has a value
     *
     * @return boolean
     */
    public function hasStatusNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <status_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearStatusNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <status_null> value
     *
     * @return boolean
     */
    public function getStatusNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setStatusNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <parameter_names> has a value
     *
     * @return boolean
     */
    public function hasParameterNames(){
      return $this->_has(3);
    }
    
    /**
     * Clear <parameter_names> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearParameterNames(){
      return $this->_clear(3);
    }
    
    /**
     * Get <parameter_names> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getParameterNames(){
      return $this->_get(3);
    }
    
    /**
     * Set <parameter_names> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setParameterNames(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <parameter_names_null> has a value
     *
     * @return boolean
     */
    public function hasParameterNamesNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <parameter_names_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearParameterNamesNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <parameter_names_null> value
     *
     * @return boolean
     */
    public function getParameterNamesNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <parameter_names_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setParameterNamesNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <parameter_values> has a value
     *
     * @return boolean
     */
    public function hasParameterValues(){
      return $this->_has(4);
    }
    
    /**
     * Clear <parameter_values> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearParameterValues(){
      return $this->_clear(4);
    }
    
    /**
     * Get <parameter_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getParameterValues(){
      return $this->_get(4);
    }
    
    /**
     * Set <parameter_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setParameterValues(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <parameter_values_null> has a value
     *
     * @return boolean
     */
    public function hasParameterValuesNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <parameter_values_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearParameterValuesNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <parameter_values_null> value
     *
     * @return boolean
     */
    public function getParameterValuesNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <parameter_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setParameterValuesNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <separator_in_param_values> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInParamValues(){
      return $this->_has(5);
    }
    
    /**
     * Clear <separator_in_param_values> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearSeparatorInParamValues(){
      return $this->_clear(5);
    }
    
    /**
     * Get <separator_in_param_values> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSeparatorInParamValues(){
      return $this->_get(5);
    }
    
    /**
     * Set <separator_in_param_values> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setSeparatorInParamValues(\dstore\engine\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <separator_in_param_values_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInParamValuesNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <separator_in_param_values_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearSeparatorInParamValuesNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <separator_in_param_values_null> value
     *
     * @return boolean
     */
    public function getSeparatorInParamValuesNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <separator_in_param_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setSeparatorInParamValuesNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <sep_in_any_values_other_than_l_f> has a value
     *
     * @return boolean
     */
    public function hasSepInAnyValuesOtherThanLF(){
      return $this->_has(6);
    }
    
    /**
     * Clear <sep_in_any_values_other_than_l_f> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearSepInAnyValuesOtherThanLF(){
      return $this->_clear(6);
    }
    
    /**
     * Get <sep_in_any_values_other_than_l_f> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSepInAnyValuesOtherThanLF(){
      return $this->_get(6);
    }
    
    /**
     * Set <sep_in_any_values_other_than_l_f> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setSepInAnyValuesOtherThanLF(\dstore\engine\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <sep_in_any_values_other_than_l_f_null> has a value
     *
     * @return boolean
     */
    public function hasSepInAnyValuesOtherThanLFNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <sep_in_any_values_other_than_l_f_null> value
     *
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function clearSepInAnyValuesOtherThanLFNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <sep_in_any_values_other_than_l_f_null> value
     *
     * @return boolean
     */
    public function getSepInAnyValuesOtherThanLFNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <sep_in_any_values_other_than_l_f_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\ac_InsertAction_Ad\Parameters
     */
    public function setSepInAnyValuesOtherThanLFNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

