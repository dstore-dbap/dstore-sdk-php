<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetTrolleyAsMatrix_Pu.proto
//   Date: 2016-05-19 08:07:51

namespace dstore\engine\om_GetTrolleyAsMatrix_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $variant_tree_node_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $product_tree_node_id = null;
    
    /**  @var \dstore\values\integerValue */
    public $price_node_characteristic_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $surcharge_generated_by_camp_ids = null;
    
    /**  @var \dstore\values\stringValue */
    public $y_axis_value_ids = null;
    
    /**  @var \dstore\values\timestampValue */
    public $input_date_and_time = null;
    
    /**  @var \dstore\values\integerValue */
    public $quantity = null;
    
    /**  @var \dstore\values\stringValue */
    public $unit_symbol = null;
    
    /**  @var \dstore\values\integerValue */
    public $removed = null;
    
    /**  @var \dstore\values\stringValue */
    public $y_axis_values = null;
    
    /**  @var \dstore\values\stringValue */
    public $surcharge_reason = null;
    
    /**  @var \dstore\values\stringValue */
    public $x_axis_value = null;
    
    /**  @var \dstore\values\stringValue */
    public $product_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $x_axis_value_id = null;
    
    /**  @var \dstore\values\decimalValue */
    public $relative_surcharge = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetTrolleyAsMatrix_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE variant_tree_node_id = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "variant_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE product_tree_node_id = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "product_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE price_node_characteristic_id = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "price_node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE surcharge_generated_by_camp_ids = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "surcharge_generated_by_camp_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE y_axis_value_ids = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "y_axis_value_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_date_and_time = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "input_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quantity = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unit_symbol = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "unit_symbol";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE removed = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "removed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE y_axis_values = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "y_axis_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE surcharge_reason = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "surcharge_reason";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_axis_value = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "x_axis_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE product_description = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "product_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_axis_value_id = 10014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10014;
      $f->name      = "x_axis_value_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE relative_surcharge = 10015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10015;
      $f->name      = "relative_surcharge";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <variant_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasVariantTreeNodeId(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <variant_tree_node_id> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearVariantTreeNodeId(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <variant_tree_node_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getVariantTreeNodeId(){
      return $this->_get(10001);
    }
    
    /**
     * Set <variant_tree_node_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setVariantTreeNodeId(\dstore\values\integerValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <product_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasProductTreeNodeId(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <product_tree_node_id> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearProductTreeNodeId(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <product_tree_node_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getProductTreeNodeId(){
      return $this->_get(10002);
    }
    
    /**
     * Set <product_tree_node_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setProductTreeNodeId(\dstore\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <price_node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPriceNodeCharacteristicId(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <price_node_characteristic_id> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearPriceNodeCharacteristicId(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <price_node_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPriceNodeCharacteristicId(){
      return $this->_get(10003);
    }
    
    /**
     * Set <price_node_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setPriceNodeCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <surcharge_generated_by_camp_ids> has a value
     *
     * @return boolean
     */
    public function hasSurchargeGeneratedByCampIds(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <surcharge_generated_by_camp_ids> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearSurchargeGeneratedByCampIds(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <surcharge_generated_by_camp_ids> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSurchargeGeneratedByCampIds(){
      return $this->_get(10004);
    }
    
    /**
     * Set <surcharge_generated_by_camp_ids> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setSurchargeGeneratedByCampIds(\dstore\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <y_axis_value_ids> has a value
     *
     * @return boolean
     */
    public function hasYAxisValueIds(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <y_axis_value_ids> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearYAxisValueIds(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <y_axis_value_ids> value
     *
     * @return \dstore\values\stringValue
     */
    public function getYAxisValueIds(){
      return $this->_get(10005);
    }
    
    /**
     * Set <y_axis_value_ids> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setYAxisValueIds(\dstore\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <input_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasInputDateAndTime(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <input_date_and_time> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearInputDateAndTime(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <input_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getInputDateAndTime(){
      return $this->_get(10006);
    }
    
    /**
     * Set <input_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setInputDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <quantity> has a value
     *
     * @return boolean
     */
    public function hasQuantity(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <quantity> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearQuantity(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <quantity> value
     *
     * @return \dstore\values\integerValue
     */
    public function getQuantity(){
      return $this->_get(10007);
    }
    
    /**
     * Set <quantity> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setQuantity(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <unit_symbol> has a value
     *
     * @return boolean
     */
    public function hasUnitSymbol(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <unit_symbol> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearUnitSymbol(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <unit_symbol> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUnitSymbol(){
      return $this->_get(10008);
    }
    
    /**
     * Set <unit_symbol> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setUnitSymbol(\dstore\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <removed> has a value
     *
     * @return boolean
     */
    public function hasRemoved(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <removed> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearRemoved(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <removed> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRemoved(){
      return $this->_get(10009);
    }
    
    /**
     * Set <removed> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setRemoved(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <y_axis_values> has a value
     *
     * @return boolean
     */
    public function hasYAxisValues(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <y_axis_values> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearYAxisValues(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <y_axis_values> value
     *
     * @return \dstore\values\stringValue
     */
    public function getYAxisValues(){
      return $this->_get(10010);
    }
    
    /**
     * Set <y_axis_values> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setYAxisValues(\dstore\values\stringValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <surcharge_reason> has a value
     *
     * @return boolean
     */
    public function hasSurchargeReason(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <surcharge_reason> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearSurchargeReason(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <surcharge_reason> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSurchargeReason(){
      return $this->_get(10011);
    }
    
    /**
     * Set <surcharge_reason> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setSurchargeReason(\dstore\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <x_axis_value> has a value
     *
     * @return boolean
     */
    public function hasXAxisValue(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <x_axis_value> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearXAxisValue(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <x_axis_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getXAxisValue(){
      return $this->_get(10012);
    }
    
    /**
     * Set <x_axis_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setXAxisValue(\dstore\values\stringValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <product_description> has a value
     *
     * @return boolean
     */
    public function hasProductDescription(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <product_description> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearProductDescription(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <product_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getProductDescription(){
      return $this->_get(10013);
    }
    
    /**
     * Set <product_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setProductDescription(\dstore\values\stringValue $value){
      return $this->_set(10013, $value);
    }
    
    /**
     * Check if <x_axis_value_id> has a value
     *
     * @return boolean
     */
    public function hasXAxisValueId(){
      return $this->_has(10014);
    }
    
    /**
     * Clear <x_axis_value_id> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearXAxisValueId(){
      return $this->_clear(10014);
    }
    
    /**
     * Get <x_axis_value_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getXAxisValueId(){
      return $this->_get(10014);
    }
    
    /**
     * Set <x_axis_value_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setXAxisValueId(\dstore\values\integerValue $value){
      return $this->_set(10014, $value);
    }
    
    /**
     * Check if <relative_surcharge> has a value
     *
     * @return boolean
     */
    public function hasRelativeSurcharge(){
      return $this->_has(10015);
    }
    
    /**
     * Clear <relative_surcharge> value
     *
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function clearRelativeSurcharge(){
      return $this->_clear(10015);
    }
    
    /**
     * Get <relative_surcharge> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getRelativeSurcharge(){
      return $this->_get(10015);
    }
    
    /**
     * Set <relative_surcharge> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_GetTrolleyAsMatrix_Pu\Response\Row
     */
    public function setRelativeSurcharge(\dstore\values\decimalValue $value){
      return $this->_set(10015, $value);
    }
  }
}

