<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_ModifyTRITriggerWorkflow_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\mi_ModifyTRITriggerWorkflow_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $trigger_id = null;
    
    /**  @var boolean */
    public $trigger_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $iteration_list = null;
    
    /**  @var boolean */
    public $iteration_list_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $work_step = null;
    
    /**  @var boolean */
    public $work_step_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $description = null;
    
    /**  @var boolean */
    public $description_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $cancel_on_error = null;
    
    /**  @var boolean */
    public $cancel_on_error_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_work_step = null;
    
    /**  @var boolean */
    public $delete_work_step_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_ModifyTRITriggerWorkflow_Ad.Parameters');

      // OPTIONAL MESSAGE trigger_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "trigger_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL trigger_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "trigger_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE iteration_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "iteration_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL iteration_list_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "iteration_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE work_step = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "work_step";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL work_step_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "work_step_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL description_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE cancel_on_error = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "cancel_on_error";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL cancel_on_error_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "cancel_on_error_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_work_step = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delete_work_step";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_work_step_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delete_work_step_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <trigger_id> has a value
     *
     * @return boolean
     */
    public function hasTriggerId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <trigger_id> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearTriggerId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <trigger_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTriggerId(){
      return $this->_get(1);
    }
    
    /**
     * Set <trigger_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setTriggerId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <trigger_id_null> has a value
     *
     * @return boolean
     */
    public function hasTriggerIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <trigger_id_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearTriggerIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <trigger_id_null> value
     *
     * @return boolean
     */
    public function getTriggerIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <trigger_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setTriggerIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <iteration_list> has a value
     *
     * @return boolean
     */
    public function hasIterationList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <iteration_list> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearIterationList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <iteration_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getIterationList(){
      return $this->_get(2);
    }
    
    /**
     * Set <iteration_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setIterationList(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <iteration_list_null> has a value
     *
     * @return boolean
     */
    public function hasIterationListNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <iteration_list_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearIterationListNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <iteration_list_null> value
     *
     * @return boolean
     */
    public function getIterationListNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <iteration_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setIterationListNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <work_step> has a value
     *
     * @return boolean
     */
    public function hasWorkStep(){
      return $this->_has(3);
    }
    
    /**
     * Clear <work_step> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearWorkStep(){
      return $this->_clear(3);
    }
    
    /**
     * Get <work_step> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getWorkStep(){
      return $this->_get(3);
    }
    
    /**
     * Set <work_step> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setWorkStep(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <work_step_null> has a value
     *
     * @return boolean
     */
    public function hasWorkStepNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <work_step_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearWorkStepNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <work_step_null> value
     *
     * @return boolean
     */
    public function getWorkStepNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <work_step_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setWorkStepNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(4);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearDescription(){
      return $this->_clear(4);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDescription(){
      return $this->_get(4);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <description_null> has a value
     *
     * @return boolean
     */
    public function hasDescriptionNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <description_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearDescriptionNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <description_null> value
     *
     * @return boolean
     */
    public function getDescriptionNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setDescriptionNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <cancel_on_error> has a value
     *
     * @return boolean
     */
    public function hasCancelOnError(){
      return $this->_has(5);
    }
    
    /**
     * Clear <cancel_on_error> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearCancelOnError(){
      return $this->_clear(5);
    }
    
    /**
     * Get <cancel_on_error> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCancelOnError(){
      return $this->_get(5);
    }
    
    /**
     * Set <cancel_on_error> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setCancelOnError(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <cancel_on_error_null> has a value
     *
     * @return boolean
     */
    public function hasCancelOnErrorNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <cancel_on_error_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearCancelOnErrorNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <cancel_on_error_null> value
     *
     * @return boolean
     */
    public function getCancelOnErrorNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <cancel_on_error_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setCancelOnErrorNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delete_work_step> has a value
     *
     * @return boolean
     */
    public function hasDeleteWorkStep(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delete_work_step> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearDeleteWorkStep(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delete_work_step> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteWorkStep(){
      return $this->_get(6);
    }
    
    /**
     * Set <delete_work_step> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setDeleteWorkStep(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delete_work_step_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteWorkStepNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delete_work_step_null> value
     *
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function clearDeleteWorkStepNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delete_work_step_null> value
     *
     * @return boolean
     */
    public function getDeleteWorkStepNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delete_work_step_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyTRITriggerWorkflow_Ad\Parameters
     */
    public function setDeleteWorkStepNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

