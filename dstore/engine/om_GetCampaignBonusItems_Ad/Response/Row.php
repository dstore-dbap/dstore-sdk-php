<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCampaignBonusItems_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_GetCampaignBonusItems_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $benefit_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $bonus_from_one_set_only = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_condition_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_set_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_quantity = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_condition_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sort_no = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCampaignBonusItems_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_id = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "benefit_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE bonus_from_one_set_only = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "bonus_from_one_set_only";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_id = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "item_condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_set_id = 20003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20003;
      $f->name      = "item_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_quantity = 20005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20005;
      $f->name      = "max_quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_description = 20006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20006;
      $f->name      = "item_condition_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 20007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20007;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <benefit_id> has a value
     *
     * @return boolean
     */
    public function hasBenefitId(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <benefit_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearBenefitId(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <benefit_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBenefitId(){
      return $this->_get(10001);
    }
    
    /**
     * Set <benefit_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setBenefitId(\dstore\engine\values\integerValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <bonus_from_one_set_only> has a value
     *
     * @return boolean
     */
    public function hasBonusFromOneSetOnly(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <bonus_from_one_set_only> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearBonusFromOneSetOnly(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <bonus_from_one_set_only> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getBonusFromOneSetOnly(){
      return $this->_get(10002);
    }
    
    /**
     * Set <bonus_from_one_set_only> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setBonusFromOneSetOnly(\dstore\engine\values\booleanValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <item_condition_id> has a value
     *
     * @return boolean
     */
    public function hasItemConditionId(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <item_condition_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearItemConditionId(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <item_condition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemConditionId(){
      return $this->_get(20001);
    }
    
    /**
     * Set <item_condition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setItemConditionId(\dstore\engine\values\integerValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <item_set_id> has a value
     *
     * @return boolean
     */
    public function hasItemSetId(){
      return $this->_has(20003);
    }
    
    /**
     * Clear <item_set_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearItemSetId(){
      return $this->_clear(20003);
    }
    
    /**
     * Get <item_set_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemSetId(){
      return $this->_get(20003);
    }
    
    /**
     * Set <item_set_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setItemSetId(\dstore\engine\values\integerValue $value){
      return $this->_set(20003, $value);
    }
    
    /**
     * Check if <max_quantity> has a value
     *
     * @return boolean
     */
    public function hasMaxQuantity(){
      return $this->_has(20005);
    }
    
    /**
     * Clear <max_quantity> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearMaxQuantity(){
      return $this->_clear(20005);
    }
    
    /**
     * Get <max_quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxQuantity(){
      return $this->_get(20005);
    }
    
    /**
     * Set <max_quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setMaxQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(20005, $value);
    }
    
    /**
     * Check if <item_condition_description> has a value
     *
     * @return boolean
     */
    public function hasItemConditionDescription(){
      return $this->_has(20006);
    }
    
    /**
     * Clear <item_condition_description> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearItemConditionDescription(){
      return $this->_clear(20006);
    }
    
    /**
     * Get <item_condition_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemConditionDescription(){
      return $this->_get(20006);
    }
    
    /**
     * Set <item_condition_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setItemConditionDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(20006, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(20007);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(20007);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(20007);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Ad\Response\Row
     */
    public function setSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(20007, $value);
    }
  }
}

