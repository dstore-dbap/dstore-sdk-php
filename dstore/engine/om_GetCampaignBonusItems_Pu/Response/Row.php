<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCampaignBonusItems_Pu.proto
//   Date: 2015-10-06 11:19:56

namespace dstore\engine\om_GetCampaignBonusItems_Pu\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $node_description = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value_2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value_3 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $value_1 = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_set_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $bonus_from_one_set_only = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_quantity = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_condition_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_condition_description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_group_sort_no = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition1 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $operator2 = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_condition_group_description = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $combine_parts_with_a_n_d_operator = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $recursive_evaluation = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_part_sort_no = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $domain_tree_node_ids = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $node_characteristic_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_condition_part_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $combine_groups_with_a_n_d_operator = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $item_condition_part_description = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $level_ids = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $item_condition_group_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $inherit_depth = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCampaignBonusItems_Pu.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "node_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_2 = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "value_2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_3 = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "value_3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_1 = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "value_1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_set_id = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "item_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_id = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE bonus_from_one_set_only = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "bonus_from_one_set_only";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_quantity = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "max_quantity";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_id = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "item_condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_description = 20005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20005;
      $f->name      = "item_condition_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 20006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20006;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_group_sort_no = 30001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30001;
      $f->name      = "item_group_sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator1 = 30002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30002;
      $f->name      = "operator1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition1 = 30003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30003;
      $f->name      = "condition1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition2 = 30004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30004;
      $f->name      = "condition2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE operator2 = 30005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30005;
      $f->name      = "operator2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_group_description = 30006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30006;
      $f->name      = "item_condition_group_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE combine_parts_with_a_n_d_operator = 30007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30007;
      $f->name      = "combine_parts_with_a_n_d_operator";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation = 30008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30008;
      $f->name      = "recursive_evaluation";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_part_sort_no = 30009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30009;
      $f->name      = "item_part_sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE domain_tree_node_ids = 30011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30011;
      $f->name      = "domain_tree_node_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE node_characteristic_id = 30012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30012;
      $f->name      = "node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_part_id = 30013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30013;
      $f->name      = "item_condition_part_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE combine_groups_with_a_n_d_operator = 30017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30017;
      $f->name      = "combine_groups_with_a_n_d_operator";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_part_description = 30018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30018;
      $f->name      = "item_condition_part_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_ids = 30019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30019;
      $f->name      = "level_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE item_condition_group_id = 30020
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30020;
      $f->name      = "item_condition_group_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth = 30023
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30023;
      $f->name      = "inherit_depth";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <node_description> has a value
     *
     * @return boolean
     */
    public function hasNodeDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <node_description> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearNodeDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <node_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNodeDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <node_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setNodeDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <value_2> has a value
     *
     * @return boolean
     */
    public function hasValue2(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <value_2> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearValue2(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <value_2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue2(){
      return $this->_get(10002);
    }
    
    /**
     * Set <value_2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setValue2(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <value_3> has a value
     *
     * @return boolean
     */
    public function hasValue3(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <value_3> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearValue3(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <value_3> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue3(){
      return $this->_get(10003);
    }
    
    /**
     * Set <value_3> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setValue3(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <value_1> has a value
     *
     * @return boolean
     */
    public function hasValue1(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <value_1> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearValue1(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <value_1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getValue1(){
      return $this->_get(10004);
    }
    
    /**
     * Set <value_1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setValue1(\dstore\engine\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <item_set_id> has a value
     *
     * @return boolean
     */
    public function hasItemSetId(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <item_set_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemSetId(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <item_set_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemSetId(){
      return $this->_get(10005);
    }
    
    /**
     * Set <item_set_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemSetId(\dstore\engine\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <node_id> has a value
     *
     * @return boolean
     */
    public function hasNodeId(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <node_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearNodeId(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeId(){
      return $this->_get(10006);
    }
    
    /**
     * Set <node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearTreeNodeId(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(10007);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <bonus_from_one_set_only> has a value
     *
     * @return boolean
     */
    public function hasBonusFromOneSetOnly(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <bonus_from_one_set_only> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearBonusFromOneSetOnly(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <bonus_from_one_set_only> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getBonusFromOneSetOnly(){
      return $this->_get(10008);
    }
    
    /**
     * Set <bonus_from_one_set_only> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setBonusFromOneSetOnly(\dstore\engine\values\booleanValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <max_quantity> has a value
     *
     * @return boolean
     */
    public function hasMaxQuantity(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <max_quantity> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearMaxQuantity(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <max_quantity> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxQuantity(){
      return $this->_get(10009);
    }
    
    /**
     * Set <max_quantity> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setMaxQuantity(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <item_condition_id> has a value
     *
     * @return boolean
     */
    public function hasItemConditionId(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <item_condition_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionId(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <item_condition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemConditionId(){
      return $this->_get(20001);
    }
    
    /**
     * Set <item_condition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionId(\dstore\engine\values\integerValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <item_condition_description> has a value
     *
     * @return boolean
     */
    public function hasItemConditionDescription(){
      return $this->_has(20005);
    }
    
    /**
     * Clear <item_condition_description> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionDescription(){
      return $this->_clear(20005);
    }
    
    /**
     * Get <item_condition_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemConditionDescription(){
      return $this->_get(20005);
    }
    
    /**
     * Set <item_condition_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(20005, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(20006);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(20006);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(20006);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(20006, $value);
    }
    
    /**
     * Check if <item_group_sort_no> has a value
     *
     * @return boolean
     */
    public function hasItemGroupSortNo(){
      return $this->_has(30001);
    }
    
    /**
     * Clear <item_group_sort_no> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemGroupSortNo(){
      return $this->_clear(30001);
    }
    
    /**
     * Get <item_group_sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemGroupSortNo(){
      return $this->_get(30001);
    }
    
    /**
     * Set <item_group_sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemGroupSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(30001, $value);
    }
    
    /**
     * Check if <operator1> has a value
     *
     * @return boolean
     */
    public function hasOperator1(){
      return $this->_has(30002);
    }
    
    /**
     * Clear <operator1> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearOperator1(){
      return $this->_clear(30002);
    }
    
    /**
     * Get <operator1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator1(){
      return $this->_get(30002);
    }
    
    /**
     * Set <operator1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setOperator1(\dstore\engine\values\stringValue $value){
      return $this->_set(30002, $value);
    }
    
    /**
     * Check if <condition1> has a value
     *
     * @return boolean
     */
    public function hasCondition1(){
      return $this->_has(30003);
    }
    
    /**
     * Clear <condition1> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearCondition1(){
      return $this->_clear(30003);
    }
    
    /**
     * Get <condition1> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition1(){
      return $this->_get(30003);
    }
    
    /**
     * Set <condition1> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setCondition1(\dstore\engine\values\stringValue $value){
      return $this->_set(30003, $value);
    }
    
    /**
     * Check if <condition2> has a value
     *
     * @return boolean
     */
    public function hasCondition2(){
      return $this->_has(30004);
    }
    
    /**
     * Clear <condition2> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearCondition2(){
      return $this->_clear(30004);
    }
    
    /**
     * Get <condition2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCondition2(){
      return $this->_get(30004);
    }
    
    /**
     * Set <condition2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setCondition2(\dstore\engine\values\stringValue $value){
      return $this->_set(30004, $value);
    }
    
    /**
     * Check if <operator2> has a value
     *
     * @return boolean
     */
    public function hasOperator2(){
      return $this->_has(30005);
    }
    
    /**
     * Clear <operator2> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearOperator2(){
      return $this->_clear(30005);
    }
    
    /**
     * Get <operator2> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOperator2(){
      return $this->_get(30005);
    }
    
    /**
     * Set <operator2> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setOperator2(\dstore\engine\values\stringValue $value){
      return $this->_set(30005, $value);
    }
    
    /**
     * Check if <item_condition_group_description> has a value
     *
     * @return boolean
     */
    public function hasItemConditionGroupDescription(){
      return $this->_has(30006);
    }
    
    /**
     * Clear <item_condition_group_description> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionGroupDescription(){
      return $this->_clear(30006);
    }
    
    /**
     * Get <item_condition_group_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemConditionGroupDescription(){
      return $this->_get(30006);
    }
    
    /**
     * Set <item_condition_group_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionGroupDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(30006, $value);
    }
    
    /**
     * Check if <combine_parts_with_a_n_d_operator> has a value
     *
     * @return boolean
     */
    public function hasCombinePartsWithANDOperator(){
      return $this->_has(30007);
    }
    
    /**
     * Clear <combine_parts_with_a_n_d_operator> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearCombinePartsWithANDOperator(){
      return $this->_clear(30007);
    }
    
    /**
     * Get <combine_parts_with_a_n_d_operator> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getCombinePartsWithANDOperator(){
      return $this->_get(30007);
    }
    
    /**
     * Set <combine_parts_with_a_n_d_operator> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setCombinePartsWithANDOperator(\dstore\engine\values\booleanValue $value){
      return $this->_set(30007, $value);
    }
    
    /**
     * Check if <recursive_evaluation> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluation(){
      return $this->_has(30008);
    }
    
    /**
     * Clear <recursive_evaluation> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearRecursiveEvaluation(){
      return $this->_clear(30008);
    }
    
    /**
     * Get <recursive_evaluation> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRecursiveEvaluation(){
      return $this->_get(30008);
    }
    
    /**
     * Set <recursive_evaluation> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setRecursiveEvaluation(\dstore\engine\values\integerValue $value){
      return $this->_set(30008, $value);
    }
    
    /**
     * Check if <item_part_sort_no> has a value
     *
     * @return boolean
     */
    public function hasItemPartSortNo(){
      return $this->_has(30009);
    }
    
    /**
     * Clear <item_part_sort_no> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemPartSortNo(){
      return $this->_clear(30009);
    }
    
    /**
     * Get <item_part_sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemPartSortNo(){
      return $this->_get(30009);
    }
    
    /**
     * Set <item_part_sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemPartSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(30009, $value);
    }
    
    /**
     * Check if <domain_tree_node_ids> has a value
     *
     * @return boolean
     */
    public function hasDomainTreeNodeIds(){
      return $this->_has(30011);
    }
    
    /**
     * Clear <domain_tree_node_ids> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearDomainTreeNodeIds(){
      return $this->_clear(30011);
    }
    
    /**
     * Get <domain_tree_node_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDomainTreeNodeIds(){
      return $this->_get(30011);
    }
    
    /**
     * Set <domain_tree_node_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setDomainTreeNodeIds(\dstore\engine\values\stringValue $value){
      return $this->_set(30011, $value);
    }
    
    /**
     * Check if <node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasNodeCharacteristicId(){
      return $this->_has(30012);
    }
    
    /**
     * Clear <node_characteristic_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearNodeCharacteristicId(){
      return $this->_clear(30012);
    }
    
    /**
     * Get <node_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getNodeCharacteristicId(){
      return $this->_get(30012);
    }
    
    /**
     * Set <node_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setNodeCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(30012, $value);
    }
    
    /**
     * Check if <item_condition_part_id> has a value
     *
     * @return boolean
     */
    public function hasItemConditionPartId(){
      return $this->_has(30013);
    }
    
    /**
     * Clear <item_condition_part_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionPartId(){
      return $this->_clear(30013);
    }
    
    /**
     * Get <item_condition_part_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemConditionPartId(){
      return $this->_get(30013);
    }
    
    /**
     * Set <item_condition_part_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionPartId(\dstore\engine\values\integerValue $value){
      return $this->_set(30013, $value);
    }
    
    /**
     * Check if <combine_groups_with_a_n_d_operator> has a value
     *
     * @return boolean
     */
    public function hasCombineGroupsWithANDOperator(){
      return $this->_has(30017);
    }
    
    /**
     * Clear <combine_groups_with_a_n_d_operator> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearCombineGroupsWithANDOperator(){
      return $this->_clear(30017);
    }
    
    /**
     * Get <combine_groups_with_a_n_d_operator> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getCombineGroupsWithANDOperator(){
      return $this->_get(30017);
    }
    
    /**
     * Set <combine_groups_with_a_n_d_operator> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setCombineGroupsWithANDOperator(\dstore\engine\values\booleanValue $value){
      return $this->_set(30017, $value);
    }
    
    /**
     * Check if <item_condition_part_description> has a value
     *
     * @return boolean
     */
    public function hasItemConditionPartDescription(){
      return $this->_has(30018);
    }
    
    /**
     * Clear <item_condition_part_description> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionPartDescription(){
      return $this->_clear(30018);
    }
    
    /**
     * Get <item_condition_part_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getItemConditionPartDescription(){
      return $this->_get(30018);
    }
    
    /**
     * Set <item_condition_part_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionPartDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(30018, $value);
    }
    
    /**
     * Check if <level_ids> has a value
     *
     * @return boolean
     */
    public function hasLevelIds(){
      return $this->_has(30019);
    }
    
    /**
     * Clear <level_ids> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearLevelIds(){
      return $this->_clear(30019);
    }
    
    /**
     * Get <level_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getLevelIds(){
      return $this->_get(30019);
    }
    
    /**
     * Set <level_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setLevelIds(\dstore\engine\values\stringValue $value){
      return $this->_set(30019, $value);
    }
    
    /**
     * Check if <item_condition_group_id> has a value
     *
     * @return boolean
     */
    public function hasItemConditionGroupId(){
      return $this->_has(30020);
    }
    
    /**
     * Clear <item_condition_group_id> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearItemConditionGroupId(){
      return $this->_clear(30020);
    }
    
    /**
     * Get <item_condition_group_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getItemConditionGroupId(){
      return $this->_get(30020);
    }
    
    /**
     * Set <item_condition_group_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setItemConditionGroupId(\dstore\engine\values\integerValue $value){
      return $this->_set(30020, $value);
    }
    
    /**
     * Check if <inherit_depth> has a value
     *
     * @return boolean
     */
    public function hasInheritDepth(){
      return $this->_has(30023);
    }
    
    /**
     * Clear <inherit_depth> value
     *
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function clearInheritDepth(){
      return $this->_clear(30023);
    }
    
    /**
     * Get <inherit_depth> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getInheritDepth(){
      return $this->_get(30023);
    }
    
    /**
     * Set <inherit_depth> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCampaignBonusItems_Pu\Response\Row
     */
    public function setInheritDepth(\dstore\engine\values\integerValue $value){
      return $this->_set(30023, $value);
    }
  }
}

