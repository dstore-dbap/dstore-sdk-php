<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetUsedVoucherCodes_Ad.proto
//   Date: 2015-10-06 11:20:00

namespace dstore\engine\om_GetUsedVoucherCodes_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $visitor_or_order_id = null;
    
    /**  @var boolean */
    public $visitor_or_order_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $is_order_id = null;
    
    /**  @var boolean */
    public $is_order_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $voucher_code = null;
    
    /**  @var boolean */
    public $voucher_code_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_validation_date_and_time = null;
    
    /**  @var boolean */
    public $from_validation_date_and_time_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_validation_date_and_time = null;
    
    /**  @var boolean */
    public $to_validation_date_and_time_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetUsedVoucherCodes_Ad.Parameters');

      // OPTIONAL MESSAGE visitor_or_order_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "visitor_or_order_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL visitor_or_order_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "visitor_or_order_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_order_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "is_order_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL is_order_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "is_order_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE voucher_code = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "voucher_code";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL voucher_code_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "voucher_code_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_validation_date_and_time = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "from_validation_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_validation_date_and_time_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "from_validation_date_and_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_validation_date_and_time = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "to_validation_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_validation_date_and_time_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "to_validation_date_and_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <visitor_or_order_id> has a value
     *
     * @return boolean
     */
    public function hasVisitorOrOrderId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <visitor_or_order_id> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearVisitorOrOrderId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <visitor_or_order_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getVisitorOrOrderId(){
      return $this->_get(1);
    }
    
    /**
     * Set <visitor_or_order_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setVisitorOrOrderId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <visitor_or_order_id_null> has a value
     *
     * @return boolean
     */
    public function hasVisitorOrOrderIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <visitor_or_order_id_null> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearVisitorOrOrderIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <visitor_or_order_id_null> value
     *
     * @return boolean
     */
    public function getVisitorOrOrderIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <visitor_or_order_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setVisitorOrOrderIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <is_order_id> has a value
     *
     * @return boolean
     */
    public function hasIsOrderId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <is_order_id> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearIsOrderId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <is_order_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getIsOrderId(){
      return $this->_get(2);
    }
    
    /**
     * Set <is_order_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setIsOrderId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <is_order_id_null> has a value
     *
     * @return boolean
     */
    public function hasIsOrderIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <is_order_id_null> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearIsOrderIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <is_order_id_null> value
     *
     * @return boolean
     */
    public function getIsOrderIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <is_order_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setIsOrderIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <voucher_code> has a value
     *
     * @return boolean
     */
    public function hasVoucherCode(){
      return $this->_has(3);
    }
    
    /**
     * Clear <voucher_code> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearVoucherCode(){
      return $this->_clear(3);
    }
    
    /**
     * Get <voucher_code> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getVoucherCode(){
      return $this->_get(3);
    }
    
    /**
     * Set <voucher_code> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setVoucherCode(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <voucher_code_null> has a value
     *
     * @return boolean
     */
    public function hasVoucherCodeNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <voucher_code_null> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearVoucherCodeNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <voucher_code_null> value
     *
     * @return boolean
     */
    public function getVoucherCodeNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <voucher_code_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setVoucherCodeNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <from_validation_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasFromValidationDateAndTime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <from_validation_date_and_time> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearFromValidationDateAndTime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <from_validation_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromValidationDateAndTime(){
      return $this->_get(4);
    }
    
    /**
     * Set <from_validation_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setFromValidationDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <from_validation_date_and_time_null> has a value
     *
     * @return boolean
     */
    public function hasFromValidationDateAndTimeNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <from_validation_date_and_time_null> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearFromValidationDateAndTimeNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <from_validation_date_and_time_null> value
     *
     * @return boolean
     */
    public function getFromValidationDateAndTimeNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <from_validation_date_and_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setFromValidationDateAndTimeNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <to_validation_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasToValidationDateAndTime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <to_validation_date_and_time> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearToValidationDateAndTime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <to_validation_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToValidationDateAndTime(){
      return $this->_get(5);
    }
    
    /**
     * Set <to_validation_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setToValidationDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <to_validation_date_and_time_null> has a value
     *
     * @return boolean
     */
    public function hasToValidationDateAndTimeNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <to_validation_date_and_time_null> value
     *
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function clearToValidationDateAndTimeNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <to_validation_date_and_time_null> value
     *
     * @return boolean
     */
    public function getToValidationDateAndTimeNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <to_validation_date_and_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetUsedVoucherCodes_Ad\Parameters
     */
    public function setToValidationDateAndTimeNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

