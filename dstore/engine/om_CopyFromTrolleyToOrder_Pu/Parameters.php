<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_CopyFromTrolleyToOrder_Pu.proto
//   Date: 2016-05-19 08:07:47

namespace dstore\engine\om_CopyFromTrolleyToOrder_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $incorrect_information_exist = null;
    
    /**  @var boolean */
    public $incorrect_information_exist_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $add_order_informations = null;
    
    /**  @var boolean */
    public $add_order_informations_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $unique_id = null;
    
    /**  @var boolean */
    public $unique_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $delivery_person_id = null;
    
    /**  @var boolean */
    public $delivery_person_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $shipping_type_id = null;
    
    /**  @var boolean */
    public $shipping_type_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_type_id = null;
    
    /**  @var boolean */
    public $payment_type_id_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $delivery_date_and_time = null;
    
    /**  @var boolean */
    public $delivery_date_and_time_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $start_order_id = null;
    
    /**  @var boolean */
    public $start_order_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $price_node_characteristic_id = null;
    
    /**  @var boolean */
    public $price_node_characteristic_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $add_order_information = null;
    
    /**  @var boolean */
    public $add_order_information_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $add_order_content_information = null;
    
    /**  @var boolean */
    public $add_order_content_information_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_incorrect_information = null;
    
    /**  @var boolean */
    public $get_incorrect_information_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $use_cash_account_max_value = null;
    
    /**  @var boolean */
    public $use_cash_account_max_value_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $abort_if_items_removed = null;
    
    /**  @var boolean */
    public $abort_if_items_removed_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters');

      // OPTIONAL MESSAGE incorrect_information_exist = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "incorrect_information_exist";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL incorrect_information_exist_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "incorrect_information_exist_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE add_order_informations = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "add_order_informations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_informations_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "add_order_informations_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE unique_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "unique_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL unique_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "unique_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delivery_person_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "delivery_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delivery_person_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "delivery_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shipping_type_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "shipping_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL shipping_type_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "shipping_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "payment_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL payment_type_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "payment_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delivery_date_and_time = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "delivery_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delivery_date_and_time_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "delivery_date_and_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_order_id = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "start_order_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL start_order_id_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "start_order_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE price_node_characteristic_id = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "price_node_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL price_node_characteristic_id_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "price_node_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE add_order_information = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "add_order_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_information_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "add_order_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE add_order_content_information = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "add_order_content_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_content_information_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "add_order_content_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_incorrect_information = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "get_incorrect_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_incorrect_information_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "get_incorrect_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE use_cash_account_max_value = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "use_cash_account_max_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL use_cash_account_max_value_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "use_cash_account_max_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE abort_if_items_removed = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "abort_if_items_removed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL abort_if_items_removed_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "abort_if_items_removed_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <incorrect_information_exist> has a value
     *
     * @return boolean
     */
    public function hasIncorrectInformationExist(){
      return $this->_has(1);
    }
    
    /**
     * Clear <incorrect_information_exist> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearIncorrectInformationExist(){
      return $this->_clear(1);
    }
    
    /**
     * Get <incorrect_information_exist> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncorrectInformationExist(){
      return $this->_get(1);
    }
    
    /**
     * Set <incorrect_information_exist> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setIncorrectInformationExist(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <incorrect_information_exist_null> has a value
     *
     * @return boolean
     */
    public function hasIncorrectInformationExistNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <incorrect_information_exist_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearIncorrectInformationExistNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <incorrect_information_exist_null> value
     *
     * @return boolean
     */
    public function getIncorrectInformationExistNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <incorrect_information_exist_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setIncorrectInformationExistNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <add_order_informations> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformations(){
      return $this->_has(2);
    }
    
    /**
     * Clear <add_order_informations> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderInformations(){
      return $this->_clear(2);
    }
    
    /**
     * Get <add_order_informations> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getAddOrderInformations(){
      return $this->_get(2);
    }
    
    /**
     * Set <add_order_informations> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderInformations(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <add_order_informations_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformationsNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <add_order_informations_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderInformationsNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <add_order_informations_null> value
     *
     * @return boolean
     */
    public function getAddOrderInformationsNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <add_order_informations_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderInformationsNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <unique_id> has a value
     *
     * @return boolean
     */
    public function hasUniqueId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <unique_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearUniqueId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <unique_id> value
     *
     * @return \dstore\values\stringValue
     */
    public function getUniqueId(){
      return $this->_get(3);
    }
    
    /**
     * Set <unique_id> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setUniqueId(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <unique_id_null> has a value
     *
     * @return boolean
     */
    public function hasUniqueIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <unique_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearUniqueIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <unique_id_null> value
     *
     * @return boolean
     */
    public function getUniqueIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <unique_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setUniqueIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(4);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPersonId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <delivery_person_id> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <delivery_person_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearDeliveryPersonId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <delivery_person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDeliveryPersonId(){
      return $this->_get(5);
    }
    
    /**
     * Set <delivery_person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setDeliveryPersonId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <delivery_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasDeliveryPersonIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <delivery_person_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearDeliveryPersonIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <delivery_person_id_null> value
     *
     * @return boolean
     */
    public function getDeliveryPersonIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <delivery_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setDeliveryPersonIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <shipping_type_id> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <shipping_type_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearShippingTypeId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <shipping_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getShippingTypeId(){
      return $this->_get(6);
    }
    
    /**
     * Set <shipping_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setShippingTypeId(\dstore\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <shipping_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <shipping_type_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearShippingTypeIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <shipping_type_id_null> value
     *
     * @return boolean
     */
    public function getShippingTypeIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <shipping_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setShippingTypeIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <payment_type_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <payment_type_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPaymentTypeId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <payment_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentTypeId(){
      return $this->_get(7);
    }
    
    /**
     * Set <payment_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPaymentTypeId(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <payment_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <payment_type_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPaymentTypeIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <payment_type_id_null> value
     *
     * @return boolean
     */
    public function getPaymentTypeIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <payment_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPaymentTypeIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <delivery_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasDeliveryDateAndTime(){
      return $this->_has(8);
    }
    
    /**
     * Clear <delivery_date_and_time> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearDeliveryDateAndTime(){
      return $this->_clear(8);
    }
    
    /**
     * Get <delivery_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getDeliveryDateAndTime(){
      return $this->_get(8);
    }
    
    /**
     * Set <delivery_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setDeliveryDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <delivery_date_and_time_null> has a value
     *
     * @return boolean
     */
    public function hasDeliveryDateAndTimeNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <delivery_date_and_time_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearDeliveryDateAndTimeNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <delivery_date_and_time_null> value
     *
     * @return boolean
     */
    public function getDeliveryDateAndTimeNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <delivery_date_and_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setDeliveryDateAndTimeNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <start_order_id> has a value
     *
     * @return boolean
     */
    public function hasStartOrderId(){
      return $this->_has(9);
    }
    
    /**
     * Clear <start_order_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearStartOrderId(){
      return $this->_clear(9);
    }
    
    /**
     * Get <start_order_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getStartOrderId(){
      return $this->_get(9);
    }
    
    /**
     * Set <start_order_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setStartOrderId(\dstore\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <start_order_id_null> has a value
     *
     * @return boolean
     */
    public function hasStartOrderIdNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <start_order_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearStartOrderIdNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <start_order_id_null> value
     *
     * @return boolean
     */
    public function getStartOrderIdNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <start_order_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setStartOrderIdNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <price_node_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPriceNodeCharacteristicId(){
      return $this->_has(10);
    }
    
    /**
     * Clear <price_node_characteristic_id> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPriceNodeCharacteristicId(){
      return $this->_clear(10);
    }
    
    /**
     * Get <price_node_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPriceNodeCharacteristicId(){
      return $this->_get(10);
    }
    
    /**
     * Set <price_node_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPriceNodeCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <price_node_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasPriceNodeCharacteristicIdNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <price_node_characteristic_id_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearPriceNodeCharacteristicIdNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <price_node_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getPriceNodeCharacteristicIdNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <price_node_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setPriceNodeCharacteristicIdNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <add_order_information> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformation(){
      return $this->_has(11);
    }
    
    /**
     * Clear <add_order_information> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderInformation(){
      return $this->_clear(11);
    }
    
    /**
     * Get <add_order_information> value
     *
     * @return \dstore\values\integerValue
     */
    public function getAddOrderInformation(){
      return $this->_get(11);
    }
    
    /**
     * Set <add_order_information> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderInformation(\dstore\values\integerValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <add_order_information_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformationNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <add_order_information_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderInformationNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <add_order_information_null> value
     *
     * @return boolean
     */
    public function getAddOrderInformationNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <add_order_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderInformationNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <add_order_content_information> has a value
     *
     * @return boolean
     */
    public function hasAddOrderContentInformation(){
      return $this->_has(12);
    }
    
    /**
     * Clear <add_order_content_information> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderContentInformation(){
      return $this->_clear(12);
    }
    
    /**
     * Get <add_order_content_information> value
     *
     * @return \dstore\values\integerValue
     */
    public function getAddOrderContentInformation(){
      return $this->_get(12);
    }
    
    /**
     * Set <add_order_content_information> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderContentInformation(\dstore\values\integerValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <add_order_content_information_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderContentInformationNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <add_order_content_information_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAddOrderContentInformationNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <add_order_content_information_null> value
     *
     * @return boolean
     */
    public function getAddOrderContentInformationNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <add_order_content_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAddOrderContentInformationNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <get_incorrect_information> has a value
     *
     * @return boolean
     */
    public function hasGetIncorrectInformation(){
      return $this->_has(13);
    }
    
    /**
     * Clear <get_incorrect_information> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearGetIncorrectInformation(){
      return $this->_clear(13);
    }
    
    /**
     * Get <get_incorrect_information> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetIncorrectInformation(){
      return $this->_get(13);
    }
    
    /**
     * Set <get_incorrect_information> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setGetIncorrectInformation(\dstore\values\booleanValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <get_incorrect_information_null> has a value
     *
     * @return boolean
     */
    public function hasGetIncorrectInformationNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <get_incorrect_information_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearGetIncorrectInformationNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <get_incorrect_information_null> value
     *
     * @return boolean
     */
    public function getGetIncorrectInformationNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <get_incorrect_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setGetIncorrectInformationNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <use_cash_account_max_value> has a value
     *
     * @return boolean
     */
    public function hasUseCashAccountMaxValue(){
      return $this->_has(14);
    }
    
    /**
     * Clear <use_cash_account_max_value> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearUseCashAccountMaxValue(){
      return $this->_clear(14);
    }
    
    /**
     * Get <use_cash_account_max_value> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getUseCashAccountMaxValue(){
      return $this->_get(14);
    }
    
    /**
     * Set <use_cash_account_max_value> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setUseCashAccountMaxValue(\dstore\values\decimalValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <use_cash_account_max_value_null> has a value
     *
     * @return boolean
     */
    public function hasUseCashAccountMaxValueNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <use_cash_account_max_value_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearUseCashAccountMaxValueNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <use_cash_account_max_value_null> value
     *
     * @return boolean
     */
    public function getUseCashAccountMaxValueNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <use_cash_account_max_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setUseCashAccountMaxValueNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <abort_if_items_removed> has a value
     *
     * @return boolean
     */
    public function hasAbortIfItemsRemoved(){
      return $this->_has(15);
    }
    
    /**
     * Clear <abort_if_items_removed> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAbortIfItemsRemoved(){
      return $this->_clear(15);
    }
    
    /**
     * Get <abort_if_items_removed> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getAbortIfItemsRemoved(){
      return $this->_get(15);
    }
    
    /**
     * Set <abort_if_items_removed> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAbortIfItemsRemoved(\dstore\values\booleanValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <abort_if_items_removed_null> has a value
     *
     * @return boolean
     */
    public function hasAbortIfItemsRemovedNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <abort_if_items_removed_null> value
     *
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function clearAbortIfItemsRemovedNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <abort_if_items_removed_null> value
     *
     * @return boolean
     */
    public function getAbortIfItemsRemovedNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <abort_if_items_removed_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_CopyFromTrolleyToOrder_Pu\Parameters
     */
    public function setAbortIfItemsRemovedNull( $value){
      return $this->_set(1015, $value);
    }
  }
}

