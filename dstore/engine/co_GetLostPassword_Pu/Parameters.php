<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_GetLostPassword_Pu.proto
//   Date: 2015-08-17 11:45:21

namespace dstore\engine\co_GetLostPassword_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $password = null;
    
    /**  @var boolean */
    public $password_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $nickname = null;
    
    /**  @var boolean */
    public $nickname_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $answer = null;
    
    /**  @var boolean */
    public $answer_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_GetLostPassword_Pu.Parameters');

      // OPTIONAL MESSAGE password = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "password";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL password_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "password_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE nickname = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "nickname";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL nickname_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "nickname_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE answer = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "answer";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL answer_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "answer_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <password> has a value
     *
     * @return boolean
     */
    public function hasPassword(){
      return $this->_has(1);
    }
    
    /**
     * Clear <password> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearPassword(){
      return $this->_clear(1);
    }
    
    /**
     * Get <password> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPassword(){
      return $this->_get(1);
    }
    
    /**
     * Set <password> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setPassword(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <password_null> has a value
     *
     * @return boolean
     */
    public function hasPasswordNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <password_null> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearPasswordNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <password_null> value
     *
     * @return boolean
     */
    public function getPasswordNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <password_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setPasswordNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(2);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <nickname> has a value
     *
     * @return boolean
     */
    public function hasNickname(){
      return $this->_has(3);
    }
    
    /**
     * Clear <nickname> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearNickname(){
      return $this->_clear(3);
    }
    
    /**
     * Get <nickname> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getNickname(){
      return $this->_get(3);
    }
    
    /**
     * Set <nickname> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setNickname(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <nickname_null> has a value
     *
     * @return boolean
     */
    public function hasNicknameNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <nickname_null> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearNicknameNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <nickname_null> value
     *
     * @return boolean
     */
    public function getNicknameNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <nickname_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setNicknameNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <answer> has a value
     *
     * @return boolean
     */
    public function hasAnswer(){
      return $this->_has(4);
    }
    
    /**
     * Clear <answer> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearAnswer(){
      return $this->_clear(4);
    }
    
    /**
     * Get <answer> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getAnswer(){
      return $this->_get(4);
    }
    
    /**
     * Set <answer> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setAnswer(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <answer_null> has a value
     *
     * @return boolean
     */
    public function hasAnswerNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <answer_null> value
     *
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function clearAnswerNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <answer_null> value
     *
     * @return boolean
     */
    public function getAnswerNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <answer_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_GetLostPassword_Pu\Parameters
     */
    public function setAnswerNull( $value){
      return $this->_set(1004, $value);
    }
  }
}

