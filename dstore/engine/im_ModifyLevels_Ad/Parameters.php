<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_ModifyLevels_Ad.proto
//   Date: 2016-05-19 08:07:43

namespace dstore\engine\im_ModifyLevels_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $level_id = null;
    
    /**  @var boolean */
    public $level_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $level_no = null;
    
    /**  @var boolean */
    public $level_no_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $level_description = null;
    
    /**  @var boolean */
    public $level_description_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $default_symbol_id = null;
    
    /**  @var boolean */
    public $default_symbol_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $default_template_id = null;
    
    /**  @var boolean */
    public $default_template_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $delete_level = null;
    
    /**  @var boolean */
    public $delete_level_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_ModifyLevels_Ad.Parameters');

      // OPTIONAL MESSAGE level_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "level_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "level_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_description = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "level_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_description_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "level_description_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_symbol_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "default_symbol_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL default_symbol_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "default_symbol_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_template_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "default_template_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL default_template_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "default_template_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_level = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delete_level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_level_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delete_level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <level_id> has a value
     *
     * @return boolean
     */
    public function hasLevelId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <level_id> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <level_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLevelId(){
      return $this->_get(1);
    }
    
    /**
     * Set <level_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <level_id_null> has a value
     *
     * @return boolean
     */
    public function hasLevelIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <level_id_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <level_id_null> value
     *
     * @return boolean
     */
    public function getLevelIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <level_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <level_no> has a value
     *
     * @return boolean
     */
    public function hasLevelNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <level_no> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <level_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLevelNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <level_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelNo(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <level_no_null> has a value
     *
     * @return boolean
     */
    public function hasLevelNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <level_no_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <level_no_null> value
     *
     * @return boolean
     */
    public function getLevelNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <level_description> has a value
     *
     * @return boolean
     */
    public function hasLevelDescription(){
      return $this->_has(3);
    }
    
    /**
     * Clear <level_description> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelDescription(){
      return $this->_clear(3);
    }
    
    /**
     * Get <level_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getLevelDescription(){
      return $this->_get(3);
    }
    
    /**
     * Set <level_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelDescription(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <level_description_null> has a value
     *
     * @return boolean
     */
    public function hasLevelDescriptionNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <level_description_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearLevelDescriptionNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <level_description_null> value
     *
     * @return boolean
     */
    public function getLevelDescriptionNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <level_description_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setLevelDescriptionNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <default_symbol_id> has a value
     *
     * @return boolean
     */
    public function hasDefaultSymbolId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <default_symbol_id> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDefaultSymbolId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <default_symbol_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDefaultSymbolId(){
      return $this->_get(4);
    }
    
    /**
     * Set <default_symbol_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDefaultSymbolId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <default_symbol_id_null> has a value
     *
     * @return boolean
     */
    public function hasDefaultSymbolIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <default_symbol_id_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDefaultSymbolIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <default_symbol_id_null> value
     *
     * @return boolean
     */
    public function getDefaultSymbolIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <default_symbol_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDefaultSymbolIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <default_template_id> has a value
     *
     * @return boolean
     */
    public function hasDefaultTemplateId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <default_template_id> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDefaultTemplateId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <default_template_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDefaultTemplateId(){
      return $this->_get(5);
    }
    
    /**
     * Set <default_template_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDefaultTemplateId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <default_template_id_null> has a value
     *
     * @return boolean
     */
    public function hasDefaultTemplateIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <default_template_id_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDefaultTemplateIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <default_template_id_null> value
     *
     * @return boolean
     */
    public function getDefaultTemplateIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <default_template_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDefaultTemplateIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delete_level> has a value
     *
     * @return boolean
     */
    public function hasDeleteLevel(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delete_level> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDeleteLevel(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delete_level> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDeleteLevel(){
      return $this->_get(6);
    }
    
    /**
     * Set <delete_level> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDeleteLevel(\dstore\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delete_level_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteLevelNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delete_level_null> value
     *
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function clearDeleteLevelNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delete_level_null> value
     *
     * @return boolean
     */
    public function getDeleteLevelNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delete_level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_ModifyLevels_Ad\Parameters
     */
    public function setDeleteLevelNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

