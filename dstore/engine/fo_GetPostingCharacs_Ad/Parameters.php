<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetPostingCharacs_Ad.proto
//   Date: 2016-05-19 08:07:41

namespace dstore\engine\fo_GetPostingCharacs_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $posting_characteristic_id = null;
    
    /**  @var boolean */
    public $posting_characteristic_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $get_assigned_forums_or_categories = null;
    
    /**  @var boolean */
    public $get_assigned_forums_or_categories_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $characs_assigned_to_forum_id = null;
    
    /**  @var boolean */
    public $characs_assigned_to_forum_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $characs_assigned_to_category_id = null;
    
    /**  @var boolean */
    public $characs_assigned_to_category_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetPostingCharacs_Ad.Parameters');

      // OPTIONAL MESSAGE posting_characteristic_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "posting_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL posting_characteristic_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "posting_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_assigned_forums_or_categories = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "get_assigned_forums_or_categories";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_assigned_forums_or_categories_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "get_assigned_forums_or_categories_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characs_assigned_to_forum_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "characs_assigned_to_forum_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characs_assigned_to_forum_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "characs_assigned_to_forum_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characs_assigned_to_category_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "characs_assigned_to_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characs_assigned_to_category_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "characs_assigned_to_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <posting_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPostingCharacteristicId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <posting_characteristic_id> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearPostingCharacteristicId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <posting_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPostingCharacteristicId(){
      return $this->_get(1);
    }
    
    /**
     * Set <posting_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setPostingCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <posting_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasPostingCharacteristicIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <posting_characteristic_id_null> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearPostingCharacteristicIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <posting_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getPostingCharacteristicIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <posting_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setPostingCharacteristicIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <get_assigned_forums_or_categories> has a value
     *
     * @return boolean
     */
    public function hasGetAssignedForumsOrCategories(){
      return $this->_has(2);
    }
    
    /**
     * Clear <get_assigned_forums_or_categories> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearGetAssignedForumsOrCategories(){
      return $this->_clear(2);
    }
    
    /**
     * Get <get_assigned_forums_or_categories> value
     *
     * @return \dstore\values\integerValue
     */
    public function getGetAssignedForumsOrCategories(){
      return $this->_get(2);
    }
    
    /**
     * Set <get_assigned_forums_or_categories> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setGetAssignedForumsOrCategories(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <get_assigned_forums_or_categories_null> has a value
     *
     * @return boolean
     */
    public function hasGetAssignedForumsOrCategoriesNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <get_assigned_forums_or_categories_null> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearGetAssignedForumsOrCategoriesNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <get_assigned_forums_or_categories_null> value
     *
     * @return boolean
     */
    public function getGetAssignedForumsOrCategoriesNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <get_assigned_forums_or_categories_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setGetAssignedForumsOrCategoriesNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <characs_assigned_to_forum_id> has a value
     *
     * @return boolean
     */
    public function hasCharacsAssignedToForumId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <characs_assigned_to_forum_id> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearCharacsAssignedToForumId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <characs_assigned_to_forum_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCharacsAssignedToForumId(){
      return $this->_get(3);
    }
    
    /**
     * Set <characs_assigned_to_forum_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setCharacsAssignedToForumId(\dstore\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <characs_assigned_to_forum_id_null> has a value
     *
     * @return boolean
     */
    public function hasCharacsAssignedToForumIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <characs_assigned_to_forum_id_null> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearCharacsAssignedToForumIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <characs_assigned_to_forum_id_null> value
     *
     * @return boolean
     */
    public function getCharacsAssignedToForumIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <characs_assigned_to_forum_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setCharacsAssignedToForumIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <characs_assigned_to_category_id> has a value
     *
     * @return boolean
     */
    public function hasCharacsAssignedToCategoryId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <characs_assigned_to_category_id> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearCharacsAssignedToCategoryId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <characs_assigned_to_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCharacsAssignedToCategoryId(){
      return $this->_get(4);
    }
    
    /**
     * Set <characs_assigned_to_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setCharacsAssignedToCategoryId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <characs_assigned_to_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasCharacsAssignedToCategoryIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <characs_assigned_to_category_id_null> value
     *
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function clearCharacsAssignedToCategoryIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <characs_assigned_to_category_id_null> value
     *
     * @return boolean
     */
    public function getCharacsAssignedToCategoryIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <characs_assigned_to_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\fo_GetPostingCharacs_Ad\Parameters
     */
    public function setCharacsAssignedToCategoryIdNull( $value){
      return $this->_set(1004, $value);
    }
  }
}

