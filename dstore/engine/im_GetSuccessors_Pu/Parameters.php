<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetSuccessors_Pu.proto
//   Date: 2016-05-19 08:07:42

namespace dstore\engine\im_GetSuccessors_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\stringValue */
    public $tree_node_list = null;
    
    /**  @var boolean */
    public $tree_node_list_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $level_no = null;
    
    /**  @var boolean */
    public $level_no_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_tree_node_list = null;
    
    /**  @var boolean */
    public $include_tree_node_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $filter_by_characteristic_id = null;
    
    /**  @var boolean */
    public $filter_by_characteristic_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $filter_by_charac_value = null;
    
    /**  @var boolean */
    public $filter_by_charac_value_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $binary_characteristic_value_id = null;
    
    /**  @var boolean */
    public $binary_characteristic_value_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $negate_filter_by_params = null;
    
    /**  @var boolean */
    public $negate_filter_by_params_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $sort_by_characteristic_id_list = null;
    
    /**  @var boolean */
    public $sort_by_characteristic_id_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $sort_option_list = null;
    
    /**  @var boolean */
    public $sort_option_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $inherit_depth_option_list = null;
    
    /**  @var boolean */
    public $inherit_depth_option_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $recursive_evaluation_option_list = null;
    
    /**  @var boolean */
    public $recursive_evaluation_option_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_values_for_sort_by_characs = null;
    
    /**  @var boolean */
    public $get_values_for_sort_by_characs_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $from_row_number = null;
    
    /**  @var boolean */
    public $from_row_number_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $max_number_of_nodes = null;
    
    /**  @var boolean */
    public $max_number_of_nodes_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetSuccessors_Pu.Parameters');

      // OPTIONAL MESSAGE tree_node_list = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tree_node_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_list_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "tree_node_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_tree_node_list = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "include_tree_node_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_tree_node_list_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "include_tree_node_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_characteristic_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "filter_by_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_characteristic_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "filter_by_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_charac_value = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "filter_by_charac_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_charac_value_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "filter_by_charac_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_characteristic_value_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "binary_characteristic_value_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL binary_characteristic_value_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "binary_characteristic_value_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE negate_filter_by_params = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "negate_filter_by_params";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL negate_filter_by_params_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "negate_filter_by_params_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_by_characteristic_id_list = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "sort_by_characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_by_characteristic_id_list_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "sort_by_characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_option_list = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "sort_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_option_list_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "sort_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE inherit_depth_option_list = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "inherit_depth_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL inherit_depth_option_list_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "inherit_depth_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE recursive_evaluation_option_list = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "recursive_evaluation_option_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL recursive_evaluation_option_list_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "recursive_evaluation_option_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_values_for_sort_by_characs = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "get_values_for_sort_by_characs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_values_for_sort_by_characs_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "get_values_for_sort_by_characs_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_row_number = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "from_row_number";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_row_number_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "from_row_number_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_nodes = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "max_number_of_nodes";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_nodes_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "max_number_of_nodes_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tree_node_list> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeList(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tree_node_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearTreeNodeList(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tree_node_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getTreeNodeList(){
      return $this->_get(1);
    }
    
    /**
     * Set <tree_node_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setTreeNodeList(\dstore\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <tree_node_list_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeListNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <tree_node_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearTreeNodeListNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <tree_node_list_null> value
     *
     * @return boolean
     */
    public function getTreeNodeListNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <tree_node_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setTreeNodeListNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <level_no> has a value
     *
     * @return boolean
     */
    public function hasLevelNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <level_no> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearLevelNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <level_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLevelNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <level_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setLevelNo(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <level_no_null> has a value
     *
     * @return boolean
     */
    public function hasLevelNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <level_no_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearLevelNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <level_no_null> value
     *
     * @return boolean
     */
    public function getLevelNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setLevelNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <include_tree_node_list> has a value
     *
     * @return boolean
     */
    public function hasIncludeTreeNodeList(){
      return $this->_has(3);
    }
    
    /**
     * Clear <include_tree_node_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearIncludeTreeNodeList(){
      return $this->_clear(3);
    }
    
    /**
     * Get <include_tree_node_list> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeTreeNodeList(){
      return $this->_get(3);
    }
    
    /**
     * Set <include_tree_node_list> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setIncludeTreeNodeList(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <include_tree_node_list_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeTreeNodeListNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <include_tree_node_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearIncludeTreeNodeListNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <include_tree_node_list_null> value
     *
     * @return boolean
     */
    public function getIncludeTreeNodeListNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <include_tree_node_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setIncludeTreeNodeListNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(4);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setOutputIntoOneId(\dstore\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <filter_by_characteristic_id> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFilterByCharacteristicId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <filter_by_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFilterByCharacteristicId(){
      return $this->_get(5);
    }
    
    /**
     * Set <filter_by_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFilterByCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <filter_by_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacteristicIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <filter_by_characteristic_id_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFilterByCharacteristicIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <filter_by_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacteristicIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <filter_by_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFilterByCharacteristicIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <filter_by_charac_value> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValue(){
      return $this->_has(6);
    }
    
    /**
     * Clear <filter_by_charac_value> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFilterByCharacValue(){
      return $this->_clear(6);
    }
    
    /**
     * Get <filter_by_charac_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getFilterByCharacValue(){
      return $this->_get(6);
    }
    
    /**
     * Set <filter_by_charac_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFilterByCharacValue(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <filter_by_charac_value_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByCharacValueNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <filter_by_charac_value_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFilterByCharacValueNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <filter_by_charac_value_null> value
     *
     * @return boolean
     */
    public function getFilterByCharacValueNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <filter_by_charac_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFilterByCharacValueNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <binary_characteristic_value_id> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <binary_characteristic_value_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBinaryCharacteristicValueId(){
      return $this->_get(7);
    }
    
    /**
     * Set <binary_characteristic_value_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setBinaryCharacteristicValueId(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <binary_characteristic_value_id_null> has a value
     *
     * @return boolean
     */
    public function hasBinaryCharacteristicValueIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <binary_characteristic_value_id_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearBinaryCharacteristicValueIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <binary_characteristic_value_id_null> value
     *
     * @return boolean
     */
    public function getBinaryCharacteristicValueIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <binary_characteristic_value_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setBinaryCharacteristicValueIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <negate_filter_by_params> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParams(){
      return $this->_has(8);
    }
    
    /**
     * Clear <negate_filter_by_params> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearNegateFilterByParams(){
      return $this->_clear(8);
    }
    
    /**
     * Get <negate_filter_by_params> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getNegateFilterByParams(){
      return $this->_get(8);
    }
    
    /**
     * Set <negate_filter_by_params> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setNegateFilterByParams(\dstore\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <negate_filter_by_params_null> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterByParamsNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <negate_filter_by_params_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearNegateFilterByParamsNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <negate_filter_by_params_null> value
     *
     * @return boolean
     */
    public function getNegateFilterByParamsNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <negate_filter_by_params_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setNegateFilterByParamsNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <sort_by_characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdList(){
      return $this->_has(9);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearSortByCharacteristicIdList(){
      return $this->_clear(9);
    }
    
    /**
     * Get <sort_by_characteristic_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSortByCharacteristicIdList(){
      return $this->_get(9);
    }
    
    /**
     * Set <sort_by_characteristic_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setSortByCharacteristicIdList(\dstore\values\stringValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <sort_by_characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortByCharacteristicIdListNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <sort_by_characteristic_id_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearSortByCharacteristicIdListNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <sort_by_characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getSortByCharacteristicIdListNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <sort_by_characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setSortByCharacteristicIdListNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <sort_option_list> has a value
     *
     * @return boolean
     */
    public function hasSortOptionList(){
      return $this->_has(10);
    }
    
    /**
     * Clear <sort_option_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearSortOptionList(){
      return $this->_clear(10);
    }
    
    /**
     * Get <sort_option_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSortOptionList(){
      return $this->_get(10);
    }
    
    /**
     * Set <sort_option_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setSortOptionList(\dstore\values\stringValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <sort_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasSortOptionListNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <sort_option_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearSortOptionListNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <sort_option_list_null> value
     *
     * @return boolean
     */
    public function getSortOptionListNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <sort_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setSortOptionListNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionList(){
      return $this->_has(11);
    }
    
    /**
     * Clear <inherit_depth_option_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearInheritDepthOptionList(){
      return $this->_clear(11);
    }
    
    /**
     * Get <inherit_depth_option_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getInheritDepthOptionList(){
      return $this->_get(11);
    }
    
    /**
     * Set <inherit_depth_option_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setInheritDepthOptionList(\dstore\values\stringValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <inherit_depth_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasInheritDepthOptionListNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <inherit_depth_option_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearInheritDepthOptionListNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <inherit_depth_option_list_null> value
     *
     * @return boolean
     */
    public function getInheritDepthOptionListNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <inherit_depth_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setInheritDepthOptionListNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionList(){
      return $this->_has(12);
    }
    
    /**
     * Clear <recursive_evaluation_option_list> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionList(){
      return $this->_clear(12);
    }
    
    /**
     * Get <recursive_evaluation_option_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getRecursiveEvaluationOptionList(){
      return $this->_get(12);
    }
    
    /**
     * Set <recursive_evaluation_option_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionList(\dstore\values\stringValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <recursive_evaluation_option_list_null> has a value
     *
     * @return boolean
     */
    public function hasRecursiveEvaluationOptionListNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <recursive_evaluation_option_list_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearRecursiveEvaluationOptionListNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <recursive_evaluation_option_list_null> value
     *
     * @return boolean
     */
    public function getRecursiveEvaluationOptionListNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <recursive_evaluation_option_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setRecursiveEvaluationOptionListNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacs(){
      return $this->_has(13);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacs(){
      return $this->_clear(13);
    }
    
    /**
     * Get <get_values_for_sort_by_characs> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetValuesForSortByCharacs(){
      return $this->_get(13);
    }
    
    /**
     * Set <get_values_for_sort_by_characs> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setGetValuesForSortByCharacs(\dstore\values\booleanValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <get_values_for_sort_by_characs_null> has a value
     *
     * @return boolean
     */
    public function hasGetValuesForSortByCharacsNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <get_values_for_sort_by_characs_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearGetValuesForSortByCharacsNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <get_values_for_sort_by_characs_null> value
     *
     * @return boolean
     */
    public function getGetValuesForSortByCharacsNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <get_values_for_sort_by_characs_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setGetValuesForSortByCharacsNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <from_row_number> has a value
     *
     * @return boolean
     */
    public function hasFromRowNumber(){
      return $this->_has(14);
    }
    
    /**
     * Clear <from_row_number> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFromRowNumber(){
      return $this->_clear(14);
    }
    
    /**
     * Get <from_row_number> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFromRowNumber(){
      return $this->_get(14);
    }
    
    /**
     * Set <from_row_number> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFromRowNumber(\dstore\values\integerValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <from_row_number_null> has a value
     *
     * @return boolean
     */
    public function hasFromRowNumberNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <from_row_number_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearFromRowNumberNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <from_row_number_null> value
     *
     * @return boolean
     */
    public function getFromRowNumberNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <from_row_number_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setFromRowNumberNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <max_number_of_nodes> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfNodes(){
      return $this->_has(15);
    }
    
    /**
     * Clear <max_number_of_nodes> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearMaxNumberOfNodes(){
      return $this->_clear(15);
    }
    
    /**
     * Get <max_number_of_nodes> value
     *
     * @return \dstore\values\integerValue
     */
    public function getMaxNumberOfNodes(){
      return $this->_get(15);
    }
    
    /**
     * Set <max_number_of_nodes> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setMaxNumberOfNodes(\dstore\values\integerValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <max_number_of_nodes_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfNodesNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <max_number_of_nodes_null> value
     *
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function clearMaxNumberOfNodesNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <max_number_of_nodes_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfNodesNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <max_number_of_nodes_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetSuccessors_Pu\Parameters
     */
    public function setMaxNumberOfNodesNull( $value){
      return $this->_set(1015, $value);
    }
  }
}

