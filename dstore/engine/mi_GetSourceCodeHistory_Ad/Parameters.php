<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_GetSourceCodeHistory_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\mi_GetSourceCodeHistory_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $object_name = null;
    
    /**  @var boolean */
    public $object_name_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $history_id = null;
    
    /**  @var boolean */
    public $history_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $include_comment = null;
    
    /**  @var boolean */
    public $include_comment_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_GetSourceCodeHistory_Ad.Parameters');

      // OPTIONAL MESSAGE object_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "object_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL object_name_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "object_name_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE history_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "history_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL history_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "history_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_comment = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "include_comment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_comment_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "include_comment_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <object_name> has a value
     *
     * @return boolean
     */
    public function hasObjectName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <object_name> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearObjectName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <object_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getObjectName(){
      return $this->_get(1);
    }
    
    /**
     * Set <object_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setObjectName(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <object_name_null> has a value
     *
     * @return boolean
     */
    public function hasObjectNameNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <object_name_null> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearObjectNameNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <object_name_null> value
     *
     * @return boolean
     */
    public function getObjectNameNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <object_name_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setObjectNameNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setFromDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setToDate(\dstore\engine\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <history_id> has a value
     *
     * @return boolean
     */
    public function hasHistoryId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <history_id> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearHistoryId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <history_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getHistoryId(){
      return $this->_get(4);
    }
    
    /**
     * Set <history_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setHistoryId(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <history_id_null> has a value
     *
     * @return boolean
     */
    public function hasHistoryIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <history_id_null> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearHistoryIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <history_id_null> value
     *
     * @return boolean
     */
    public function getHistoryIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <history_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setHistoryIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <include_comment> has a value
     *
     * @return boolean
     */
    public function hasIncludeComment(){
      return $this->_has(5);
    }
    
    /**
     * Clear <include_comment> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearIncludeComment(){
      return $this->_clear(5);
    }
    
    /**
     * Get <include_comment> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIncludeComment(){
      return $this->_get(5);
    }
    
    /**
     * Set <include_comment> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setIncludeComment(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <include_comment_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeCommentNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <include_comment_null> value
     *
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function clearIncludeCommentNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <include_comment_null> value
     *
     * @return boolean
     */
    public function getIncludeCommentNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <include_comment_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetSourceCodeHistory_Ad\Parameters
     */
    public function setIncludeCommentNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

