<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_GetUsageOfTables_Ad.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\mi_GetUsageOfTables_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $table_name = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $object_type = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $code_line_number = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $code_line = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $object_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_GetUsageOfTables_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE table_name = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE object_type = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "object_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE code_line_number = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "code_line_number";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE code_line = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "code_line";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE object_name = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "object_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearTableName(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <table_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getTableName(){
      return $this->_get(10001);
    }
    
    /**
     * Set <table_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setTableName(\dstore\engine\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <object_type> has a value
     *
     * @return boolean
     */
    public function hasObjectType(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <object_type> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearObjectType(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <object_type> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getObjectType(){
      return $this->_get(10002);
    }
    
    /**
     * Set <object_type> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setObjectType(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <code_line_number> has a value
     *
     * @return boolean
     */
    public function hasCodeLineNumber(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <code_line_number> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearCodeLineNumber(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <code_line_number> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCodeLineNumber(){
      return $this->_get(10003);
    }
    
    /**
     * Set <code_line_number> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setCodeLineNumber(\dstore\engine\values\integerValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <code_line> has a value
     *
     * @return boolean
     */
    public function hasCodeLine(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <code_line> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearCodeLine(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <code_line> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCodeLine(){
      return $this->_get(10004);
    }
    
    /**
     * Set <code_line> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setCodeLine(\dstore\engine\values\stringValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <object_name> has a value
     *
     * @return boolean
     */
    public function hasObjectName(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <object_name> value
     *
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function clearObjectName(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <object_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getObjectName(){
      return $this->_get(10005);
    }
    
    /**
     * Set <object_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_GetUsageOfTables_Ad\Response\Row
     */
    public function setObjectName(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
  }
}

