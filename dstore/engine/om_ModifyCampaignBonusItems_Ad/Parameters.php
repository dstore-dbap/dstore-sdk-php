<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyCampaignBonusItems_Ad.proto
//   Date: 2016-05-19 08:07:51

namespace dstore\engine\om_ModifyCampaignBonusItems_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $bonus_from_one_set_only = null;
    
    /**  @var boolean */
    public $bonus_from_one_set_only_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $delete_benefit = null;
    
    /**  @var boolean */
    public $delete_benefit_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyCampaignBonusItems_Ad.Parameters');

      // OPTIONAL MESSAGE bonus_from_one_set_only = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "bonus_from_one_set_only";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL bonus_from_one_set_only_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "bonus_from_one_set_only_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_benefit = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "delete_benefit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_benefit_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "delete_benefit_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <bonus_from_one_set_only> has a value
     *
     * @return boolean
     */
    public function hasBonusFromOneSetOnly(){
      return $this->_has(1);
    }
    
    /**
     * Clear <bonus_from_one_set_only> value
     *
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function clearBonusFromOneSetOnly(){
      return $this->_clear(1);
    }
    
    /**
     * Get <bonus_from_one_set_only> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getBonusFromOneSetOnly(){
      return $this->_get(1);
    }
    
    /**
     * Set <bonus_from_one_set_only> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function setBonusFromOneSetOnly(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <bonus_from_one_set_only_null> has a value
     *
     * @return boolean
     */
    public function hasBonusFromOneSetOnlyNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <bonus_from_one_set_only_null> value
     *
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function clearBonusFromOneSetOnlyNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <bonus_from_one_set_only_null> value
     *
     * @return boolean
     */
    public function getBonusFromOneSetOnlyNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <bonus_from_one_set_only_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function setBonusFromOneSetOnlyNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <delete_benefit> has a value
     *
     * @return boolean
     */
    public function hasDeleteBenefit(){
      return $this->_has(2);
    }
    
    /**
     * Clear <delete_benefit> value
     *
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function clearDeleteBenefit(){
      return $this->_clear(2);
    }
    
    /**
     * Get <delete_benefit> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDeleteBenefit(){
      return $this->_get(2);
    }
    
    /**
     * Set <delete_benefit> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function setDeleteBenefit(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <delete_benefit_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteBenefitNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <delete_benefit_null> value
     *
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function clearDeleteBenefitNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <delete_benefit_null> value
     *
     * @return boolean
     */
    public function getDeleteBenefitNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <delete_benefit_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCampaignBonusItems_Ad\Parameters
     */
    public function setDeleteBenefitNull( $value){
      return $this->_set(1002, $value);
    }
  }
}

