<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_AcknowledgeOrders_Ad.proto
//   Date: 2015-10-06 11:19:55

namespace dstore\engine\om_AcknowledgeOrders_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\booleanValue */
    public $add_order_informations = null;
    
    /**  @var boolean */
    public $add_order_informations_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_id = null;
    
    /**  @var boolean */
    public $order_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $order_no = null;
    
    /**  @var boolean */
    public $order_no_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $customer_no = null;
    
    /**  @var boolean */
    public $customer_no_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $delivery_customer_no = null;
    
    /**  @var boolean */
    public $delivery_customer_no_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $fireac_acknowledge_order = null;
    
    /**  @var boolean */
    public $fireac_acknowledge_order_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $add_order_information = null;
    
    /**  @var boolean */
    public $add_order_information_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $add_order_content_information = null;
    
    /**  @var boolean */
    public $add_order_content_information_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_AcknowledgeOrders_Ad.Parameters');

      // OPTIONAL MESSAGE add_order_informations = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "add_order_informations";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_informations_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "add_order_informations_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "order_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "order_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_no = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "order_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_no_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "order_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE customer_no = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "customer_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL customer_no_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "customer_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delivery_customer_no = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "delivery_customer_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delivery_customer_no_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "delivery_customer_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE fireac_acknowledge_order = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "fireac_acknowledge_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL fireac_acknowledge_order_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "fireac_acknowledge_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE add_order_information = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "add_order_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_information_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "add_order_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE add_order_content_information = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "add_order_content_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL add_order_content_information_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "add_order_content_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <add_order_informations> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformations(){
      return $this->_has(1);
    }
    
    /**
     * Clear <add_order_informations> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderInformations(){
      return $this->_clear(1);
    }
    
    /**
     * Get <add_order_informations> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getAddOrderInformations(){
      return $this->_get(1);
    }
    
    /**
     * Set <add_order_informations> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderInformations(\dstore\engine\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <add_order_informations_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformationsNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <add_order_informations_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderInformationsNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <add_order_informations_null> value
     *
     * @return boolean
     */
    public function getAddOrderInformationsNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <add_order_informations_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderInformationsNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <order_id> has a value
     *
     * @return boolean
     */
    public function hasOrderId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <order_id> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearOrderId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <order_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderId(){
      return $this->_get(2);
    }
    
    /**
     * Set <order_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setOrderId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <order_id_null> has a value
     *
     * @return boolean
     */
    public function hasOrderIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <order_id_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearOrderIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <order_id_null> value
     *
     * @return boolean
     */
    public function getOrderIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <order_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setOrderIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <order_no> has a value
     *
     * @return boolean
     */
    public function hasOrderNo(){
      return $this->_has(3);
    }
    
    /**
     * Clear <order_no> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearOrderNo(){
      return $this->_clear(3);
    }
    
    /**
     * Get <order_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOrderNo(){
      return $this->_get(3);
    }
    
    /**
     * Set <order_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setOrderNo(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <order_no_null> has a value
     *
     * @return boolean
     */
    public function hasOrderNoNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <order_no_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearOrderNoNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <order_no_null> value
     *
     * @return boolean
     */
    public function getOrderNoNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <order_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setOrderNoNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <customer_no> has a value
     *
     * @return boolean
     */
    public function hasCustomerNo(){
      return $this->_has(4);
    }
    
    /**
     * Clear <customer_no> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearCustomerNo(){
      return $this->_clear(4);
    }
    
    /**
     * Get <customer_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCustomerNo(){
      return $this->_get(4);
    }
    
    /**
     * Set <customer_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setCustomerNo(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <customer_no_null> has a value
     *
     * @return boolean
     */
    public function hasCustomerNoNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <customer_no_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearCustomerNoNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <customer_no_null> value
     *
     * @return boolean
     */
    public function getCustomerNoNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <customer_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setCustomerNoNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <delivery_customer_no> has a value
     *
     * @return boolean
     */
    public function hasDeliveryCustomerNo(){
      return $this->_has(5);
    }
    
    /**
     * Clear <delivery_customer_no> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearDeliveryCustomerNo(){
      return $this->_clear(5);
    }
    
    /**
     * Get <delivery_customer_no> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDeliveryCustomerNo(){
      return $this->_get(5);
    }
    
    /**
     * Set <delivery_customer_no> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setDeliveryCustomerNo(\dstore\engine\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <delivery_customer_no_null> has a value
     *
     * @return boolean
     */
    public function hasDeliveryCustomerNoNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <delivery_customer_no_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearDeliveryCustomerNoNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <delivery_customer_no_null> value
     *
     * @return boolean
     */
    public function getDeliveryCustomerNoNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <delivery_customer_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setDeliveryCustomerNoNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <fireac_acknowledge_order> has a value
     *
     * @return boolean
     */
    public function hasFireacAcknowledgeOrder(){
      return $this->_has(6);
    }
    
    /**
     * Clear <fireac_acknowledge_order> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearFireacAcknowledgeOrder(){
      return $this->_clear(6);
    }
    
    /**
     * Get <fireac_acknowledge_order> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getFireacAcknowledgeOrder(){
      return $this->_get(6);
    }
    
    /**
     * Set <fireac_acknowledge_order> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setFireacAcknowledgeOrder(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <fireac_acknowledge_order_null> has a value
     *
     * @return boolean
     */
    public function hasFireacAcknowledgeOrderNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <fireac_acknowledge_order_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearFireacAcknowledgeOrderNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <fireac_acknowledge_order_null> value
     *
     * @return boolean
     */
    public function getFireacAcknowledgeOrderNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <fireac_acknowledge_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setFireacAcknowledgeOrderNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <add_order_information> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformation(){
      return $this->_has(7);
    }
    
    /**
     * Clear <add_order_information> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderInformation(){
      return $this->_clear(7);
    }
    
    /**
     * Get <add_order_information> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAddOrderInformation(){
      return $this->_get(7);
    }
    
    /**
     * Set <add_order_information> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderInformation(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <add_order_information_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderInformationNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <add_order_information_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderInformationNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <add_order_information_null> value
     *
     * @return boolean
     */
    public function getAddOrderInformationNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <add_order_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderInformationNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <add_order_content_information> has a value
     *
     * @return boolean
     */
    public function hasAddOrderContentInformation(){
      return $this->_has(8);
    }
    
    /**
     * Clear <add_order_content_information> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderContentInformation(){
      return $this->_clear(8);
    }
    
    /**
     * Get <add_order_content_information> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAddOrderContentInformation(){
      return $this->_get(8);
    }
    
    /**
     * Set <add_order_content_information> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderContentInformation(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <add_order_content_information_null> has a value
     *
     * @return boolean
     */
    public function hasAddOrderContentInformationNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <add_order_content_information_null> value
     *
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function clearAddOrderContentInformationNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <add_order_content_information_null> value
     *
     * @return boolean
     */
    public function getAddOrderContentInformationNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <add_order_content_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_AcknowledgeOrders_Ad\Parameters
     */
    public function setAddOrderContentInformationNull( $value){
      return $this->_set(1008, $value);
    }
  }
}

