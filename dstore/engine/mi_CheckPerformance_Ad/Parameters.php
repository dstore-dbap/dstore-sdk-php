<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_CheckPerformance_Ad.proto
//   Date: 2015-10-06 11:19:50

namespace dstore\engine\mi_CheckPerformance_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $procedure_names = null;
    
    /**  @var boolean */
    public $procedure_names_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_procedures_in_any_values = null;
    
    /**  @var boolean */
    public $only_procedures_in_any_values_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id = null;
    
    /**  @var boolean */
    public $tree_node_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $tree_node_id_for_variant_matrix = null;
    
    /**  @var boolean */
    public $tree_node_id_for_variant_matrix_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $y_axis_characteristic_id = null;
    
    /**  @var boolean */
    public $y_axis_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $x_axis_characteristic_id = null;
    
    /**  @var boolean */
    public $x_axis_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $value_characteristic_id = null;
    
    /**  @var boolean */
    public $value_characteristic_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $search_node_characteristic_ids = null;
    
    /**  @var boolean */
    public $search_node_characteristic_ids_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $search_value = null;
    
    /**  @var boolean */
    public $search_value_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $search_person_type_id = null;
    
    /**  @var boolean */
    public $search_person_type_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $person_output_characteristics = null;
    
    /**  @var boolean */
    public $person_output_characteristics_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $person_characteristic_ids = null;
    
    /**  @var boolean */
    public $person_characteristic_ids_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition_list = null;
    
    /**  @var boolean */
    public $condition_list_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_person_id = null;
    
    /**  @var boolean */
    public $order_person_id_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_CheckPerformance_Ad.Parameters');

      // OPTIONAL MESSAGE procedure_names = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "procedure_names";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL procedure_names_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "procedure_names_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_procedures_in_any_values = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "only_procedures_in_any_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_procedures_in_any_values_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "only_procedures_in_any_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE tree_node_id_for_variant_matrix = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "tree_node_id_for_variant_matrix";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL tree_node_id_for_variant_matrix_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "tree_node_id_for_variant_matrix_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE y_axis_characteristic_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "y_axis_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL y_axis_characteristic_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "y_axis_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE x_axis_characteristic_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "x_axis_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL x_axis_characteristic_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "x_axis_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_characteristic_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "value_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_characteristic_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "value_characteristic_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_node_characteristic_ids = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "search_node_characteristic_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_node_characteristic_ids_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "search_node_characteristic_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_value = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "search_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_value_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "search_value_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE search_person_type_id = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "search_person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL search_person_type_id_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "search_person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_output_characteristics = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "person_output_characteristics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_output_characteristics_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "person_output_characteristics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_characteristic_ids = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "person_characteristic_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_characteristic_ids_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "person_characteristic_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_list = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_list_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_person_id = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "order_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_person_id_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "order_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <procedure_names> has a value
     *
     * @return boolean
     */
    public function hasProcedureNames(){
      return $this->_has(1);
    }
    
    /**
     * Clear <procedure_names> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearProcedureNames(){
      return $this->_clear(1);
    }
    
    /**
     * Get <procedure_names> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getProcedureNames(){
      return $this->_get(1);
    }
    
    /**
     * Set <procedure_names> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setProcedureNames(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <procedure_names_null> has a value
     *
     * @return boolean
     */
    public function hasProcedureNamesNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <procedure_names_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearProcedureNamesNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <procedure_names_null> value
     *
     * @return boolean
     */
    public function getProcedureNamesNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <procedure_names_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setProcedureNamesNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <only_procedures_in_any_values> has a value
     *
     * @return boolean
     */
    public function hasOnlyProceduresInAnyValues(){
      return $this->_has(2);
    }
    
    /**
     * Clear <only_procedures_in_any_values> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearOnlyProceduresInAnyValues(){
      return $this->_clear(2);
    }
    
    /**
     * Get <only_procedures_in_any_values> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyProceduresInAnyValues(){
      return $this->_get(2);
    }
    
    /**
     * Set <only_procedures_in_any_values> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setOnlyProceduresInAnyValues(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <only_procedures_in_any_values_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyProceduresInAnyValuesNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <only_procedures_in_any_values_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearOnlyProceduresInAnyValuesNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <only_procedures_in_any_values_null> value
     *
     * @return boolean
     */
    public function getOnlyProceduresInAnyValuesNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <only_procedures_in_any_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setOnlyProceduresInAnyValuesNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <tree_node_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearTreeNodeId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <tree_node_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeId(){
      return $this->_get(3);
    }
    
    /**
     * Set <tree_node_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setTreeNodeId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <tree_node_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearTreeNodeIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <tree_node_id_null> value
     *
     * @return boolean
     */
    public function getTreeNodeIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setTreeNodeIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <tree_node_id_for_variant_matrix> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdForVariantMatrix(){
      return $this->_has(4);
    }
    
    /**
     * Clear <tree_node_id_for_variant_matrix> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearTreeNodeIdForVariantMatrix(){
      return $this->_clear(4);
    }
    
    /**
     * Get <tree_node_id_for_variant_matrix> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getTreeNodeIdForVariantMatrix(){
      return $this->_get(4);
    }
    
    /**
     * Set <tree_node_id_for_variant_matrix> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setTreeNodeIdForVariantMatrix(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <tree_node_id_for_variant_matrix_null> has a value
     *
     * @return boolean
     */
    public function hasTreeNodeIdForVariantMatrixNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <tree_node_id_for_variant_matrix_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearTreeNodeIdForVariantMatrixNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <tree_node_id_for_variant_matrix_null> value
     *
     * @return boolean
     */
    public function getTreeNodeIdForVariantMatrixNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <tree_node_id_for_variant_matrix_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setTreeNodeIdForVariantMatrixNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <y_axis_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasYAxisCharacteristicId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <y_axis_characteristic_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearYAxisCharacteristicId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <y_axis_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getYAxisCharacteristicId(){
      return $this->_get(5);
    }
    
    /**
     * Set <y_axis_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setYAxisCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <y_axis_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasYAxisCharacteristicIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <y_axis_characteristic_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearYAxisCharacteristicIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <y_axis_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getYAxisCharacteristicIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <y_axis_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setYAxisCharacteristicIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <x_axis_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasXAxisCharacteristicId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <x_axis_characteristic_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearXAxisCharacteristicId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <x_axis_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getXAxisCharacteristicId(){
      return $this->_get(6);
    }
    
    /**
     * Set <x_axis_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setXAxisCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <x_axis_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasXAxisCharacteristicIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <x_axis_characteristic_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearXAxisCharacteristicIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <x_axis_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getXAxisCharacteristicIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <x_axis_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setXAxisCharacteristicIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <value_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasValueCharacteristicId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <value_characteristic_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearValueCharacteristicId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <value_characteristic_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getValueCharacteristicId(){
      return $this->_get(7);
    }
    
    /**
     * Set <value_characteristic_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setValueCharacteristicId(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <value_characteristic_id_null> has a value
     *
     * @return boolean
     */
    public function hasValueCharacteristicIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <value_characteristic_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearValueCharacteristicIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <value_characteristic_id_null> value
     *
     * @return boolean
     */
    public function getValueCharacteristicIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <value_characteristic_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setValueCharacteristicIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <search_node_characteristic_ids> has a value
     *
     * @return boolean
     */
    public function hasSearchNodeCharacteristicIds(){
      return $this->_has(8);
    }
    
    /**
     * Clear <search_node_characteristic_ids> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchNodeCharacteristicIds(){
      return $this->_clear(8);
    }
    
    /**
     * Get <search_node_characteristic_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSearchNodeCharacteristicIds(){
      return $this->_get(8);
    }
    
    /**
     * Set <search_node_characteristic_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchNodeCharacteristicIds(\dstore\engine\values\stringValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <search_node_characteristic_ids_null> has a value
     *
     * @return boolean
     */
    public function hasSearchNodeCharacteristicIdsNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <search_node_characteristic_ids_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchNodeCharacteristicIdsNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <search_node_characteristic_ids_null> value
     *
     * @return boolean
     */
    public function getSearchNodeCharacteristicIdsNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <search_node_characteristic_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchNodeCharacteristicIdsNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <search_value> has a value
     *
     * @return boolean
     */
    public function hasSearchValue(){
      return $this->_has(9);
    }
    
    /**
     * Clear <search_value> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchValue(){
      return $this->_clear(9);
    }
    
    /**
     * Get <search_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getSearchValue(){
      return $this->_get(9);
    }
    
    /**
     * Set <search_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchValue(\dstore\engine\values\stringValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <search_value_null> has a value
     *
     * @return boolean
     */
    public function hasSearchValueNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <search_value_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchValueNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <search_value_null> value
     *
     * @return boolean
     */
    public function getSearchValueNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <search_value_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchValueNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <search_person_type_id> has a value
     *
     * @return boolean
     */
    public function hasSearchPersonTypeId(){
      return $this->_has(10);
    }
    
    /**
     * Clear <search_person_type_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchPersonTypeId(){
      return $this->_clear(10);
    }
    
    /**
     * Get <search_person_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSearchPersonTypeId(){
      return $this->_get(10);
    }
    
    /**
     * Set <search_person_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchPersonTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <search_person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasSearchPersonTypeIdNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <search_person_type_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearSearchPersonTypeIdNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <search_person_type_id_null> value
     *
     * @return boolean
     */
    public function getSearchPersonTypeIdNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <search_person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setSearchPersonTypeIdNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <person_output_characteristics> has a value
     *
     * @return boolean
     */
    public function hasPersonOutputCharacteristics(){
      return $this->_has(11);
    }
    
    /**
     * Clear <person_output_characteristics> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearPersonOutputCharacteristics(){
      return $this->_clear(11);
    }
    
    /**
     * Get <person_output_characteristics> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPersonOutputCharacteristics(){
      return $this->_get(11);
    }
    
    /**
     * Set <person_output_characteristics> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setPersonOutputCharacteristics(\dstore\engine\values\stringValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <person_output_characteristics_null> has a value
     *
     * @return boolean
     */
    public function hasPersonOutputCharacteristicsNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <person_output_characteristics_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearPersonOutputCharacteristicsNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <person_output_characteristics_null> value
     *
     * @return boolean
     */
    public function getPersonOutputCharacteristicsNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <person_output_characteristics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setPersonOutputCharacteristicsNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <person_characteristic_ids> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicIds(){
      return $this->_has(12);
    }
    
    /**
     * Clear <person_characteristic_ids> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearPersonCharacteristicIds(){
      return $this->_clear(12);
    }
    
    /**
     * Get <person_characteristic_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPersonCharacteristicIds(){
      return $this->_get(12);
    }
    
    /**
     * Set <person_characteristic_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setPersonCharacteristicIds(\dstore\engine\values\stringValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <person_characteristic_ids_null> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicIdsNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <person_characteristic_ids_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearPersonCharacteristicIdsNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <person_characteristic_ids_null> value
     *
     * @return boolean
     */
    public function getPersonCharacteristicIdsNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <person_characteristic_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setPersonCharacteristicIdsNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <condition_list> has a value
     *
     * @return boolean
     */
    public function hasConditionList(){
      return $this->_has(13);
    }
    
    /**
     * Clear <condition_list> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearConditionList(){
      return $this->_clear(13);
    }
    
    /**
     * Get <condition_list> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getConditionList(){
      return $this->_get(13);
    }
    
    /**
     * Set <condition_list> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setConditionList(\dstore\engine\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasConditionListNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <condition_list_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearConditionListNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <condition_list_null> value
     *
     * @return boolean
     */
    public function getConditionListNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setConditionListNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <order_person_id> has a value
     *
     * @return boolean
     */
    public function hasOrderPersonId(){
      return $this->_has(14);
    }
    
    /**
     * Clear <order_person_id> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearOrderPersonId(){
      return $this->_clear(14);
    }
    
    /**
     * Get <order_person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderPersonId(){
      return $this->_get(14);
    }
    
    /**
     * Set <order_person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setOrderPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <order_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasOrderPersonIdNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <order_person_id_null> value
     *
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function clearOrderPersonIdNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <order_person_id_null> value
     *
     * @return boolean
     */
    public function getOrderPersonIdNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <order_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_CheckPerformance_Ad\Parameters
     */
    public function setOrderPersonIdNull( $value){
      return $this->_set(1014, $value);
    }
  }
}

