<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/im_GetItemConditions_Ad.proto
//   Date: 2015-10-06 11:19:46

namespace dstore\engine\im_GetItemConditions_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $condition_id = null;
    
    /**  @var boolean */
    public $condition_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $condition_description_like = null;
    
    /**  @var boolean */
    public $condition_description_like_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $get_unused_conditions = null;
    
    /**  @var boolean */
    public $get_unused_conditions_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $order_by = null;
    
    /**  @var boolean */
    public $order_by_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $row_count = null;
    
    /**  @var boolean */
    public $row_count_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.im_GetItemConditions_Ad.Parameters');

      // OPTIONAL MESSAGE condition_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "condition_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_description_like = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition_description_like";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_description_like_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "condition_description_like_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_unused_conditions = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "get_unused_conditions";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_unused_conditions_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "get_unused_conditions_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_by = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "order_by";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "order_by_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_count = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "row_count";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_count_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "row_count_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition_id> has a value
     *
     * @return boolean
     */
    public function hasConditionId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition_id> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearConditionId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getConditionId(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setConditionId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition_id_null> has a value
     *
     * @return boolean
     */
    public function hasConditionIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <condition_id_null> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearConditionIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <condition_id_null> value
     *
     * @return boolean
     */
    public function getConditionIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <condition_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setConditionIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <condition_description_like> has a value
     *
     * @return boolean
     */
    public function hasConditionDescriptionLike(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition_description_like> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearConditionDescriptionLike(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition_description_like> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getConditionDescriptionLike(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition_description_like> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setConditionDescriptionLike(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <condition_description_like_null> has a value
     *
     * @return boolean
     */
    public function hasConditionDescriptionLikeNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <condition_description_like_null> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearConditionDescriptionLikeNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <condition_description_like_null> value
     *
     * @return boolean
     */
    public function getConditionDescriptionLikeNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <condition_description_like_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setConditionDescriptionLikeNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <get_unused_conditions> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedConditions(){
      return $this->_has(3);
    }
    
    /**
     * Clear <get_unused_conditions> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearGetUnusedConditions(){
      return $this->_clear(3);
    }
    
    /**
     * Get <get_unused_conditions> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getGetUnusedConditions(){
      return $this->_get(3);
    }
    
    /**
     * Set <get_unused_conditions> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setGetUnusedConditions(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <get_unused_conditions_null> has a value
     *
     * @return boolean
     */
    public function hasGetUnusedConditionsNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <get_unused_conditions_null> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearGetUnusedConditionsNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <get_unused_conditions_null> value
     *
     * @return boolean
     */
    public function getGetUnusedConditionsNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <get_unused_conditions_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setGetUnusedConditionsNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <order_by> has a value
     *
     * @return boolean
     */
    public function hasOrderBy(){
      return $this->_has(4);
    }
    
    /**
     * Clear <order_by> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearOrderBy(){
      return $this->_clear(4);
    }
    
    /**
     * Get <order_by> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOrderBy(){
      return $this->_get(4);
    }
    
    /**
     * Set <order_by> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setOrderBy(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <order_by_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <order_by_null> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearOrderByNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <order_by_null> value
     *
     * @return boolean
     */
    public function getOrderByNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <order_by_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setOrderByNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <row_count> has a value
     *
     * @return boolean
     */
    public function hasRowCount(){
      return $this->_has(5);
    }
    
    /**
     * Clear <row_count> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearRowCount(){
      return $this->_clear(5);
    }
    
    /**
     * Get <row_count> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getRowCount(){
      return $this->_get(5);
    }
    
    /**
     * Set <row_count> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setRowCount(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <row_count_null> has a value
     *
     * @return boolean
     */
    public function hasRowCountNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <row_count_null> value
     *
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function clearRowCountNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <row_count_null> value
     *
     * @return boolean
     */
    public function getRowCountNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <row_count_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\im_GetItemConditions_Ad\Parameters
     */
    public function setRowCountNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

