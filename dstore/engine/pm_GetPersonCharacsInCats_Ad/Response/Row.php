<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_GetPersonCharacsInCats_Ad.proto
//   Date: 2016-05-19 08:07:54

namespace dstore\engine\pm_GetPersonCharacsInCats_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $default_value = null;
    
    /**  @var \dstore\values\booleanValue */
    public $required = null;
    
    /**  @var \dstore\values\stringValue */
    public $characteristic_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_characteristic_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description_for_admin = null;
    
    /**  @var \dstore\values\stringValue */
    public $category_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $keep_properties_history_in_days = null;
    
    /**  @var \dstore\values\stringValue */
    public $def_val_restricted_by_pattern = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_charac_category_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_GetPersonCharacsInCats_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_value = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "default_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE required = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "required";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_description = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "characteristic_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_characteristic_id = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "person_characteristic_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description_for_admin = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "description_for_admin";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE category_description = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "category_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE keep_properties_history_in_days = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "keep_properties_history_in_days";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE def_val_restricted_by_pattern = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "def_val_restricted_by_pattern";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_charac_category_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "person_charac_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <default_value> has a value
     *
     * @return boolean
     */
    public function hasDefaultValue(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <default_value> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearDefaultValue(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <default_value> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDefaultValue(){
      return $this->_get(10001);
    }
    
    /**
     * Set <default_value> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setDefaultValue(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <required> has a value
     *
     * @return boolean
     */
    public function hasRequired(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <required> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearRequired(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <required> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getRequired(){
      return $this->_get(10002);
    }
    
    /**
     * Set <required> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setRequired(\dstore\values\booleanValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <characteristic_description> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicDescription(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <characteristic_description> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearCharacteristicDescription(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <characteristic_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCharacteristicDescription(){
      return $this->_get(10003);
    }
    
    /**
     * Set <characteristic_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setCharacteristicDescription(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <person_characteristic_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacteristicId(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <person_characteristic_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearPersonCharacteristicId(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <person_characteristic_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonCharacteristicId(){
      return $this->_get(10004);
    }
    
    /**
     * Set <person_characteristic_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setPersonCharacteristicId(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <description_for_admin> has a value
     *
     * @return boolean
     */
    public function hasDescriptionForAdmin(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <description_for_admin> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearDescriptionForAdmin(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <description_for_admin> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescriptionForAdmin(){
      return $this->_get(10005);
    }
    
    /**
     * Set <description_for_admin> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setDescriptionForAdmin(\dstore\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <category_description> has a value
     *
     * @return boolean
     */
    public function hasCategoryDescription(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <category_description> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearCategoryDescription(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <category_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCategoryDescription(){
      return $this->_get(10006);
    }
    
    /**
     * Set <category_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setCategoryDescription(\dstore\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <keep_properties_history_in_days> has a value
     *
     * @return boolean
     */
    public function hasKeepPropertiesHistoryInDays(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <keep_properties_history_in_days> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearKeepPropertiesHistoryInDays(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <keep_properties_history_in_days> value
     *
     * @return \dstore\values\integerValue
     */
    public function getKeepPropertiesHistoryInDays(){
      return $this->_get(10007);
    }
    
    /**
     * Set <keep_properties_history_in_days> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setKeepPropertiesHistoryInDays(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <def_val_restricted_by_pattern> has a value
     *
     * @return boolean
     */
    public function hasDefValRestrictedByPattern(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <def_val_restricted_by_pattern> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearDefValRestrictedByPattern(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <def_val_restricted_by_pattern> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDefValRestrictedByPattern(){
      return $this->_get(10008);
    }
    
    /**
     * Set <def_val_restricted_by_pattern> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setDefValRestrictedByPattern(\dstore\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <person_charac_category_id> has a value
     *
     * @return boolean
     */
    public function hasPersonCharacCategoryId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <person_charac_category_id> value
     *
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function clearPersonCharacCategoryId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <person_charac_category_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonCharacCategoryId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <person_charac_category_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersonCharacsInCats_Ad\Response\Row
     */
    public function setPersonCharacCategoryId(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
  }
}

