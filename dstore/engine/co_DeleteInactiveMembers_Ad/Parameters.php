<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_DeleteInactiveMembers_Ad.proto
//   Date: 2015-10-06 11:19:42

namespace dstore\engine\co_DeleteInactiveMembers_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $last_login_x_month_ago = null;
    
    /**  @var boolean */
    public $last_login_x_month_ago_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $do_not_delete_but_log_only = null;
    
    /**  @var boolean */
    public $do_not_delete_but_log_only_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $only_members_without_login_stats = null;
    
    /**  @var boolean */
    public $only_members_without_login_stats_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_members_to_delete = null;
    
    /**  @var boolean */
    public $max_number_of_members_to_delete_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $print_errors = null;
    
    /**  @var boolean */
    public $print_errors_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $additional_information = null;
    
    /**  @var boolean */
    public $additional_information_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_DeleteInactiveMembers_Ad.Parameters');

      // OPTIONAL MESSAGE community_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_login_x_month_ago = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "last_login_x_month_ago";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL last_login_x_month_ago_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "last_login_x_month_ago_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE do_not_delete_but_log_only = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "do_not_delete_but_log_only";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL do_not_delete_but_log_only_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "do_not_delete_but_log_only_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_members_without_login_stats = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "only_members_without_login_stats";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_members_without_login_stats_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "only_members_without_login_stats_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_members_to_delete = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "max_number_of_members_to_delete";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_members_to_delete_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "max_number_of_members_to_delete_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE print_errors = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "print_errors";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL print_errors_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "print_errors_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE additional_information = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "additional_information";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL additional_information_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "additional_information_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(1);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <last_login_x_month_ago> has a value
     *
     * @return boolean
     */
    public function hasLastLoginXMonthAgo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <last_login_x_month_ago> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearLastLoginXMonthAgo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <last_login_x_month_ago> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLastLoginXMonthAgo(){
      return $this->_get(2);
    }
    
    /**
     * Set <last_login_x_month_ago> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setLastLoginXMonthAgo(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <last_login_x_month_ago_null> has a value
     *
     * @return boolean
     */
    public function hasLastLoginXMonthAgoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <last_login_x_month_ago_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearLastLoginXMonthAgoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <last_login_x_month_ago_null> value
     *
     * @return boolean
     */
    public function getLastLoginXMonthAgoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <last_login_x_month_ago_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setLastLoginXMonthAgoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <do_not_delete_but_log_only> has a value
     *
     * @return boolean
     */
    public function hasDoNotDeleteButLogOnly(){
      return $this->_has(3);
    }
    
    /**
     * Clear <do_not_delete_but_log_only> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearDoNotDeleteButLogOnly(){
      return $this->_clear(3);
    }
    
    /**
     * Get <do_not_delete_but_log_only> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDoNotDeleteButLogOnly(){
      return $this->_get(3);
    }
    
    /**
     * Set <do_not_delete_but_log_only> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setDoNotDeleteButLogOnly(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <do_not_delete_but_log_only_null> has a value
     *
     * @return boolean
     */
    public function hasDoNotDeleteButLogOnlyNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <do_not_delete_but_log_only_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearDoNotDeleteButLogOnlyNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <do_not_delete_but_log_only_null> value
     *
     * @return boolean
     */
    public function getDoNotDeleteButLogOnlyNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <do_not_delete_but_log_only_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setDoNotDeleteButLogOnlyNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <only_members_without_login_stats> has a value
     *
     * @return boolean
     */
    public function hasOnlyMembersWithoutLoginStats(){
      return $this->_has(4);
    }
    
    /**
     * Clear <only_members_without_login_stats> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearOnlyMembersWithoutLoginStats(){
      return $this->_clear(4);
    }
    
    /**
     * Get <only_members_without_login_stats> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOnlyMembersWithoutLoginStats(){
      return $this->_get(4);
    }
    
    /**
     * Set <only_members_without_login_stats> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setOnlyMembersWithoutLoginStats(\dstore\engine\values\booleanValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <only_members_without_login_stats_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyMembersWithoutLoginStatsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <only_members_without_login_stats_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearOnlyMembersWithoutLoginStatsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <only_members_without_login_stats_null> value
     *
     * @return boolean
     */
    public function getOnlyMembersWithoutLoginStatsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <only_members_without_login_stats_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setOnlyMembersWithoutLoginStatsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <max_number_of_members_to_delete> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfMembersToDelete(){
      return $this->_has(5);
    }
    
    /**
     * Clear <max_number_of_members_to_delete> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearMaxNumberOfMembersToDelete(){
      return $this->_clear(5);
    }
    
    /**
     * Get <max_number_of_members_to_delete> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfMembersToDelete(){
      return $this->_get(5);
    }
    
    /**
     * Set <max_number_of_members_to_delete> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setMaxNumberOfMembersToDelete(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <max_number_of_members_to_delete_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfMembersToDeleteNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <max_number_of_members_to_delete_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearMaxNumberOfMembersToDeleteNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <max_number_of_members_to_delete_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfMembersToDeleteNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <max_number_of_members_to_delete_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setMaxNumberOfMembersToDeleteNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <print_errors> has a value
     *
     * @return boolean
     */
    public function hasPrintErrors(){
      return $this->_has(6);
    }
    
    /**
     * Clear <print_errors> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearPrintErrors(){
      return $this->_clear(6);
    }
    
    /**
     * Get <print_errors> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getPrintErrors(){
      return $this->_get(6);
    }
    
    /**
     * Set <print_errors> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setPrintErrors(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <print_errors_null> has a value
     *
     * @return boolean
     */
    public function hasPrintErrorsNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <print_errors_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearPrintErrorsNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <print_errors_null> value
     *
     * @return boolean
     */
    public function getPrintErrorsNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <print_errors_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setPrintErrorsNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <additional_information> has a value
     *
     * @return boolean
     */
    public function hasAdditionalInformation(){
      return $this->_has(7);
    }
    
    /**
     * Clear <additional_information> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearAdditionalInformation(){
      return $this->_clear(7);
    }
    
    /**
     * Get <additional_information> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getAdditionalInformation(){
      return $this->_get(7);
    }
    
    /**
     * Set <additional_information> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setAdditionalInformation(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <additional_information_null> has a value
     *
     * @return boolean
     */
    public function hasAdditionalInformationNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <additional_information_null> value
     *
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function clearAdditionalInformationNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <additional_information_null> value
     *
     * @return boolean
     */
    public function getAdditionalInformationNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <additional_information_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_DeleteInactiveMembers_Ad\Parameters
     */
    public function setAdditionalInformationNull( $value){
      return $this->_set(1007, $value);
    }
  }
}

