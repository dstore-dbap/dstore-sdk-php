<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_ModifyUserInfo_Ad.proto
//   Date: 2015-10-06 11:19:54

namespace dstore\engine\mi_ModifyUserInfo_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $user_name = null;
    
    /**  @var boolean */
    public $user_name_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_user = null;
    
    /**  @var boolean */
    public $delete_user_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_ModifyUserInfo_Ad.Parameters');

      // OPTIONAL MESSAGE user_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "user_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL user_name_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "user_name_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_user = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "delete_user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_user_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "delete_user_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <user_name> has a value
     *
     * @return boolean
     */
    public function hasUserName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <user_name> value
     *
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function clearUserName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <user_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getUserName(){
      return $this->_get(1);
    }
    
    /**
     * Set <user_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function setUserName(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <user_name_null> has a value
     *
     * @return boolean
     */
    public function hasUserNameNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <user_name_null> value
     *
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function clearUserNameNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <user_name_null> value
     *
     * @return boolean
     */
    public function getUserNameNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <user_name_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function setUserNameNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <delete_user> has a value
     *
     * @return boolean
     */
    public function hasDeleteUser(){
      return $this->_has(2);
    }
    
    /**
     * Clear <delete_user> value
     *
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function clearDeleteUser(){
      return $this->_clear(2);
    }
    
    /**
     * Get <delete_user> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteUser(){
      return $this->_get(2);
    }
    
    /**
     * Set <delete_user> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function setDeleteUser(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <delete_user_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteUserNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <delete_user_null> value
     *
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function clearDeleteUserNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <delete_user_null> value
     *
     * @return boolean
     */
    public function getDeleteUserNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <delete_user_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_ModifyUserInfo_Ad\Parameters
     */
    public function setDeleteUserNull( $value){
      return $this->_set(1002, $value);
    }
  }
}

