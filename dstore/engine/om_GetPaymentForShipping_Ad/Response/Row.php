<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetPaymentForShipping_Ad.proto
//   Date: 2016-05-19 08:07:50

namespace dstore\engine\om_GetPaymentForShipping_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $translated_detailed_description = null;
    
    /**  @var \dstore\values\stringValue */
    public $payment_type_description = null;
    
    /**  @var \dstore\values\stringValue */
    public $translated_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_for_shipping_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $description_for_admin = null;
    
    /**  @var \dstore\values\stringValue */
    public $shipping_type_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $shipping_type_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $payment_for_shipping_description = null;
    
    /**  @var \dstore\values\integerValue */
    public $payment_type_id = null;
    
    /**  @var \dstore\values\stringValue */
    public $detailed_description = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetPaymentForShipping_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE translated_detailed_description = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "translated_detailed_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_description = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "payment_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE translated_description = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "translated_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_id = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "payment_for_shipping_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description_for_admin = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "description_for_admin";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shipping_type_description = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "shipping_type_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shipping_type_id = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "shipping_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_for_shipping_description = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "payment_for_shipping_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_id = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "payment_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE detailed_description = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "detailed_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <translated_detailed_description> has a value
     *
     * @return boolean
     */
    public function hasTranslatedDetailedDescription(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <translated_detailed_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearTranslatedDetailedDescription(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <translated_detailed_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getTranslatedDetailedDescription(){
      return $this->_get(10001);
    }
    
    /**
     * Set <translated_detailed_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setTranslatedDetailedDescription(\dstore\values\stringValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <payment_type_description> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeDescription(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <payment_type_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearPaymentTypeDescription(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <payment_type_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPaymentTypeDescription(){
      return $this->_get(10002);
    }
    
    /**
     * Set <payment_type_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setPaymentTypeDescription(\dstore\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <translated_description> has a value
     *
     * @return boolean
     */
    public function hasTranslatedDescription(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <translated_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearTranslatedDescription(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <translated_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getTranslatedDescription(){
      return $this->_get(10003);
    }
    
    /**
     * Set <translated_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setTranslatedDescription(\dstore\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <payment_for_shipping_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingId(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <payment_for_shipping_id> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearPaymentForShippingId(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <payment_for_shipping_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentForShippingId(){
      return $this->_get(10004);
    }
    
    /**
     * Set <payment_for_shipping_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setPaymentForShippingId(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <description_for_admin> has a value
     *
     * @return boolean
     */
    public function hasDescriptionForAdmin(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <description_for_admin> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearDescriptionForAdmin(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <description_for_admin> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDescriptionForAdmin(){
      return $this->_get(10005);
    }
    
    /**
     * Set <description_for_admin> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setDescriptionForAdmin(\dstore\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <shipping_type_description> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeDescription(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <shipping_type_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearShippingTypeDescription(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <shipping_type_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getShippingTypeDescription(){
      return $this->_get(10006);
    }
    
    /**
     * Set <shipping_type_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setShippingTypeDescription(\dstore\values\stringValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <shipping_type_id> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeId(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <shipping_type_id> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearShippingTypeId(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <shipping_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getShippingTypeId(){
      return $this->_get(10007);
    }
    
    /**
     * Set <shipping_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setShippingTypeId(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <payment_for_shipping_description> has a value
     *
     * @return boolean
     */
    public function hasPaymentForShippingDescription(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <payment_for_shipping_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearPaymentForShippingDescription(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <payment_for_shipping_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPaymentForShippingDescription(){
      return $this->_get(10008);
    }
    
    /**
     * Set <payment_for_shipping_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setPaymentForShippingDescription(\dstore\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <payment_type_id> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeId(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <payment_type_id> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearPaymentTypeId(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <payment_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPaymentTypeId(){
      return $this->_get(10009);
    }
    
    /**
     * Set <payment_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setPaymentTypeId(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <detailed_description> has a value
     *
     * @return boolean
     */
    public function hasDetailedDescription(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <detailed_description> value
     *
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function clearDetailedDescription(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <detailed_description> value
     *
     * @return \dstore\values\stringValue
     */
    public function getDetailedDescription(){
      return $this->_get(10010);
    }
    
    /**
     * Set <detailed_description> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetPaymentForShipping_Ad\Response\Row
     */
    public function setDetailedDescription(\dstore\values\stringValue $value){
      return $this->_set(10010, $value);
    }
  }
}

