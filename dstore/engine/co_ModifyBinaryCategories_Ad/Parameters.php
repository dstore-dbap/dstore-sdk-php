<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/co_ModifyBinaryCategories_Ad.proto
//   Date: 2015-10-06 11:19:43

namespace dstore\engine\co_ModifyBinaryCategories_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $community_binary_category_id = null;
    
    /**  @var boolean */
    public $community_binary_category_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $community_id = null;
    
    /**  @var boolean */
    public $community_id_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $community_binary_category = null;
    
    /**  @var boolean */
    public $community_binary_category_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sort_no = null;
    
    /**  @var boolean */
    public $sort_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $access_level = null;
    
    /**  @var boolean */
    public $access_level_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $binary_quota_in_k_b = null;
    
    /**  @var boolean */
    public $binary_quota_in_k_b_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_number_of_binaries = null;
    
    /**  @var boolean */
    public $max_number_of_binaries_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_binary_category = null;
    
    /**  @var boolean */
    public $delete_binary_category_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.co_ModifyBinaryCategories_Ad.Parameters');

      // OPTIONAL MESSAGE community_binary_category_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "community_binary_category_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_binary_category_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "community_binary_category_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "community_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "community_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE community_binary_category = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "community_binary_category";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL community_binary_category_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "community_binary_category_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_no_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "sort_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE access_level = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "access_level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL access_level_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "access_level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE binary_quota_in_k_b = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "binary_quota_in_k_b";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL binary_quota_in_k_b_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "binary_quota_in_k_b_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_number_of_binaries = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "max_number_of_binaries";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_number_of_binaries_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "max_number_of_binaries_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_binary_category = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "delete_binary_category";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_binary_category_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "delete_binary_category_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <community_binary_category_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <community_binary_category_id> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityBinaryCategoryId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <community_binary_category_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityBinaryCategoryId(){
      return $this->_get(1);
    }
    
    /**
     * Set <community_binary_category_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityBinaryCategoryId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <community_binary_category_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <community_binary_category_id_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityBinaryCategoryIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <community_binary_category_id_null> value
     *
     * @return boolean
     */
    public function getCommunityBinaryCategoryIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <community_binary_category_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityBinaryCategoryIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <community_id> has a value
     *
     * @return boolean
     */
    public function hasCommunityId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <community_id> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <community_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCommunityId(){
      return $this->_get(2);
    }
    
    /**
     * Set <community_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <community_id_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <community_id_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <community_id_null> value
     *
     * @return boolean
     */
    public function getCommunityIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <community_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <community_binary_category> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategory(){
      return $this->_has(3);
    }
    
    /**
     * Clear <community_binary_category> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityBinaryCategory(){
      return $this->_clear(3);
    }
    
    /**
     * Get <community_binary_category> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCommunityBinaryCategory(){
      return $this->_get(3);
    }
    
    /**
     * Set <community_binary_category> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityBinaryCategory(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <community_binary_category_null> has a value
     *
     * @return boolean
     */
    public function hasCommunityBinaryCategoryNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <community_binary_category_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearCommunityBinaryCategoryNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <community_binary_category_null> value
     *
     * @return boolean
     */
    public function getCommunityBinaryCategoryNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <community_binary_category_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setCommunityBinaryCategoryNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(4);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearSortNo(){
      return $this->_clear(4);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(4);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <sort_no_null> has a value
     *
     * @return boolean
     */
    public function hasSortNoNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <sort_no_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearSortNoNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <sort_no_null> value
     *
     * @return boolean
     */
    public function getSortNoNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <sort_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setSortNoNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <access_level> has a value
     *
     * @return boolean
     */
    public function hasAccessLevel(){
      return $this->_has(5);
    }
    
    /**
     * Clear <access_level> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearAccessLevel(){
      return $this->_clear(5);
    }
    
    /**
     * Get <access_level> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAccessLevel(){
      return $this->_get(5);
    }
    
    /**
     * Set <access_level> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setAccessLevel(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <access_level_null> has a value
     *
     * @return boolean
     */
    public function hasAccessLevelNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <access_level_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearAccessLevelNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <access_level_null> value
     *
     * @return boolean
     */
    public function getAccessLevelNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <access_level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setAccessLevelNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <binary_quota_in_k_b> has a value
     *
     * @return boolean
     */
    public function hasBinaryQuotaInKB(){
      return $this->_has(6);
    }
    
    /**
     * Clear <binary_quota_in_k_b> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearBinaryQuotaInKB(){
      return $this->_clear(6);
    }
    
    /**
     * Get <binary_quota_in_k_b> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBinaryQuotaInKB(){
      return $this->_get(6);
    }
    
    /**
     * Set <binary_quota_in_k_b> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setBinaryQuotaInKB(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <binary_quota_in_k_b_null> has a value
     *
     * @return boolean
     */
    public function hasBinaryQuotaInKBNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <binary_quota_in_k_b_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearBinaryQuotaInKBNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <binary_quota_in_k_b_null> value
     *
     * @return boolean
     */
    public function getBinaryQuotaInKBNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <binary_quota_in_k_b_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setBinaryQuotaInKBNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <max_number_of_binaries> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfBinaries(){
      return $this->_has(7);
    }
    
    /**
     * Clear <max_number_of_binaries> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearMaxNumberOfBinaries(){
      return $this->_clear(7);
    }
    
    /**
     * Get <max_number_of_binaries> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxNumberOfBinaries(){
      return $this->_get(7);
    }
    
    /**
     * Set <max_number_of_binaries> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setMaxNumberOfBinaries(\dstore\engine\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <max_number_of_binaries_null> has a value
     *
     * @return boolean
     */
    public function hasMaxNumberOfBinariesNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <max_number_of_binaries_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearMaxNumberOfBinariesNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <max_number_of_binaries_null> value
     *
     * @return boolean
     */
    public function getMaxNumberOfBinariesNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <max_number_of_binaries_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setMaxNumberOfBinariesNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <delete_binary_category> has a value
     *
     * @return boolean
     */
    public function hasDeleteBinaryCategory(){
      return $this->_has(8);
    }
    
    /**
     * Clear <delete_binary_category> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearDeleteBinaryCategory(){
      return $this->_clear(8);
    }
    
    /**
     * Get <delete_binary_category> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteBinaryCategory(){
      return $this->_get(8);
    }
    
    /**
     * Set <delete_binary_category> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setDeleteBinaryCategory(\dstore\engine\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <delete_binary_category_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteBinaryCategoryNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <delete_binary_category_null> value
     *
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function clearDeleteBinaryCategoryNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <delete_binary_category_null> value
     *
     * @return boolean
     */
    public function getDeleteBinaryCategoryNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <delete_binary_category_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\co_ModifyBinaryCategories_Ad\Parameters
     */
    public function setDeleteBinaryCategoryNull( $value){
      return $this->_set(1008, $value);
    }
  }
}

