<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCurrentCampaigns.proto
//   Date: 2015-08-17 11:45:22

namespace dstore\engine\om_GetCurrentCampaigns\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $campaign_id = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $campaign_description = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $campaign_name = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $benefit_id = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $benefit_type_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCurrentCampaigns.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE campaign_id = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "campaign_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE campaign_description = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "campaign_description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE campaign_name = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "campaign_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_id = 20001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20001;
      $f->name      = "benefit_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE benefit_type_id = 20005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20005;
      $f->name      = "benefit_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <campaign_id> has a value
     *
     * @return boolean
     */
    public function hasCampaignId(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <campaign_id> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearCampaignId(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <campaign_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCampaignId(){
      return $this->_get(10001);
    }
    
    /**
     * Set <campaign_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setCampaignId(\dstore\engine\values\integerValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <campaign_description> has a value
     *
     * @return boolean
     */
    public function hasCampaignDescription(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <campaign_description> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearCampaignDescription(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <campaign_description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCampaignDescription(){
      return $this->_get(10002);
    }
    
    /**
     * Set <campaign_description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setCampaignDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <campaign_name> has a value
     *
     * @return boolean
     */
    public function hasCampaignName(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <campaign_name> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearCampaignName(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <campaign_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getCampaignName(){
      return $this->_get(10003);
    }
    
    /**
     * Set <campaign_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setCampaignName(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <benefit_id> has a value
     *
     * @return boolean
     */
    public function hasBenefitId(){
      return $this->_has(20001);
    }
    
    /**
     * Clear <benefit_id> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearBenefitId(){
      return $this->_clear(20001);
    }
    
    /**
     * Get <benefit_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBenefitId(){
      return $this->_get(20001);
    }
    
    /**
     * Set <benefit_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setBenefitId(\dstore\engine\values\integerValue $value){
      return $this->_set(20001, $value);
    }
    
    /**
     * Check if <benefit_type_id> has a value
     *
     * @return boolean
     */
    public function hasBenefitTypeId(){
      return $this->_has(20005);
    }
    
    /**
     * Clear <benefit_type_id> value
     *
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function clearBenefitTypeId(){
      return $this->_clear(20005);
    }
    
    /**
     * Get <benefit_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBenefitTypeId(){
      return $this->_get(20005);
    }
    
    /**
     * Set <benefit_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_GetCurrentCampaigns\Response\Row
     */
    public function setBenefitTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(20005, $value);
    }
  }
}

