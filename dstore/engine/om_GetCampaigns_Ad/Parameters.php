<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetCampaigns_Ad.proto
//   Date: 2016-05-19 08:07:48

namespace dstore\engine\om_GetCampaigns_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $campaign_id = null;
    
    /**  @var boolean */
    public $campaign_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $campaign_type_id = null;
    
    /**  @var boolean */
    public $campaign_type_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $active = null;
    
    /**  @var boolean */
    public $active_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $filter_by_period_start_min_date = null;
    
    /**  @var boolean */
    public $filter_by_period_start_min_date_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $filter_by_period_start_max_date = null;
    
    /**  @var boolean */
    public $filter_by_period_start_max_date_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetCampaigns_Ad.Parameters');

      // OPTIONAL MESSAGE campaign_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "campaign_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL campaign_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "campaign_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE campaign_type_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "campaign_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL campaign_type_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "campaign_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE active = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "active";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL active_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "active_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_period_start_min_date = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "filter_by_period_start_min_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_period_start_min_date_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "filter_by_period_start_min_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_period_start_max_date = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "filter_by_period_start_max_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_period_start_max_date_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "filter_by_period_start_max_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <campaign_id> has a value
     *
     * @return boolean
     */
    public function hasCampaignId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <campaign_id> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearCampaignId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <campaign_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCampaignId(){
      return $this->_get(1);
    }
    
    /**
     * Set <campaign_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setCampaignId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <campaign_id_null> has a value
     *
     * @return boolean
     */
    public function hasCampaignIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <campaign_id_null> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearCampaignIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <campaign_id_null> value
     *
     * @return boolean
     */
    public function getCampaignIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <campaign_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setCampaignIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <campaign_type_id> has a value
     *
     * @return boolean
     */
    public function hasCampaignTypeId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <campaign_type_id> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearCampaignTypeId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <campaign_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCampaignTypeId(){
      return $this->_get(2);
    }
    
    /**
     * Set <campaign_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setCampaignTypeId(\dstore\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <campaign_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasCampaignTypeIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <campaign_type_id_null> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearCampaignTypeIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <campaign_type_id_null> value
     *
     * @return boolean
     */
    public function getCampaignTypeIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <campaign_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setCampaignTypeIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <active> has a value
     *
     * @return boolean
     */
    public function hasActive(){
      return $this->_has(3);
    }
    
    /**
     * Clear <active> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearActive(){
      return $this->_clear(3);
    }
    
    /**
     * Get <active> value
     *
     * @return \dstore\values\integerValue
     */
    public function getActive(){
      return $this->_get(3);
    }
    
    /**
     * Set <active> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setActive(\dstore\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <active_null> has a value
     *
     * @return boolean
     */
    public function hasActiveNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <active_null> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearActiveNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <active_null> value
     *
     * @return boolean
     */
    public function getActiveNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <active_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setActiveNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <filter_by_period_start_min_date> has a value
     *
     * @return boolean
     */
    public function hasFilterByPeriodStartMinDate(){
      return $this->_has(4);
    }
    
    /**
     * Clear <filter_by_period_start_min_date> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearFilterByPeriodStartMinDate(){
      return $this->_clear(4);
    }
    
    /**
     * Get <filter_by_period_start_min_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFilterByPeriodStartMinDate(){
      return $this->_get(4);
    }
    
    /**
     * Set <filter_by_period_start_min_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setFilterByPeriodStartMinDate(\dstore\values\timestampValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <filter_by_period_start_min_date_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByPeriodStartMinDateNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <filter_by_period_start_min_date_null> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearFilterByPeriodStartMinDateNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <filter_by_period_start_min_date_null> value
     *
     * @return boolean
     */
    public function getFilterByPeriodStartMinDateNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <filter_by_period_start_min_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setFilterByPeriodStartMinDateNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <filter_by_period_start_max_date> has a value
     *
     * @return boolean
     */
    public function hasFilterByPeriodStartMaxDate(){
      return $this->_has(5);
    }
    
    /**
     * Clear <filter_by_period_start_max_date> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearFilterByPeriodStartMaxDate(){
      return $this->_clear(5);
    }
    
    /**
     * Get <filter_by_period_start_max_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFilterByPeriodStartMaxDate(){
      return $this->_get(5);
    }
    
    /**
     * Set <filter_by_period_start_max_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setFilterByPeriodStartMaxDate(\dstore\values\timestampValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <filter_by_period_start_max_date_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByPeriodStartMaxDateNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <filter_by_period_start_max_date_null> value
     *
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function clearFilterByPeriodStartMaxDateNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <filter_by_period_start_max_date_null> value
     *
     * @return boolean
     */
    public function getFilterByPeriodStartMaxDateNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <filter_by_period_start_max_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetCampaigns_Ad\Parameters
     */
    public function setFilterByPeriodStartMaxDateNull( $value){
      return $this->_set(1005, $value);
    }
  }
}

