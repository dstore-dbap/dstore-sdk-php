<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_GetPersons_Conditions_Ad.proto
//   Date: 2016-05-19 08:07:55

namespace dstore\engine\pm_GetPersons_Conditions_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\booleanValue */
    public $sort_order1 = null;
    
    /**  @var boolean */
    public $sort_order1_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $sort_order2 = null;
    
    /**  @var boolean */
    public $sort_order2_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $sort_order3 = null;
    
    /**  @var boolean */
    public $sort_order3_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $output_characteristic_ids = null;
    
    /**  @var boolean */
    public $output_characteristic_ids_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $person_type_id = null;
    
    /**  @var boolean */
    public $person_type_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $last_values = null;
    
    /**  @var boolean */
    public $last_values_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $last_person_id = null;
    
    /**  @var boolean */
    public $last_person_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $next = null;
    
    /**  @var boolean */
    public $next_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $row_number = null;
    
    /**  @var boolean */
    public $row_number_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $group_id = null;
    
    /**  @var boolean */
    public $group_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $characteristic_id_list = null;
    
    /**  @var boolean */
    public $characteristic_id_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $condition_list = null;
    
    /**  @var boolean */
    public $condition_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $separator_in_last_values = null;
    
    /**  @var boolean */
    public $separator_in_last_values_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $separator_in_condition_list = null;
    
    /**  @var boolean */
    public $separator_in_condition_list_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_GetPersons_Conditions_Ad.Parameters');

      // OPTIONAL MESSAGE sort_order1 = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "sort_order1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_order1_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "sort_order1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_order2 = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sort_order2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_order2_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "sort_order2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_order3 = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "sort_order3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL sort_order3_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "sort_order3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_characteristic_ids = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "output_characteristic_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_characteristic_ids_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "output_characteristic_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE person_type_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "person_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_type_id_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "person_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_values = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "last_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL last_values_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "last_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_person_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "last_person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL last_person_id_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "last_person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE next = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "next";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL next_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "next_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row_number = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "row_number";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL row_number_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "row_number_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE group_id = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "group_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL group_id_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "group_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE characteristic_id_list = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "characteristic_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL characteristic_id_list_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "characteristic_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE condition_list = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL condition_list_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_last_values = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "separator_in_last_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_last_values_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "separator_in_last_values_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE separator_in_condition_list = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "separator_in_condition_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL separator_in_condition_list_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "separator_in_condition_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <sort_order1> has a value
     *
     * @return boolean
     */
    public function hasSortOrder1(){
      return $this->_has(1);
    }
    
    /**
     * Clear <sort_order1> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder1(){
      return $this->_clear(1);
    }
    
    /**
     * Get <sort_order1> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSortOrder1(){
      return $this->_get(1);
    }
    
    /**
     * Set <sort_order1> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder1(\dstore\values\booleanValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sort_order1_null> has a value
     *
     * @return boolean
     */
    public function hasSortOrder1Null(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <sort_order1_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder1Null(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <sort_order1_null> value
     *
     * @return boolean
     */
    public function getSortOrder1Null(){
      return $this->_get(1001);
    }
    
    /**
     * Set <sort_order1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder1Null( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <sort_order2> has a value
     *
     * @return boolean
     */
    public function hasSortOrder2(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sort_order2> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder2(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sort_order2> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSortOrder2(){
      return $this->_get(2);
    }
    
    /**
     * Set <sort_order2> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder2(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <sort_order2_null> has a value
     *
     * @return boolean
     */
    public function hasSortOrder2Null(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <sort_order2_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder2Null(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <sort_order2_null> value
     *
     * @return boolean
     */
    public function getSortOrder2Null(){
      return $this->_get(1002);
    }
    
    /**
     * Set <sort_order2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder2Null( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <sort_order3> has a value
     *
     * @return boolean
     */
    public function hasSortOrder3(){
      return $this->_has(3);
    }
    
    /**
     * Clear <sort_order3> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder3(){
      return $this->_clear(3);
    }
    
    /**
     * Get <sort_order3> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSortOrder3(){
      return $this->_get(3);
    }
    
    /**
     * Set <sort_order3> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder3(\dstore\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <sort_order3_null> has a value
     *
     * @return boolean
     */
    public function hasSortOrder3Null(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <sort_order3_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSortOrder3Null(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <sort_order3_null> value
     *
     * @return boolean
     */
    public function getSortOrder3Null(){
      return $this->_get(1003);
    }
    
    /**
     * Set <sort_order3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSortOrder3Null( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <output_characteristic_ids> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicIds(){
      return $this->_has(4);
    }
    
    /**
     * Clear <output_characteristic_ids> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearOutputCharacteristicIds(){
      return $this->_clear(4);
    }
    
    /**
     * Get <output_characteristic_ids> value
     *
     * @return \dstore\values\stringValue
     */
    public function getOutputCharacteristicIds(){
      return $this->_get(4);
    }
    
    /**
     * Set <output_characteristic_ids> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setOutputCharacteristicIds(\dstore\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <output_characteristic_ids_null> has a value
     *
     * @return boolean
     */
    public function hasOutputCharacteristicIdsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <output_characteristic_ids_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearOutputCharacteristicIdsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <output_characteristic_ids_null> value
     *
     * @return boolean
     */
    public function getOutputCharacteristicIdsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <output_characteristic_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setOutputCharacteristicIdsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <person_type_id> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <person_type_id> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearPersonTypeId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <person_type_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getPersonTypeId(){
      return $this->_get(5);
    }
    
    /**
     * Set <person_type_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setPersonTypeId(\dstore\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <person_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonTypeIdNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <person_type_id_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearPersonTypeIdNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <person_type_id_null> value
     *
     * @return boolean
     */
    public function getPersonTypeIdNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <person_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setPersonTypeIdNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <last_values> has a value
     *
     * @return boolean
     */
    public function hasLastValues(){
      return $this->_has(6);
    }
    
    /**
     * Clear <last_values> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearLastValues(){
      return $this->_clear(6);
    }
    
    /**
     * Get <last_values> value
     *
     * @return \dstore\values\stringValue
     */
    public function getLastValues(){
      return $this->_get(6);
    }
    
    /**
     * Set <last_values> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setLastValues(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <last_values_null> has a value
     *
     * @return boolean
     */
    public function hasLastValuesNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <last_values_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearLastValuesNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <last_values_null> value
     *
     * @return boolean
     */
    public function getLastValuesNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <last_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setLastValuesNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <last_person_id> has a value
     *
     * @return boolean
     */
    public function hasLastPersonId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <last_person_id> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearLastPersonId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <last_person_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLastPersonId(){
      return $this->_get(7);
    }
    
    /**
     * Set <last_person_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setLastPersonId(\dstore\values\integerValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <last_person_id_null> has a value
     *
     * @return boolean
     */
    public function hasLastPersonIdNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <last_person_id_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearLastPersonIdNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <last_person_id_null> value
     *
     * @return boolean
     */
    public function getLastPersonIdNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <last_person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setLastPersonIdNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <next> has a value
     *
     * @return boolean
     */
    public function hasNext(){
      return $this->_has(8);
    }
    
    /**
     * Clear <next> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearNext(){
      return $this->_clear(8);
    }
    
    /**
     * Get <next> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getNext(){
      return $this->_get(8);
    }
    
    /**
     * Set <next> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setNext(\dstore\values\booleanValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <next_null> has a value
     *
     * @return boolean
     */
    public function hasNextNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <next_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearNextNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <next_null> value
     *
     * @return boolean
     */
    public function getNextNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <next_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setNextNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <row_number> has a value
     *
     * @return boolean
     */
    public function hasRowNumber(){
      return $this->_has(9);
    }
    
    /**
     * Clear <row_number> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearRowNumber(){
      return $this->_clear(9);
    }
    
    /**
     * Get <row_number> value
     *
     * @return \dstore\values\integerValue
     */
    public function getRowNumber(){
      return $this->_get(9);
    }
    
    /**
     * Set <row_number> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setRowNumber(\dstore\values\integerValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <row_number_null> has a value
     *
     * @return boolean
     */
    public function hasRowNumberNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <row_number_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearRowNumberNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <row_number_null> value
     *
     * @return boolean
     */
    public function getRowNumberNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <row_number_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setRowNumberNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <group_id> has a value
     *
     * @return boolean
     */
    public function hasGroupId(){
      return $this->_has(10);
    }
    
    /**
     * Clear <group_id> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearGroupId(){
      return $this->_clear(10);
    }
    
    /**
     * Get <group_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getGroupId(){
      return $this->_get(10);
    }
    
    /**
     * Set <group_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setGroupId(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <group_id_null> has a value
     *
     * @return boolean
     */
    public function hasGroupIdNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <group_id_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearGroupIdNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <group_id_null> value
     *
     * @return boolean
     */
    public function getGroupIdNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <group_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setGroupIdNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <characteristic_id_list> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdList(){
      return $this->_has(11);
    }
    
    /**
     * Clear <characteristic_id_list> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearCharacteristicIdList(){
      return $this->_clear(11);
    }
    
    /**
     * Get <characteristic_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCharacteristicIdList(){
      return $this->_get(11);
    }
    
    /**
     * Set <characteristic_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setCharacteristicIdList(\dstore\values\stringValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <characteristic_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasCharacteristicIdListNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <characteristic_id_list_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearCharacteristicIdListNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <characteristic_id_list_null> value
     *
     * @return boolean
     */
    public function getCharacteristicIdListNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <characteristic_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setCharacteristicIdListNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <condition_list> has a value
     *
     * @return boolean
     */
    public function hasConditionList(){
      return $this->_has(12);
    }
    
    /**
     * Clear <condition_list> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearConditionList(){
      return $this->_clear(12);
    }
    
    /**
     * Get <condition_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getConditionList(){
      return $this->_get(12);
    }
    
    /**
     * Set <condition_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setConditionList(\dstore\values\stringValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasConditionListNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <condition_list_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearConditionListNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <condition_list_null> value
     *
     * @return boolean
     */
    public function getConditionListNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setConditionListNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(13);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(13);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(13);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(14);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(14);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(14);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setOutputIntoOneId(\dstore\values\integerValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <separator_in_last_values> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInLastValues(){
      return $this->_has(15);
    }
    
    /**
     * Clear <separator_in_last_values> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSeparatorInLastValues(){
      return $this->_clear(15);
    }
    
    /**
     * Get <separator_in_last_values> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSeparatorInLastValues(){
      return $this->_get(15);
    }
    
    /**
     * Set <separator_in_last_values> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSeparatorInLastValues(\dstore\values\stringValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <separator_in_last_values_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInLastValuesNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <separator_in_last_values_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSeparatorInLastValuesNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <separator_in_last_values_null> value
     *
     * @return boolean
     */
    public function getSeparatorInLastValuesNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <separator_in_last_values_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSeparatorInLastValuesNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <separator_in_condition_list> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInConditionList(){
      return $this->_has(16);
    }
    
    /**
     * Clear <separator_in_condition_list> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSeparatorInConditionList(){
      return $this->_clear(16);
    }
    
    /**
     * Get <separator_in_condition_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getSeparatorInConditionList(){
      return $this->_get(16);
    }
    
    /**
     * Set <separator_in_condition_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSeparatorInConditionList(\dstore\values\stringValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <separator_in_condition_list_null> has a value
     *
     * @return boolean
     */
    public function hasSeparatorInConditionListNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <separator_in_condition_list_null> value
     *
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function clearSeparatorInConditionListNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <separator_in_condition_list_null> value
     *
     * @return boolean
     */
    public function getSeparatorInConditionListNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <separator_in_condition_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_GetPersons_Conditions_Ad\Parameters
     */
    public function setSeparatorInConditionListNull( $value){
      return $this->_set(1016, $value);
    }
  }
}

