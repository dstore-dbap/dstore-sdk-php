<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_GetOrders_Conditions_Ad.proto
//   Date: 2016-05-19 08:07:49

namespace dstore\engine\om_GetOrders_Conditions_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $order_by_column = null;
    
    /**  @var boolean */
    public $order_by_column_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $create_valid_order_infos = null;
    
    /**  @var boolean */
    public $create_valid_order_infos_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $brutto_sum = null;
    
    /**  @var boolean */
    public $brutto_sum_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $currency_id = null;
    
    /**  @var boolean */
    public $currency_id_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $quantity_for_one_order_content = null;
    
    /**  @var boolean */
    public $quantity_for_one_order_content_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $combination = null;
    
    /**  @var boolean */
    public $combination_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $order_desc = null;
    
    /**  @var boolean */
    public $order_desc_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $date_and_time_format = null;
    
    /**  @var boolean */
    public $date_and_time_format_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $include_time = null;
    
    /**  @var boolean */
    public $include_time_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_info_for_valid_order_content = null;
    
    /**  @var boolean */
    public $get_info_for_valid_order_content_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $order_state_list = null;
    
    /**  @var boolean */
    public $order_state_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $skip_o_having_different_o_states = null;
    
    /**  @var boolean */
    public $skip_o_having_different_o_states_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $payment_type_id_list = null;
    
    /**  @var boolean */
    public $payment_type_id_list_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $shipping_type_id_list = null;
    
    /**  @var boolean */
    public $shipping_type_id_list_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $show_person_characteristics = null;
    
    /**  @var boolean */
    public $show_person_characteristics_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $convert_result_to_currency_id = null;
    
    /**  @var boolean */
    public $convert_result_to_currency_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $convert_result_to_given_currency = null;
    
    /**  @var boolean */
    public $convert_result_to_given_currency_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $purchase_order = null;
    
    /**  @var boolean */
    public $purchase_order_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $input_nest_level_o_info_conds = null;
    
    /**  @var boolean */
    public $input_nest_level_o_info_conds_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $value_separator_i_n_operator = null;
    
    /**  @var boolean */
    public $value_separator_i_n_operator_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $country = null;
    
    /**  @var boolean */
    public $country_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $language_id = null;
    
    /**  @var boolean */
    public $language_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $input_nest_level_o_con_info_conds = null;
    
    /**  @var boolean */
    public $input_nest_level_o_con_info_conds_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $conds_must_be_fulfilled_for_o_con_id = null;
    
    /**  @var boolean */
    public $conds_must_be_fulfilled_for_o_con_id_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $filter_by_node_ids_in_one_id = null;
    
    /**  @var boolean */
    public $filter_by_node_ids_in_one_id_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $get_computed_sum = null;
    
    /**  @var boolean */
    public $get_computed_sum_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $only_valid_pos_for_computed_sum = null;
    
    /**  @var boolean */
    public $only_valid_pos_for_computed_sum_null = null;
    
    /**  @var \dstore\values\stringValue */
    public $order_surch_ids_for_computed_sum = null;
    
    /**  @var boolean */
    public $order_surch_ids_for_computed_sum_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_GetOrders_Conditions_Ad.Parameters');

      // OPTIONAL MESSAGE order_by_column = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "order_by_column";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_by_column_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "order_by_column_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE create_valid_order_infos = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "create_valid_order_infos";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL create_valid_order_infos_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "create_valid_order_infos_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE brutto_sum = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "brutto_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL brutto_sum_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "brutto_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL currency_id_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "currency_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE quantity_for_one_order_content = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "quantity_for_one_order_content";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL quantity_for_one_order_content_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "quantity_for_one_order_content_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE combination = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "combination";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL combination_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "combination_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_desc = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "order_desc";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_desc_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "order_desc_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE date_and_time_format = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "date_and_time_format";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL date_and_time_format_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "date_and_time_format_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE include_time = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "include_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL include_time_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "include_time_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_info_for_valid_order_content = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "get_info_for_valid_order_content";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_info_for_valid_order_content_null = 1012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1012;
      $f->name      = "get_info_for_valid_order_content_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_state_list = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "order_state_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_state_list_null = 1013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1013;
      $f->name      = "order_state_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE skip_o_having_different_o_states = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "skip_o_having_different_o_states";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL skip_o_having_different_o_states_null = 1014
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1014;
      $f->name      = "skip_o_having_different_o_states_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE payment_type_id_list = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "payment_type_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL payment_type_id_list_null = 1015
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1015;
      $f->name      = "payment_type_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE shipping_type_id_list = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "shipping_type_id_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL shipping_type_id_list_null = 1016
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1016;
      $f->name      = "shipping_type_id_list_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE show_person_characteristics = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "show_person_characteristics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL show_person_characteristics_null = 1017
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1017;
      $f->name      = "show_person_characteristics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE convert_result_to_currency_id = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "convert_result_to_currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL convert_result_to_currency_id_null = 1018
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1018;
      $f->name      = "convert_result_to_currency_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE convert_result_to_given_currency = 19
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 19;
      $f->name      = "convert_result_to_given_currency";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL convert_result_to_given_currency_null = 1019
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1019;
      $f->name      = "convert_result_to_given_currency_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE purchase_order = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "purchase_order";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL purchase_order_null = 1020
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1020;
      $f->name      = "purchase_order_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_nest_level_o_info_conds = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "input_nest_level_o_info_conds";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL input_nest_level_o_info_conds_null = 1021
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1021;
      $f->name      = "input_nest_level_o_info_conds_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value_separator_i_n_operator = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "value_separator_i_n_operator";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL value_separator_i_n_operator_null = 1022
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1022;
      $f->name      = "value_separator_i_n_operator_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE country = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "country";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL country_null = 1023
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1023;
      $f->name      = "country_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE language_id = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "language_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL language_id_null = 1024
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1024;
      $f->name      = "language_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE input_nest_level_o_con_info_conds = 25
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 25;
      $f->name      = "input_nest_level_o_con_info_conds";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL input_nest_level_o_con_info_conds_null = 1025
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1025;
      $f->name      = "input_nest_level_o_con_info_conds_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE conds_must_be_fulfilled_for_o_con_id = 26
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 26;
      $f->name      = "conds_must_be_fulfilled_for_o_con_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL conds_must_be_fulfilled_for_o_con_id_null = 1026
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1026;
      $f->name      = "conds_must_be_fulfilled_for_o_con_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_by_node_ids_in_one_id = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "filter_by_node_ids_in_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_node_ids_in_one_id_null = 1027
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1027;
      $f->name      = "filter_by_node_ids_in_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_computed_sum = 28
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 28;
      $f->name      = "get_computed_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_computed_sum_null = 1028
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1028;
      $f->name      = "get_computed_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE only_valid_pos_for_computed_sum = 29
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 29;
      $f->name      = "only_valid_pos_for_computed_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL only_valid_pos_for_computed_sum_null = 1029
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1029;
      $f->name      = "only_valid_pos_for_computed_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE order_surch_ids_for_computed_sum = 30
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 30;
      $f->name      = "order_surch_ids_for_computed_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL order_surch_ids_for_computed_sum_null = 1030
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1030;
      $f->name      = "order_surch_ids_for_computed_sum_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <order_by_column> has a value
     *
     * @return boolean
     */
    public function hasOrderByColumn(){
      return $this->_has(1);
    }
    
    /**
     * Clear <order_by_column> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderByColumn(){
      return $this->_clear(1);
    }
    
    /**
     * Get <order_by_column> value
     *
     * @return \dstore\values\integerValue
     */
    public function getOrderByColumn(){
      return $this->_get(1);
    }
    
    /**
     * Set <order_by_column> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderByColumn(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <order_by_column_null> has a value
     *
     * @return boolean
     */
    public function hasOrderByColumnNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <order_by_column_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderByColumnNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <order_by_column_null> value
     *
     * @return boolean
     */
    public function getOrderByColumnNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <order_by_column_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderByColumnNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <create_valid_order_infos> has a value
     *
     * @return boolean
     */
    public function hasCreateValidOrderInfos(){
      return $this->_has(2);
    }
    
    /**
     * Clear <create_valid_order_infos> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCreateValidOrderInfos(){
      return $this->_clear(2);
    }
    
    /**
     * Get <create_valid_order_infos> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCreateValidOrderInfos(){
      return $this->_get(2);
    }
    
    /**
     * Set <create_valid_order_infos> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCreateValidOrderInfos(\dstore\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <create_valid_order_infos_null> has a value
     *
     * @return boolean
     */
    public function hasCreateValidOrderInfosNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <create_valid_order_infos_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCreateValidOrderInfosNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <create_valid_order_infos_null> value
     *
     * @return boolean
     */
    public function getCreateValidOrderInfosNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <create_valid_order_infos_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCreateValidOrderInfosNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <brutto_sum> has a value
     *
     * @return boolean
     */
    public function hasBruttoSum(){
      return $this->_has(3);
    }
    
    /**
     * Clear <brutto_sum> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearBruttoSum(){
      return $this->_clear(3);
    }
    
    /**
     * Get <brutto_sum> value
     *
     * @return \dstore\values\stringValue
     */
    public function getBruttoSum(){
      return $this->_get(3);
    }
    
    /**
     * Set <brutto_sum> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setBruttoSum(\dstore\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <brutto_sum_null> has a value
     *
     * @return boolean
     */
    public function hasBruttoSumNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <brutto_sum_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearBruttoSumNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <brutto_sum_null> value
     *
     * @return boolean
     */
    public function getBruttoSumNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <brutto_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setBruttoSumNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCurrencyId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(4);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCurrencyId(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <currency_id_null> has a value
     *
     * @return boolean
     */
    public function hasCurrencyIdNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <currency_id_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCurrencyIdNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <currency_id_null> value
     *
     * @return boolean
     */
    public function getCurrencyIdNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <currency_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCurrencyIdNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <quantity_for_one_order_content> has a value
     *
     * @return boolean
     */
    public function hasQuantityForOneOrderContent(){
      return $this->_has(5);
    }
    
    /**
     * Clear <quantity_for_one_order_content> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearQuantityForOneOrderContent(){
      return $this->_clear(5);
    }
    
    /**
     * Get <quantity_for_one_order_content> value
     *
     * @return \dstore\values\stringValue
     */
    public function getQuantityForOneOrderContent(){
      return $this->_get(5);
    }
    
    /**
     * Set <quantity_for_one_order_content> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setQuantityForOneOrderContent(\dstore\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <quantity_for_one_order_content_null> has a value
     *
     * @return boolean
     */
    public function hasQuantityForOneOrderContentNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <quantity_for_one_order_content_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearQuantityForOneOrderContentNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <quantity_for_one_order_content_null> value
     *
     * @return boolean
     */
    public function getQuantityForOneOrderContentNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <quantity_for_one_order_content_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setQuantityForOneOrderContentNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <combination> has a value
     *
     * @return boolean
     */
    public function hasCombination(){
      return $this->_has(6);
    }
    
    /**
     * Clear <combination> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCombination(){
      return $this->_clear(6);
    }
    
    /**
     * Get <combination> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCombination(){
      return $this->_get(6);
    }
    
    /**
     * Set <combination> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCombination(\dstore\values\stringValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <combination_null> has a value
     *
     * @return boolean
     */
    public function hasCombinationNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <combination_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCombinationNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <combination_null> value
     *
     * @return boolean
     */
    public function getCombinationNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <combination_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCombinationNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(7);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(7);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(7);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setFromDate(\dstore\values\timestampValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(8);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(8);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(8);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setToDate(\dstore\values\timestampValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <order_desc> has a value
     *
     * @return boolean
     */
    public function hasOrderDesc(){
      return $this->_has(9);
    }
    
    /**
     * Clear <order_desc> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderDesc(){
      return $this->_clear(9);
    }
    
    /**
     * Get <order_desc> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOrderDesc(){
      return $this->_get(9);
    }
    
    /**
     * Set <order_desc> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderDesc(\dstore\values\booleanValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <order_desc_null> has a value
     *
     * @return boolean
     */
    public function hasOrderDescNull(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <order_desc_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderDescNull(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <order_desc_null> value
     *
     * @return boolean
     */
    public function getOrderDescNull(){
      return $this->_get(1009);
    }
    
    /**
     * Set <order_desc_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderDescNull( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <date_and_time_format> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormat(){
      return $this->_has(10);
    }
    
    /**
     * Clear <date_and_time_format> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearDateAndTimeFormat(){
      return $this->_clear(10);
    }
    
    /**
     * Get <date_and_time_format> value
     *
     * @return \dstore\values\integerValue
     */
    public function getDateAndTimeFormat(){
      return $this->_get(10);
    }
    
    /**
     * Set <date_and_time_format> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setDateAndTimeFormat(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <date_and_time_format_null> has a value
     *
     * @return boolean
     */
    public function hasDateAndTimeFormatNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <date_and_time_format_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearDateAndTimeFormatNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <date_and_time_format_null> value
     *
     * @return boolean
     */
    public function getDateAndTimeFormatNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <date_and_time_format_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setDateAndTimeFormatNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <include_time> has a value
     *
     * @return boolean
     */
    public function hasIncludeTime(){
      return $this->_has(11);
    }
    
    /**
     * Clear <include_time> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearIncludeTime(){
      return $this->_clear(11);
    }
    
    /**
     * Get <include_time> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getIncludeTime(){
      return $this->_get(11);
    }
    
    /**
     * Set <include_time> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setIncludeTime(\dstore\values\booleanValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <include_time_null> has a value
     *
     * @return boolean
     */
    public function hasIncludeTimeNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <include_time_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearIncludeTimeNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <include_time_null> value
     *
     * @return boolean
     */
    public function getIncludeTimeNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <include_time_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setIncludeTimeNull( $value){
      return $this->_set(1011, $value);
    }
    
    /**
     * Check if <get_info_for_valid_order_content> has a value
     *
     * @return boolean
     */
    public function hasGetInfoForValidOrderContent(){
      return $this->_has(12);
    }
    
    /**
     * Clear <get_info_for_valid_order_content> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearGetInfoForValidOrderContent(){
      return $this->_clear(12);
    }
    
    /**
     * Get <get_info_for_valid_order_content> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetInfoForValidOrderContent(){
      return $this->_get(12);
    }
    
    /**
     * Set <get_info_for_valid_order_content> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setGetInfoForValidOrderContent(\dstore\values\booleanValue $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <get_info_for_valid_order_content_null> has a value
     *
     * @return boolean
     */
    public function hasGetInfoForValidOrderContentNull(){
      return $this->_has(1012);
    }
    
    /**
     * Clear <get_info_for_valid_order_content_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearGetInfoForValidOrderContentNull(){
      return $this->_clear(1012);
    }
    
    /**
     * Get <get_info_for_valid_order_content_null> value
     *
     * @return boolean
     */
    public function getGetInfoForValidOrderContentNull(){
      return $this->_get(1012);
    }
    
    /**
     * Set <get_info_for_valid_order_content_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setGetInfoForValidOrderContentNull( $value){
      return $this->_set(1012, $value);
    }
    
    /**
     * Check if <order_state_list> has a value
     *
     * @return boolean
     */
    public function hasOrderStateList(){
      return $this->_has(13);
    }
    
    /**
     * Clear <order_state_list> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderStateList(){
      return $this->_clear(13);
    }
    
    /**
     * Get <order_state_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getOrderStateList(){
      return $this->_get(13);
    }
    
    /**
     * Set <order_state_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderStateList(\dstore\values\stringValue $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <order_state_list_null> has a value
     *
     * @return boolean
     */
    public function hasOrderStateListNull(){
      return $this->_has(1013);
    }
    
    /**
     * Clear <order_state_list_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderStateListNull(){
      return $this->_clear(1013);
    }
    
    /**
     * Get <order_state_list_null> value
     *
     * @return boolean
     */
    public function getOrderStateListNull(){
      return $this->_get(1013);
    }
    
    /**
     * Set <order_state_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderStateListNull( $value){
      return $this->_set(1013, $value);
    }
    
    /**
     * Check if <skip_o_having_different_o_states> has a value
     *
     * @return boolean
     */
    public function hasSkipOHavingDifferentOStates(){
      return $this->_has(14);
    }
    
    /**
     * Clear <skip_o_having_different_o_states> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearSkipOHavingDifferentOStates(){
      return $this->_clear(14);
    }
    
    /**
     * Get <skip_o_having_different_o_states> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getSkipOHavingDifferentOStates(){
      return $this->_get(14);
    }
    
    /**
     * Set <skip_o_having_different_o_states> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setSkipOHavingDifferentOStates(\dstore\values\booleanValue $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <skip_o_having_different_o_states_null> has a value
     *
     * @return boolean
     */
    public function hasSkipOHavingDifferentOStatesNull(){
      return $this->_has(1014);
    }
    
    /**
     * Clear <skip_o_having_different_o_states_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearSkipOHavingDifferentOStatesNull(){
      return $this->_clear(1014);
    }
    
    /**
     * Get <skip_o_having_different_o_states_null> value
     *
     * @return boolean
     */
    public function getSkipOHavingDifferentOStatesNull(){
      return $this->_get(1014);
    }
    
    /**
     * Set <skip_o_having_different_o_states_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setSkipOHavingDifferentOStatesNull( $value){
      return $this->_set(1014, $value);
    }
    
    /**
     * Check if <payment_type_id_list> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeIdList(){
      return $this->_has(15);
    }
    
    /**
     * Clear <payment_type_id_list> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearPaymentTypeIdList(){
      return $this->_clear(15);
    }
    
    /**
     * Get <payment_type_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getPaymentTypeIdList(){
      return $this->_get(15);
    }
    
    /**
     * Set <payment_type_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setPaymentTypeIdList(\dstore\values\stringValue $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <payment_type_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasPaymentTypeIdListNull(){
      return $this->_has(1015);
    }
    
    /**
     * Clear <payment_type_id_list_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearPaymentTypeIdListNull(){
      return $this->_clear(1015);
    }
    
    /**
     * Get <payment_type_id_list_null> value
     *
     * @return boolean
     */
    public function getPaymentTypeIdListNull(){
      return $this->_get(1015);
    }
    
    /**
     * Set <payment_type_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setPaymentTypeIdListNull( $value){
      return $this->_set(1015, $value);
    }
    
    /**
     * Check if <shipping_type_id_list> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeIdList(){
      return $this->_has(16);
    }
    
    /**
     * Clear <shipping_type_id_list> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearShippingTypeIdList(){
      return $this->_clear(16);
    }
    
    /**
     * Get <shipping_type_id_list> value
     *
     * @return \dstore\values\stringValue
     */
    public function getShippingTypeIdList(){
      return $this->_get(16);
    }
    
    /**
     * Set <shipping_type_id_list> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setShippingTypeIdList(\dstore\values\stringValue $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <shipping_type_id_list_null> has a value
     *
     * @return boolean
     */
    public function hasShippingTypeIdListNull(){
      return $this->_has(1016);
    }
    
    /**
     * Clear <shipping_type_id_list_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearShippingTypeIdListNull(){
      return $this->_clear(1016);
    }
    
    /**
     * Get <shipping_type_id_list_null> value
     *
     * @return boolean
     */
    public function getShippingTypeIdListNull(){
      return $this->_get(1016);
    }
    
    /**
     * Set <shipping_type_id_list_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setShippingTypeIdListNull( $value){
      return $this->_set(1016, $value);
    }
    
    /**
     * Check if <show_person_characteristics> has a value
     *
     * @return boolean
     */
    public function hasShowPersonCharacteristics(){
      return $this->_has(17);
    }
    
    /**
     * Clear <show_person_characteristics> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearShowPersonCharacteristics(){
      return $this->_clear(17);
    }
    
    /**
     * Get <show_person_characteristics> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getShowPersonCharacteristics(){
      return $this->_get(17);
    }
    
    /**
     * Set <show_person_characteristics> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setShowPersonCharacteristics(\dstore\values\booleanValue $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <show_person_characteristics_null> has a value
     *
     * @return boolean
     */
    public function hasShowPersonCharacteristicsNull(){
      return $this->_has(1017);
    }
    
    /**
     * Clear <show_person_characteristics_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearShowPersonCharacteristicsNull(){
      return $this->_clear(1017);
    }
    
    /**
     * Get <show_person_characteristics_null> value
     *
     * @return boolean
     */
    public function getShowPersonCharacteristicsNull(){
      return $this->_get(1017);
    }
    
    /**
     * Set <show_person_characteristics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setShowPersonCharacteristicsNull( $value){
      return $this->_set(1017, $value);
    }
    
    /**
     * Check if <convert_result_to_currency_id> has a value
     *
     * @return boolean
     */
    public function hasConvertResultToCurrencyId(){
      return $this->_has(18);
    }
    
    /**
     * Clear <convert_result_to_currency_id> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearConvertResultToCurrencyId(){
      return $this->_clear(18);
    }
    
    /**
     * Get <convert_result_to_currency_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getConvertResultToCurrencyId(){
      return $this->_get(18);
    }
    
    /**
     * Set <convert_result_to_currency_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setConvertResultToCurrencyId(\dstore\values\integerValue $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <convert_result_to_currency_id_null> has a value
     *
     * @return boolean
     */
    public function hasConvertResultToCurrencyIdNull(){
      return $this->_has(1018);
    }
    
    /**
     * Clear <convert_result_to_currency_id_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearConvertResultToCurrencyIdNull(){
      return $this->_clear(1018);
    }
    
    /**
     * Get <convert_result_to_currency_id_null> value
     *
     * @return boolean
     */
    public function getConvertResultToCurrencyIdNull(){
      return $this->_get(1018);
    }
    
    /**
     * Set <convert_result_to_currency_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setConvertResultToCurrencyIdNull( $value){
      return $this->_set(1018, $value);
    }
    
    /**
     * Check if <convert_result_to_given_currency> has a value
     *
     * @return boolean
     */
    public function hasConvertResultToGivenCurrency(){
      return $this->_has(19);
    }
    
    /**
     * Clear <convert_result_to_given_currency> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearConvertResultToGivenCurrency(){
      return $this->_clear(19);
    }
    
    /**
     * Get <convert_result_to_given_currency> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getConvertResultToGivenCurrency(){
      return $this->_get(19);
    }
    
    /**
     * Set <convert_result_to_given_currency> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setConvertResultToGivenCurrency(\dstore\values\booleanValue $value){
      return $this->_set(19, $value);
    }
    
    /**
     * Check if <convert_result_to_given_currency_null> has a value
     *
     * @return boolean
     */
    public function hasConvertResultToGivenCurrencyNull(){
      return $this->_has(1019);
    }
    
    /**
     * Clear <convert_result_to_given_currency_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearConvertResultToGivenCurrencyNull(){
      return $this->_clear(1019);
    }
    
    /**
     * Get <convert_result_to_given_currency_null> value
     *
     * @return boolean
     */
    public function getConvertResultToGivenCurrencyNull(){
      return $this->_get(1019);
    }
    
    /**
     * Set <convert_result_to_given_currency_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setConvertResultToGivenCurrencyNull( $value){
      return $this->_set(1019, $value);
    }
    
    /**
     * Check if <purchase_order> has a value
     *
     * @return boolean
     */
    public function hasPurchaseOrder(){
      return $this->_has(20);
    }
    
    /**
     * Clear <purchase_order> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearPurchaseOrder(){
      return $this->_clear(20);
    }
    
    /**
     * Get <purchase_order> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getPurchaseOrder(){
      return $this->_get(20);
    }
    
    /**
     * Set <purchase_order> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setPurchaseOrder(\dstore\values\booleanValue $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <purchase_order_null> has a value
     *
     * @return boolean
     */
    public function hasPurchaseOrderNull(){
      return $this->_has(1020);
    }
    
    /**
     * Clear <purchase_order_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearPurchaseOrderNull(){
      return $this->_clear(1020);
    }
    
    /**
     * Get <purchase_order_null> value
     *
     * @return boolean
     */
    public function getPurchaseOrderNull(){
      return $this->_get(1020);
    }
    
    /**
     * Set <purchase_order_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setPurchaseOrderNull( $value){
      return $this->_set(1020, $value);
    }
    
    /**
     * Check if <input_nest_level_o_info_conds> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelOInfoConds(){
      return $this->_has(21);
    }
    
    /**
     * Clear <input_nest_level_o_info_conds> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearInputNestLevelOInfoConds(){
      return $this->_clear(21);
    }
    
    /**
     * Get <input_nest_level_o_info_conds> value
     *
     * @return \dstore\values\integerValue
     */
    public function getInputNestLevelOInfoConds(){
      return $this->_get(21);
    }
    
    /**
     * Set <input_nest_level_o_info_conds> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setInputNestLevelOInfoConds(\dstore\values\integerValue $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <input_nest_level_o_info_conds_null> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelOInfoCondsNull(){
      return $this->_has(1021);
    }
    
    /**
     * Clear <input_nest_level_o_info_conds_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearInputNestLevelOInfoCondsNull(){
      return $this->_clear(1021);
    }
    
    /**
     * Get <input_nest_level_o_info_conds_null> value
     *
     * @return boolean
     */
    public function getInputNestLevelOInfoCondsNull(){
      return $this->_get(1021);
    }
    
    /**
     * Set <input_nest_level_o_info_conds_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setInputNestLevelOInfoCondsNull( $value){
      return $this->_set(1021, $value);
    }
    
    /**
     * Check if <value_separator_i_n_operator> has a value
     *
     * @return boolean
     */
    public function hasValueSeparatorINOperator(){
      return $this->_has(22);
    }
    
    /**
     * Clear <value_separator_i_n_operator> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearValueSeparatorINOperator(){
      return $this->_clear(22);
    }
    
    /**
     * Get <value_separator_i_n_operator> value
     *
     * @return \dstore\values\stringValue
     */
    public function getValueSeparatorINOperator(){
      return $this->_get(22);
    }
    
    /**
     * Set <value_separator_i_n_operator> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setValueSeparatorINOperator(\dstore\values\stringValue $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <value_separator_i_n_operator_null> has a value
     *
     * @return boolean
     */
    public function hasValueSeparatorINOperatorNull(){
      return $this->_has(1022);
    }
    
    /**
     * Clear <value_separator_i_n_operator_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearValueSeparatorINOperatorNull(){
      return $this->_clear(1022);
    }
    
    /**
     * Get <value_separator_i_n_operator_null> value
     *
     * @return boolean
     */
    public function getValueSeparatorINOperatorNull(){
      return $this->_get(1022);
    }
    
    /**
     * Set <value_separator_i_n_operator_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setValueSeparatorINOperatorNull( $value){
      return $this->_set(1022, $value);
    }
    
    /**
     * Check if <country> has a value
     *
     * @return boolean
     */
    public function hasCountry(){
      return $this->_has(23);
    }
    
    /**
     * Clear <country> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCountry(){
      return $this->_clear(23);
    }
    
    /**
     * Get <country> value
     *
     * @return \dstore\values\stringValue
     */
    public function getCountry(){
      return $this->_get(23);
    }
    
    /**
     * Set <country> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCountry(\dstore\values\stringValue $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <country_null> has a value
     *
     * @return boolean
     */
    public function hasCountryNull(){
      return $this->_has(1023);
    }
    
    /**
     * Clear <country_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCountryNull(){
      return $this->_clear(1023);
    }
    
    /**
     * Get <country_null> value
     *
     * @return boolean
     */
    public function getCountryNull(){
      return $this->_get(1023);
    }
    
    /**
     * Set <country_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCountryNull( $value){
      return $this->_set(1023, $value);
    }
    
    /**
     * Check if <language_id> has a value
     *
     * @return boolean
     */
    public function hasLanguageId(){
      return $this->_has(24);
    }
    
    /**
     * Clear <language_id> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearLanguageId(){
      return $this->_clear(24);
    }
    
    /**
     * Get <language_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getLanguageId(){
      return $this->_get(24);
    }
    
    /**
     * Set <language_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setLanguageId(\dstore\values\integerValue $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <language_id_null> has a value
     *
     * @return boolean
     */
    public function hasLanguageIdNull(){
      return $this->_has(1024);
    }
    
    /**
     * Clear <language_id_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearLanguageIdNull(){
      return $this->_clear(1024);
    }
    
    /**
     * Get <language_id_null> value
     *
     * @return boolean
     */
    public function getLanguageIdNull(){
      return $this->_get(1024);
    }
    
    /**
     * Set <language_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setLanguageIdNull( $value){
      return $this->_set(1024, $value);
    }
    
    /**
     * Check if <input_nest_level_o_con_info_conds> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelOConInfoConds(){
      return $this->_has(25);
    }
    
    /**
     * Clear <input_nest_level_o_con_info_conds> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearInputNestLevelOConInfoConds(){
      return $this->_clear(25);
    }
    
    /**
     * Get <input_nest_level_o_con_info_conds> value
     *
     * @return \dstore\values\integerValue
     */
    public function getInputNestLevelOConInfoConds(){
      return $this->_get(25);
    }
    
    /**
     * Set <input_nest_level_o_con_info_conds> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setInputNestLevelOConInfoConds(\dstore\values\integerValue $value){
      return $this->_set(25, $value);
    }
    
    /**
     * Check if <input_nest_level_o_con_info_conds_null> has a value
     *
     * @return boolean
     */
    public function hasInputNestLevelOConInfoCondsNull(){
      return $this->_has(1025);
    }
    
    /**
     * Clear <input_nest_level_o_con_info_conds_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearInputNestLevelOConInfoCondsNull(){
      return $this->_clear(1025);
    }
    
    /**
     * Get <input_nest_level_o_con_info_conds_null> value
     *
     * @return boolean
     */
    public function getInputNestLevelOConInfoCondsNull(){
      return $this->_get(1025);
    }
    
    /**
     * Set <input_nest_level_o_con_info_conds_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setInputNestLevelOConInfoCondsNull( $value){
      return $this->_set(1025, $value);
    }
    
    /**
     * Check if <conds_must_be_fulfilled_for_o_con_id> has a value
     *
     * @return boolean
     */
    public function hasCondsMustBeFulfilledForOConId(){
      return $this->_has(26);
    }
    
    /**
     * Clear <conds_must_be_fulfilled_for_o_con_id> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCondsMustBeFulfilledForOConId(){
      return $this->_clear(26);
    }
    
    /**
     * Get <conds_must_be_fulfilled_for_o_con_id> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getCondsMustBeFulfilledForOConId(){
      return $this->_get(26);
    }
    
    /**
     * Set <conds_must_be_fulfilled_for_o_con_id> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCondsMustBeFulfilledForOConId(\dstore\values\booleanValue $value){
      return $this->_set(26, $value);
    }
    
    /**
     * Check if <conds_must_be_fulfilled_for_o_con_id_null> has a value
     *
     * @return boolean
     */
    public function hasCondsMustBeFulfilledForOConIdNull(){
      return $this->_has(1026);
    }
    
    /**
     * Clear <conds_must_be_fulfilled_for_o_con_id_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearCondsMustBeFulfilledForOConIdNull(){
      return $this->_clear(1026);
    }
    
    /**
     * Get <conds_must_be_fulfilled_for_o_con_id_null> value
     *
     * @return boolean
     */
    public function getCondsMustBeFulfilledForOConIdNull(){
      return $this->_get(1026);
    }
    
    /**
     * Set <conds_must_be_fulfilled_for_o_con_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setCondsMustBeFulfilledForOConIdNull( $value){
      return $this->_set(1026, $value);
    }
    
    /**
     * Check if <filter_by_node_ids_in_one_id> has a value
     *
     * @return boolean
     */
    public function hasFilterByNodeIdsInOneId(){
      return $this->_has(27);
    }
    
    /**
     * Clear <filter_by_node_ids_in_one_id> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearFilterByNodeIdsInOneId(){
      return $this->_clear(27);
    }
    
    /**
     * Get <filter_by_node_ids_in_one_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getFilterByNodeIdsInOneId(){
      return $this->_get(27);
    }
    
    /**
     * Set <filter_by_node_ids_in_one_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setFilterByNodeIdsInOneId(\dstore\values\integerValue $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <filter_by_node_ids_in_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByNodeIdsInOneIdNull(){
      return $this->_has(1027);
    }
    
    /**
     * Clear <filter_by_node_ids_in_one_id_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearFilterByNodeIdsInOneIdNull(){
      return $this->_clear(1027);
    }
    
    /**
     * Get <filter_by_node_ids_in_one_id_null> value
     *
     * @return boolean
     */
    public function getFilterByNodeIdsInOneIdNull(){
      return $this->_get(1027);
    }
    
    /**
     * Set <filter_by_node_ids_in_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setFilterByNodeIdsInOneIdNull( $value){
      return $this->_set(1027, $value);
    }
    
    /**
     * Check if <get_computed_sum> has a value
     *
     * @return boolean
     */
    public function hasGetComputedSum(){
      return $this->_has(28);
    }
    
    /**
     * Clear <get_computed_sum> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearGetComputedSum(){
      return $this->_clear(28);
    }
    
    /**
     * Get <get_computed_sum> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getGetComputedSum(){
      return $this->_get(28);
    }
    
    /**
     * Set <get_computed_sum> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setGetComputedSum(\dstore\values\booleanValue $value){
      return $this->_set(28, $value);
    }
    
    /**
     * Check if <get_computed_sum_null> has a value
     *
     * @return boolean
     */
    public function hasGetComputedSumNull(){
      return $this->_has(1028);
    }
    
    /**
     * Clear <get_computed_sum_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearGetComputedSumNull(){
      return $this->_clear(1028);
    }
    
    /**
     * Get <get_computed_sum_null> value
     *
     * @return boolean
     */
    public function getGetComputedSumNull(){
      return $this->_get(1028);
    }
    
    /**
     * Set <get_computed_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setGetComputedSumNull( $value){
      return $this->_set(1028, $value);
    }
    
    /**
     * Check if <only_valid_pos_for_computed_sum> has a value
     *
     * @return boolean
     */
    public function hasOnlyValidPosForComputedSum(){
      return $this->_has(29);
    }
    
    /**
     * Clear <only_valid_pos_for_computed_sum> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOnlyValidPosForComputedSum(){
      return $this->_clear(29);
    }
    
    /**
     * Get <only_valid_pos_for_computed_sum> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getOnlyValidPosForComputedSum(){
      return $this->_get(29);
    }
    
    /**
     * Set <only_valid_pos_for_computed_sum> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOnlyValidPosForComputedSum(\dstore\values\booleanValue $value){
      return $this->_set(29, $value);
    }
    
    /**
     * Check if <only_valid_pos_for_computed_sum_null> has a value
     *
     * @return boolean
     */
    public function hasOnlyValidPosForComputedSumNull(){
      return $this->_has(1029);
    }
    
    /**
     * Clear <only_valid_pos_for_computed_sum_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOnlyValidPosForComputedSumNull(){
      return $this->_clear(1029);
    }
    
    /**
     * Get <only_valid_pos_for_computed_sum_null> value
     *
     * @return boolean
     */
    public function getOnlyValidPosForComputedSumNull(){
      return $this->_get(1029);
    }
    
    /**
     * Set <only_valid_pos_for_computed_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOnlyValidPosForComputedSumNull( $value){
      return $this->_set(1029, $value);
    }
    
    /**
     * Check if <order_surch_ids_for_computed_sum> has a value
     *
     * @return boolean
     */
    public function hasOrderSurchIdsForComputedSum(){
      return $this->_has(30);
    }
    
    /**
     * Clear <order_surch_ids_for_computed_sum> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderSurchIdsForComputedSum(){
      return $this->_clear(30);
    }
    
    /**
     * Get <order_surch_ids_for_computed_sum> value
     *
     * @return \dstore\values\stringValue
     */
    public function getOrderSurchIdsForComputedSum(){
      return $this->_get(30);
    }
    
    /**
     * Set <order_surch_ids_for_computed_sum> value
     *
     * @param \dstore\values\stringValue $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderSurchIdsForComputedSum(\dstore\values\stringValue $value){
      return $this->_set(30, $value);
    }
    
    /**
     * Check if <order_surch_ids_for_computed_sum_null> has a value
     *
     * @return boolean
     */
    public function hasOrderSurchIdsForComputedSumNull(){
      return $this->_has(1030);
    }
    
    /**
     * Clear <order_surch_ids_for_computed_sum_null> value
     *
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function clearOrderSurchIdsForComputedSumNull(){
      return $this->_clear(1030);
    }
    
    /**
     * Get <order_surch_ids_for_computed_sum_null> value
     *
     * @return boolean
     */
    public function getOrderSurchIdsForComputedSumNull(){
      return $this->_get(1030);
    }
    
    /**
     * Set <order_surch_ids_for_computed_sum_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_GetOrders_Conditions_Ad\Parameters
     */
    public function setOrderSurchIdsForComputedSumNull( $value){
      return $this->_set(1030, $value);
    }
  }
}

