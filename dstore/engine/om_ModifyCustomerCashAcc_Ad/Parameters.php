<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyCustomerCashAcc_Ad.proto
//   Date: 2015-10-06 11:20:02

namespace dstore\engine\om_ModifyCustomerCashAcc_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $person_id = null;
    
    /**  @var boolean */
    public $person_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $cash_account_type_id = null;
    
    /**  @var boolean */
    public $cash_account_type_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $currency_id = null;
    
    /**  @var boolean */
    public $currency_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $account_status = null;
    
    /**  @var boolean */
    public $account_status_null = null;
    
    /**  @var \dstore\engine\values\decimalValue */
    public $min_account_balance = null;
    
    /**  @var boolean */
    public $min_account_balance_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_account = null;
    
    /**  @var boolean */
    public $delete_account_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyCustomerCashAcc_Ad.Parameters');

      // OPTIONAL MESSAGE person_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "person_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL person_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "person_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE cash_account_type_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cash_account_type_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL cash_account_type_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "cash_account_type_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE currency_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "currency_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL currency_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "currency_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE account_status = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "account_status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL account_status_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "account_status_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE min_account_balance = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "min_account_balance";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL min_account_balance_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "min_account_balance_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_account = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delete_account";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_account_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delete_account_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <person_id> has a value
     *
     * @return boolean
     */
    public function hasPersonId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <person_id> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearPersonId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <person_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPersonId(){
      return $this->_get(1);
    }
    
    /**
     * Set <person_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setPersonId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <person_id_null> has a value
     *
     * @return boolean
     */
    public function hasPersonIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <person_id_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearPersonIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <person_id_null> value
     *
     * @return boolean
     */
    public function getPersonIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <person_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setPersonIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <cash_account_type_id> has a value
     *
     * @return boolean
     */
    public function hasCashAccountTypeId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cash_account_type_id> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearCashAccountTypeId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cash_account_type_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCashAccountTypeId(){
      return $this->_get(2);
    }
    
    /**
     * Set <cash_account_type_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setCashAccountTypeId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <cash_account_type_id_null> has a value
     *
     * @return boolean
     */
    public function hasCashAccountTypeIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <cash_account_type_id_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearCashAccountTypeIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <cash_account_type_id_null> value
     *
     * @return boolean
     */
    public function getCashAccountTypeIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <cash_account_type_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setCashAccountTypeIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <currency_id> has a value
     *
     * @return boolean
     */
    public function hasCurrencyId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <currency_id> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearCurrencyId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <currency_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getCurrencyId(){
      return $this->_get(3);
    }
    
    /**
     * Set <currency_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setCurrencyId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <currency_id_null> has a value
     *
     * @return boolean
     */
    public function hasCurrencyIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <currency_id_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearCurrencyIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <currency_id_null> value
     *
     * @return boolean
     */
    public function getCurrencyIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <currency_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setCurrencyIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <account_status> has a value
     *
     * @return boolean
     */
    public function hasAccountStatus(){
      return $this->_has(4);
    }
    
    /**
     * Clear <account_status> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearAccountStatus(){
      return $this->_clear(4);
    }
    
    /**
     * Get <account_status> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getAccountStatus(){
      return $this->_get(4);
    }
    
    /**
     * Set <account_status> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setAccountStatus(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <account_status_null> has a value
     *
     * @return boolean
     */
    public function hasAccountStatusNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <account_status_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearAccountStatusNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <account_status_null> value
     *
     * @return boolean
     */
    public function getAccountStatusNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <account_status_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setAccountStatusNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <min_account_balance> has a value
     *
     * @return boolean
     */
    public function hasMinAccountBalance(){
      return $this->_has(5);
    }
    
    /**
     * Clear <min_account_balance> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearMinAccountBalance(){
      return $this->_clear(5);
    }
    
    /**
     * Get <min_account_balance> value
     *
     * @return \dstore\engine\values\decimalValue
     */
    public function getMinAccountBalance(){
      return $this->_get(5);
    }
    
    /**
     * Set <min_account_balance> value
     *
     * @param \dstore\engine\values\decimalValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setMinAccountBalance(\dstore\engine\values\decimalValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <min_account_balance_null> has a value
     *
     * @return boolean
     */
    public function hasMinAccountBalanceNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <min_account_balance_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearMinAccountBalanceNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <min_account_balance_null> value
     *
     * @return boolean
     */
    public function getMinAccountBalanceNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <min_account_balance_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setMinAccountBalanceNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delete_account> has a value
     *
     * @return boolean
     */
    public function hasDeleteAccount(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delete_account> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearDeleteAccount(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delete_account> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteAccount(){
      return $this->_get(6);
    }
    
    /**
     * Set <delete_account> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setDeleteAccount(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delete_account_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteAccountNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delete_account_null> value
     *
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function clearDeleteAccountNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delete_account_null> value
     *
     * @return boolean
     */
    public function getDeleteAccountNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delete_account_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCustomerCashAcc_Ad\Parameters
     */
    public function setDeleteAccountNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

