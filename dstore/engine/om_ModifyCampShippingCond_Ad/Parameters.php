<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/om_ModifyCampShippingCond_Ad.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\om_ModifyCampShippingCond_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $filter_by_shipping_type_ids = null;
    
    /**  @var boolean */
    public $filter_by_shipping_type_ids_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $negate_filter = null;
    
    /**  @var boolean */
    public $negate_filter_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete_shipping_type_condition = null;
    
    /**  @var boolean */
    public $delete_shipping_type_condition_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.om_ModifyCampShippingCond_Ad.Parameters');

      // OPTIONAL MESSAGE filter_by_shipping_type_ids = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "filter_by_shipping_type_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_by_shipping_type_ids_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "filter_by_shipping_type_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE negate_filter = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "negate_filter";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL negate_filter_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "negate_filter_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete_shipping_type_condition = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "delete_shipping_type_condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_shipping_type_condition_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "delete_shipping_type_condition_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <filter_by_shipping_type_ids> has a value
     *
     * @return boolean
     */
    public function hasFilterByShippingTypeIds(){
      return $this->_has(1);
    }
    
    /**
     * Clear <filter_by_shipping_type_ids> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearFilterByShippingTypeIds(){
      return $this->_clear(1);
    }
    
    /**
     * Get <filter_by_shipping_type_ids> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getFilterByShippingTypeIds(){
      return $this->_get(1);
    }
    
    /**
     * Set <filter_by_shipping_type_ids> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setFilterByShippingTypeIds(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <filter_by_shipping_type_ids_null> has a value
     *
     * @return boolean
     */
    public function hasFilterByShippingTypeIdsNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <filter_by_shipping_type_ids_null> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearFilterByShippingTypeIdsNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <filter_by_shipping_type_ids_null> value
     *
     * @return boolean
     */
    public function getFilterByShippingTypeIdsNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <filter_by_shipping_type_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setFilterByShippingTypeIdsNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <negate_filter> has a value
     *
     * @return boolean
     */
    public function hasNegateFilter(){
      return $this->_has(2);
    }
    
    /**
     * Clear <negate_filter> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearNegateFilter(){
      return $this->_clear(2);
    }
    
    /**
     * Get <negate_filter> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getNegateFilter(){
      return $this->_get(2);
    }
    
    /**
     * Set <negate_filter> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setNegateFilter(\dstore\engine\values\booleanValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <negate_filter_null> has a value
     *
     * @return boolean
     */
    public function hasNegateFilterNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <negate_filter_null> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearNegateFilterNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <negate_filter_null> value
     *
     * @return boolean
     */
    public function getNegateFilterNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <negate_filter_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setNegateFilterNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <delete_shipping_type_condition> has a value
     *
     * @return boolean
     */
    public function hasDeleteShippingTypeCondition(){
      return $this->_has(3);
    }
    
    /**
     * Clear <delete_shipping_type_condition> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearDeleteShippingTypeCondition(){
      return $this->_clear(3);
    }
    
    /**
     * Get <delete_shipping_type_condition> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDeleteShippingTypeCondition(){
      return $this->_get(3);
    }
    
    /**
     * Set <delete_shipping_type_condition> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setDeleteShippingTypeCondition(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <delete_shipping_type_condition_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteShippingTypeConditionNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <delete_shipping_type_condition_null> value
     *
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function clearDeleteShippingTypeConditionNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <delete_shipping_type_condition_null> value
     *
     * @return boolean
     */
    public function getDeleteShippingTypeConditionNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <delete_shipping_type_condition_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\om_ModifyCampShippingCond_Ad\Parameters
     */
    public function setDeleteShippingTypeConditionNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

