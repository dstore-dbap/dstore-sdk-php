<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/do_GetProcedureParameters_Ad.proto
//   Date: 2015-10-06 11:19:44

namespace dstore\engine\do_GetProcedureParameters_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $is_output_parameter = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $description__valid_since_version = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $description = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $precision_value = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $parameter_name = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $scale = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sort_no = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $default_value = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $length = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $description__last_edited = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $procedure_name = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $introduced_indstore_version = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $data_type = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.do_GetProcedureParameters_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_output_parameter = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "is_output_parameter";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description__valid_since_version = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "description__valid_since_version";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE precision_value = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "precision_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE parameter_name = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "parameter_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE scale = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "scale";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sort_no = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "sort_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_value = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "default_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE length = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "length";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE description__last_edited = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "description__last_edited";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE procedure_name = 10011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10011;
      $f->name      = "procedure_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE introduced_indstore_version = 10012
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10012;
      $f->name      = "introduced_indstore_version";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE data_type = 10013
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10013;
      $f->name      = "data_type";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <is_output_parameter> has a value
     *
     * @return boolean
     */
    public function hasIsOutputParameter(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <is_output_parameter> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearIsOutputParameter(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <is_output_parameter> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getIsOutputParameter(){
      return $this->_get(10001);
    }
    
    /**
     * Set <is_output_parameter> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setIsOutputParameter(\dstore\engine\values\booleanValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <description__valid_since_version> has a value
     *
     * @return boolean
     */
    public function hasDescription_ValidSinceVersion(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <description__valid_since_version> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearDescription_ValidSinceVersion(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <description__valid_since_version> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDescription_ValidSinceVersion(){
      return $this->_get(10002);
    }
    
    /**
     * Set <description__valid_since_version> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setDescription_ValidSinceVersion(\dstore\engine\values\stringValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <description> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearDescription(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <description> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDescription(){
      return $this->_get(10003);
    }
    
    /**
     * Set <description> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setDescription(\dstore\engine\values\stringValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <precision_value> has a value
     *
     * @return boolean
     */
    public function hasPrecisionValue(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <precision_value> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearPrecisionValue(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <precision_value> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getPrecisionValue(){
      return $this->_get(10004);
    }
    
    /**
     * Set <precision_value> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setPrecisionValue(\dstore\engine\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <parameter_name> has a value
     *
     * @return boolean
     */
    public function hasParameterName(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <parameter_name> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearParameterName(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <parameter_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getParameterName(){
      return $this->_get(10005);
    }
    
    /**
     * Set <parameter_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setParameterName(\dstore\engine\values\stringValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <scale> has a value
     *
     * @return boolean
     */
    public function hasScale(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <scale> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearScale(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <scale> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getScale(){
      return $this->_get(10006);
    }
    
    /**
     * Set <scale> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setScale(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <sort_no> has a value
     *
     * @return boolean
     */
    public function hasSortNo(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <sort_no> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearSortNo(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <sort_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortNo(){
      return $this->_get(10007);
    }
    
    /**
     * Set <sort_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setSortNo(\dstore\engine\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <default_value> has a value
     *
     * @return boolean
     */
    public function hasDefaultValue(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <default_value> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearDefaultValue(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <default_value> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDefaultValue(){
      return $this->_get(10008);
    }
    
    /**
     * Set <default_value> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setDefaultValue(\dstore\engine\values\stringValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <length> has a value
     *
     * @return boolean
     */
    public function hasLength(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <length> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearLength(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <length> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLength(){
      return $this->_get(10009);
    }
    
    /**
     * Set <length> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setLength(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <description__last_edited> has a value
     *
     * @return boolean
     */
    public function hasDescription_LastEdited(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <description__last_edited> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearDescription_LastEdited(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <description__last_edited> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getDescription_LastEdited(){
      return $this->_get(10010);
    }
    
    /**
     * Set <description__last_edited> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setDescription_LastEdited(\dstore\engine\values\timestampValue $value){
      return $this->_set(10010, $value);
    }
    
    /**
     * Check if <procedure_name> has a value
     *
     * @return boolean
     */
    public function hasProcedureName(){
      return $this->_has(10011);
    }
    
    /**
     * Clear <procedure_name> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearProcedureName(){
      return $this->_clear(10011);
    }
    
    /**
     * Get <procedure_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getProcedureName(){
      return $this->_get(10011);
    }
    
    /**
     * Set <procedure_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setProcedureName(\dstore\engine\values\stringValue $value){
      return $this->_set(10011, $value);
    }
    
    /**
     * Check if <introduced_indstore_version> has a value
     *
     * @return boolean
     */
    public function hasIntroducedIndstoreVersion(){
      return $this->_has(10012);
    }
    
    /**
     * Clear <introduced_indstore_version> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearIntroducedIndstoreVersion(){
      return $this->_clear(10012);
    }
    
    /**
     * Get <introduced_indstore_version> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getIntroducedIndstoreVersion(){
      return $this->_get(10012);
    }
    
    /**
     * Set <introduced_indstore_version> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setIntroducedIndstoreVersion(\dstore\engine\values\stringValue $value){
      return $this->_set(10012, $value);
    }
    
    /**
     * Check if <data_type> has a value
     *
     * @return boolean
     */
    public function hasDataType(){
      return $this->_has(10013);
    }
    
    /**
     * Clear <data_type> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function clearDataType(){
      return $this->_clear(10013);
    }
    
    /**
     * Get <data_type> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getDataType(){
      return $this->_get(10013);
    }
    
    /**
     * Set <data_type> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Response\Row
     */
    public function setDataType(\dstore\engine\values\stringValue $value){
      return $this->_set(10013, $value);
    }
  }
}

