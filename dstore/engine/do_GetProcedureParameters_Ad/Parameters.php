<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/do_GetProcedureParameters_Ad.proto
//   Date: 2015-10-06 11:19:44

namespace dstore\engine\do_GetProcedureParameters_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $procedure_name = null;
    
    /**  @var boolean */
    public $procedure_name_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $parameter_name_like = null;
    
    /**  @var boolean */
    public $parameter_name_like_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $filter_rows_with_empty_descr = null;
    
    /**  @var boolean */
    public $filter_rows_with_empty_descr_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.do_GetProcedureParameters_Ad.Parameters');

      // OPTIONAL MESSAGE procedure_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "procedure_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL procedure_name_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "procedure_name_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE parameter_name_like = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "parameter_name_like";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL parameter_name_like_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "parameter_name_like_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE filter_rows_with_empty_descr = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "filter_rows_with_empty_descr";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL filter_rows_with_empty_descr_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "filter_rows_with_empty_descr_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <procedure_name> has a value
     *
     * @return boolean
     */
    public function hasProcedureName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <procedure_name> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearProcedureName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <procedure_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getProcedureName(){
      return $this->_get(1);
    }
    
    /**
     * Set <procedure_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setProcedureName(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <procedure_name_null> has a value
     *
     * @return boolean
     */
    public function hasProcedureNameNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <procedure_name_null> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearProcedureNameNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <procedure_name_null> value
     *
     * @return boolean
     */
    public function getProcedureNameNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <procedure_name_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setProcedureNameNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <parameter_name_like> has a value
     *
     * @return boolean
     */
    public function hasParameterNameLike(){
      return $this->_has(2);
    }
    
    /**
     * Clear <parameter_name_like> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearParameterNameLike(){
      return $this->_clear(2);
    }
    
    /**
     * Get <parameter_name_like> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getParameterNameLike(){
      return $this->_get(2);
    }
    
    /**
     * Set <parameter_name_like> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setParameterNameLike(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <parameter_name_like_null> has a value
     *
     * @return boolean
     */
    public function hasParameterNameLikeNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <parameter_name_like_null> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearParameterNameLikeNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <parameter_name_like_null> value
     *
     * @return boolean
     */
    public function getParameterNameLikeNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <parameter_name_like_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setParameterNameLikeNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <filter_rows_with_empty_descr> has a value
     *
     * @return boolean
     */
    public function hasFilterRowsWithEmptyDescr(){
      return $this->_has(3);
    }
    
    /**
     * Clear <filter_rows_with_empty_descr> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearFilterRowsWithEmptyDescr(){
      return $this->_clear(3);
    }
    
    /**
     * Get <filter_rows_with_empty_descr> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getFilterRowsWithEmptyDescr(){
      return $this->_get(3);
    }
    
    /**
     * Set <filter_rows_with_empty_descr> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setFilterRowsWithEmptyDescr(\dstore\engine\values\booleanValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <filter_rows_with_empty_descr_null> has a value
     *
     * @return boolean
     */
    public function hasFilterRowsWithEmptyDescrNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <filter_rows_with_empty_descr_null> value
     *
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function clearFilterRowsWithEmptyDescrNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <filter_rows_with_empty_descr_null> value
     *
     * @return boolean
     */
    public function getFilterRowsWithEmptyDescrNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <filter_rows_with_empty_descr_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\do_GetProcedureParameters_Ad\Parameters
     */
    public function setFilterRowsWithEmptyDescrNull( $value){
      return $this->_set(1003, $value);
    }
  }
}

