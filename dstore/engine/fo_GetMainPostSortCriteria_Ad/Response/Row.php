<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetMainPostSortCriteria_Ad.proto
//   Date: 2016-05-19 08:07:40

namespace dstore\engine\fo_GetMainPostSortCriteria_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\values\timestampValue */
    public $last_edited_at_date_and_time = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_optionsfirst = null;
    
    /**  @var \dstore\values\timestampValue */
    public $last_activated_at_date_and_time = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_criteriafirst = null;
    
    /**  @var \dstore\values\integerValue */
    public $is_active = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_criteria_no = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_criteriathird = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_optionssecond = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_optionsthird = null;
    
    /**  @var \dstore\values\integerValue */
    public $sorting_criteriasecond = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetMainPostSortCriteria_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_edited_at_date_and_time = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "last_edited_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_optionsfirst = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "sorting_optionsfirst";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_activated_at_date_and_time = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "last_activated_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteriafirst = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "sorting_criteriafirst";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_active = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "is_active";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteria_no = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "sorting_criteria_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteriathird = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "sorting_criteriathird";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_optionssecond = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "sorting_optionssecond";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_optionsthird = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "sorting_optionsthird";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteriasecond = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "sorting_criteriasecond";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <last_edited_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastEditedAtDateAndTime(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <last_edited_at_date_and_time> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearLastEditedAtDateAndTime(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <last_edited_at_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getLastEditedAtDateAndTime(){
      return $this->_get(10001);
    }
    
    /**
     * Set <last_edited_at_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setLastEditedAtDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <sorting_optionsfirst> has a value
     *
     * @return boolean
     */
    public function hasSortingOptionsfirst(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <sorting_optionsfirst> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptionsfirst(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <sorting_optionsfirst> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingOptionsfirst(){
      return $this->_get(10002);
    }
    
    /**
     * Set <sorting_optionsfirst> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptionsfirst(\dstore\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <last_activated_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastActivatedAtDateAndTime(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <last_activated_at_date_and_time> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearLastActivatedAtDateAndTime(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <last_activated_at_date_and_time> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getLastActivatedAtDateAndTime(){
      return $this->_get(10003);
    }
    
    /**
     * Set <last_activated_at_date_and_time> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setLastActivatedAtDateAndTime(\dstore\values\timestampValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <sorting_criteriafirst> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteriafirst(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <sorting_criteriafirst> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteriafirst(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <sorting_criteriafirst> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingCriteriafirst(){
      return $this->_get(10004);
    }
    
    /**
     * Set <sorting_criteriafirst> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteriafirst(\dstore\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <is_active> has a value
     *
     * @return boolean
     */
    public function hasIsActive(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <is_active> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearIsActive(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <is_active> value
     *
     * @return \dstore\values\integerValue
     */
    public function getIsActive(){
      return $this->_get(10005);
    }
    
    /**
     * Set <is_active> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setIsActive(\dstore\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <sorting_criteria_no> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteriaNo(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <sorting_criteria_no> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteriaNo(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <sorting_criteria_no> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingCriteriaNo(){
      return $this->_get(10006);
    }
    
    /**
     * Set <sorting_criteria_no> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteriaNo(\dstore\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <sorting_criteriathird> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteriathird(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <sorting_criteriathird> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteriathird(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <sorting_criteriathird> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingCriteriathird(){
      return $this->_get(10007);
    }
    
    /**
     * Set <sorting_criteriathird> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteriathird(\dstore\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <sorting_optionssecond> has a value
     *
     * @return boolean
     */
    public function hasSortingOptionssecond(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <sorting_optionssecond> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptionssecond(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <sorting_optionssecond> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingOptionssecond(){
      return $this->_get(10008);
    }
    
    /**
     * Set <sorting_optionssecond> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptionssecond(\dstore\values\integerValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <sorting_optionsthird> has a value
     *
     * @return boolean
     */
    public function hasSortingOptionsthird(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <sorting_optionsthird> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptionsthird(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <sorting_optionsthird> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingOptionsthird(){
      return $this->_get(10009);
    }
    
    /**
     * Set <sorting_optionsthird> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptionsthird(\dstore\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <sorting_criteriasecond> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteriasecond(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <sorting_criteriasecond> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteriasecond(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <sorting_criteriasecond> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSortingCriteriasecond(){
      return $this->_get(10010);
    }
    
    /**
     * Set <sorting_criteriasecond> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteriasecond(\dstore\values\integerValue $value){
      return $this->_set(10010, $value);
    }
  }
}

