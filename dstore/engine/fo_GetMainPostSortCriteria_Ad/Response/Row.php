<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/fo_GetMainPostSortCriteria_Ad.proto
//   Date: 2015-10-06 11:19:44

namespace dstore\engine\fo_GetMainPostSortCriteria_Ad\Response {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $row_id = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $last_edited_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_options_1st = null;
    
    /**  @var \dstore\engine\values\timestampValue */
    public $last_activated_at_date_and_time = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_criteria_1st = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $is_active = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_criteria_no = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_criteria_3rd = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_options_2nd = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_options_3rd = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $sorting_criteria_2nd = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.fo_GetMainPostSortCriteria_Ad.Response.Row');

      // OPTIONAL INT32 row_id = 10000
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10000;
      $f->name      = "row_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_edited_at_date_and_time = 10001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10001;
      $f->name      = "last_edited_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_options_1st = 10002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10002;
      $f->name      = "sorting_options_1st";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_activated_at_date_and_time = 10003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10003;
      $f->name      = "last_activated_at_date_and_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteria_1st = 10004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10004;
      $f->name      = "sorting_criteria_1st";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE is_active = 10005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10005;
      $f->name      = "is_active";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteria_no = 10006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10006;
      $f->name      = "sorting_criteria_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteria_3rd = 10007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10007;
      $f->name      = "sorting_criteria_3rd";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_options_2nd = 10008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10008;
      $f->name      = "sorting_options_2nd";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_options_3rd = 10009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10009;
      $f->name      = "sorting_options_3rd";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE sorting_criteria_2nd = 10010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10010;
      $f->name      = "sorting_criteria_2nd";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_id> has a value
     *
     * @return boolean
     */
    public function hasRowId(){
      return $this->_has(10000);
    }
    
    /**
     * Clear <row_id> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearRowId(){
      return $this->_clear(10000);
    }
    
    /**
     * Get <row_id> value
     *
     * @return int
     */
    public function getRowId(){
      return $this->_get(10000);
    }
    
    /**
     * Set <row_id> value
     *
     * @param int $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setRowId( $value){
      return $this->_set(10000, $value);
    }
    
    /**
     * Check if <last_edited_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastEditedAtDateAndTime(){
      return $this->_has(10001);
    }
    
    /**
     * Clear <last_edited_at_date_and_time> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearLastEditedAtDateAndTime(){
      return $this->_clear(10001);
    }
    
    /**
     * Get <last_edited_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getLastEditedAtDateAndTime(){
      return $this->_get(10001);
    }
    
    /**
     * Set <last_edited_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setLastEditedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10001, $value);
    }
    
    /**
     * Check if <sorting_options_1st> has a value
     *
     * @return boolean
     */
    public function hasSortingOptions1st(){
      return $this->_has(10002);
    }
    
    /**
     * Clear <sorting_options_1st> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptions1st(){
      return $this->_clear(10002);
    }
    
    /**
     * Get <sorting_options_1st> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingOptions1st(){
      return $this->_get(10002);
    }
    
    /**
     * Set <sorting_options_1st> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptions1st(\dstore\engine\values\integerValue $value){
      return $this->_set(10002, $value);
    }
    
    /**
     * Check if <last_activated_at_date_and_time> has a value
     *
     * @return boolean
     */
    public function hasLastActivatedAtDateAndTime(){
      return $this->_has(10003);
    }
    
    /**
     * Clear <last_activated_at_date_and_time> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearLastActivatedAtDateAndTime(){
      return $this->_clear(10003);
    }
    
    /**
     * Get <last_activated_at_date_and_time> value
     *
     * @return \dstore\engine\values\timestampValue
     */
    public function getLastActivatedAtDateAndTime(){
      return $this->_get(10003);
    }
    
    /**
     * Set <last_activated_at_date_and_time> value
     *
     * @param \dstore\engine\values\timestampValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setLastActivatedAtDateAndTime(\dstore\engine\values\timestampValue $value){
      return $this->_set(10003, $value);
    }
    
    /**
     * Check if <sorting_criteria_1st> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteria1st(){
      return $this->_has(10004);
    }
    
    /**
     * Clear <sorting_criteria_1st> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteria1st(){
      return $this->_clear(10004);
    }
    
    /**
     * Get <sorting_criteria_1st> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingCriteria1st(){
      return $this->_get(10004);
    }
    
    /**
     * Set <sorting_criteria_1st> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteria1st(\dstore\engine\values\integerValue $value){
      return $this->_set(10004, $value);
    }
    
    /**
     * Check if <is_active> has a value
     *
     * @return boolean
     */
    public function hasIsActive(){
      return $this->_has(10005);
    }
    
    /**
     * Clear <is_active> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearIsActive(){
      return $this->_clear(10005);
    }
    
    /**
     * Get <is_active> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getIsActive(){
      return $this->_get(10005);
    }
    
    /**
     * Set <is_active> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setIsActive(\dstore\engine\values\integerValue $value){
      return $this->_set(10005, $value);
    }
    
    /**
     * Check if <sorting_criteria_no> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteriaNo(){
      return $this->_has(10006);
    }
    
    /**
     * Clear <sorting_criteria_no> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteriaNo(){
      return $this->_clear(10006);
    }
    
    /**
     * Get <sorting_criteria_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingCriteriaNo(){
      return $this->_get(10006);
    }
    
    /**
     * Set <sorting_criteria_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteriaNo(\dstore\engine\values\integerValue $value){
      return $this->_set(10006, $value);
    }
    
    /**
     * Check if <sorting_criteria_3rd> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteria3rd(){
      return $this->_has(10007);
    }
    
    /**
     * Clear <sorting_criteria_3rd> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteria3rd(){
      return $this->_clear(10007);
    }
    
    /**
     * Get <sorting_criteria_3rd> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingCriteria3rd(){
      return $this->_get(10007);
    }
    
    /**
     * Set <sorting_criteria_3rd> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteria3rd(\dstore\engine\values\integerValue $value){
      return $this->_set(10007, $value);
    }
    
    /**
     * Check if <sorting_options_2nd> has a value
     *
     * @return boolean
     */
    public function hasSortingOptions2nd(){
      return $this->_has(10008);
    }
    
    /**
     * Clear <sorting_options_2nd> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptions2nd(){
      return $this->_clear(10008);
    }
    
    /**
     * Get <sorting_options_2nd> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingOptions2nd(){
      return $this->_get(10008);
    }
    
    /**
     * Set <sorting_options_2nd> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptions2nd(\dstore\engine\values\integerValue $value){
      return $this->_set(10008, $value);
    }
    
    /**
     * Check if <sorting_options_3rd> has a value
     *
     * @return boolean
     */
    public function hasSortingOptions3rd(){
      return $this->_has(10009);
    }
    
    /**
     * Clear <sorting_options_3rd> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingOptions3rd(){
      return $this->_clear(10009);
    }
    
    /**
     * Get <sorting_options_3rd> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingOptions3rd(){
      return $this->_get(10009);
    }
    
    /**
     * Set <sorting_options_3rd> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingOptions3rd(\dstore\engine\values\integerValue $value){
      return $this->_set(10009, $value);
    }
    
    /**
     * Check if <sorting_criteria_2nd> has a value
     *
     * @return boolean
     */
    public function hasSortingCriteria2nd(){
      return $this->_has(10010);
    }
    
    /**
     * Clear <sorting_criteria_2nd> value
     *
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function clearSortingCriteria2nd(){
      return $this->_clear(10010);
    }
    
    /**
     * Get <sorting_criteria_2nd> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getSortingCriteria2nd(){
      return $this->_get(10010);
    }
    
    /**
     * Set <sorting_criteria_2nd> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\fo_GetMainPostSortCriteria_Ad\Response\Row
     */
    public function setSortingCriteria2nd(\dstore\engine\values\integerValue $value){
      return $this->_set(10010, $value);
    }
  }
}

