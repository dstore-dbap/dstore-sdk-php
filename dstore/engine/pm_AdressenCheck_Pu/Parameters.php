<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/pm_AdressenCheck_Pu.proto
//   Date: 2015-08-17 11:45:23

namespace dstore\engine\pm_AdressenCheck_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $p_l_z = null;
    
    /**  @var boolean */
    public $p_l_z_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $ort = null;
    
    /**  @var boolean */
    public $ort_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $strasse = null;
    
    /**  @var boolean */
    public $strasse_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $hausnummer = null;
    
    /**  @var boolean */
    public $hausnummer_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $return_result = null;
    
    /**  @var boolean */
    public $return_result_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $ort_vor_p_l_z = null;
    
    /**  @var boolean */
    public $ort_vor_p_l_z_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $strasse_vor_p_l_z = null;
    
    /**  @var boolean */
    public $strasse_vor_p_l_z_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.pm_AdressenCheck_Pu.Parameters');

      // OPTIONAL MESSAGE p_l_z = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "p_l_z";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL p_l_z_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "p_l_z_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ort = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "ort";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL ort_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "ort_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE strasse = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "strasse";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL strasse_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "strasse_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE hausnummer = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "hausnummer";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL hausnummer_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "hausnummer_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE return_result = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "return_result";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL return_result_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "return_result_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ort_vor_p_l_z = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "ort_vor_p_l_z";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL ort_vor_p_l_z_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "ort_vor_p_l_z_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE strasse_vor_p_l_z = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "strasse_vor_p_l_z";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL strasse_vor_p_l_z_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "strasse_vor_p_l_z_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <p_l_z> has a value
     *
     * @return boolean
     */
    public function hasPLZ(){
      return $this->_has(1);
    }
    
    /**
     * Clear <p_l_z> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearPLZ(){
      return $this->_clear(1);
    }
    
    /**
     * Get <p_l_z> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getPLZ(){
      return $this->_get(1);
    }
    
    /**
     * Set <p_l_z> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setPLZ(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <p_l_z_null> has a value
     *
     * @return boolean
     */
    public function hasPLZNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <p_l_z_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearPLZNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <p_l_z_null> value
     *
     * @return boolean
     */
    public function getPLZNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <p_l_z_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setPLZNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <ort> has a value
     *
     * @return boolean
     */
    public function hasOrt(){
      return $this->_has(2);
    }
    
    /**
     * Clear <ort> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearOrt(){
      return $this->_clear(2);
    }
    
    /**
     * Get <ort> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getOrt(){
      return $this->_get(2);
    }
    
    /**
     * Set <ort> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setOrt(\dstore\engine\values\stringValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <ort_null> has a value
     *
     * @return boolean
     */
    public function hasOrtNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <ort_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearOrtNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <ort_null> value
     *
     * @return boolean
     */
    public function getOrtNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <ort_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setOrtNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <strasse> has a value
     *
     * @return boolean
     */
    public function hasStrasse(){
      return $this->_has(3);
    }
    
    /**
     * Clear <strasse> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearStrasse(){
      return $this->_clear(3);
    }
    
    /**
     * Get <strasse> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getStrasse(){
      return $this->_get(3);
    }
    
    /**
     * Set <strasse> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setStrasse(\dstore\engine\values\stringValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <strasse_null> has a value
     *
     * @return boolean
     */
    public function hasStrasseNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <strasse_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearStrasseNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <strasse_null> value
     *
     * @return boolean
     */
    public function getStrasseNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <strasse_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setStrasseNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <hausnummer> has a value
     *
     * @return boolean
     */
    public function hasHausnummer(){
      return $this->_has(4);
    }
    
    /**
     * Clear <hausnummer> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearHausnummer(){
      return $this->_clear(4);
    }
    
    /**
     * Get <hausnummer> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getHausnummer(){
      return $this->_get(4);
    }
    
    /**
     * Set <hausnummer> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setHausnummer(\dstore\engine\values\stringValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <hausnummer_null> has a value
     *
     * @return boolean
     */
    public function hasHausnummerNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <hausnummer_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearHausnummerNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <hausnummer_null> value
     *
     * @return boolean
     */
    public function getHausnummerNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <hausnummer_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setHausnummerNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <return_result> has a value
     *
     * @return boolean
     */
    public function hasReturnResult(){
      return $this->_has(5);
    }
    
    /**
     * Clear <return_result> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearReturnResult(){
      return $this->_clear(5);
    }
    
    /**
     * Get <return_result> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getReturnResult(){
      return $this->_get(5);
    }
    
    /**
     * Set <return_result> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setReturnResult(\dstore\engine\values\booleanValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <return_result_null> has a value
     *
     * @return boolean
     */
    public function hasReturnResultNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <return_result_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearReturnResultNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <return_result_null> value
     *
     * @return boolean
     */
    public function getReturnResultNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <return_result_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setReturnResultNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <ort_vor_p_l_z> has a value
     *
     * @return boolean
     */
    public function hasOrtVorPLZ(){
      return $this->_has(6);
    }
    
    /**
     * Clear <ort_vor_p_l_z> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearOrtVorPLZ(){
      return $this->_clear(6);
    }
    
    /**
     * Get <ort_vor_p_l_z> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOrtVorPLZ(){
      return $this->_get(6);
    }
    
    /**
     * Set <ort_vor_p_l_z> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setOrtVorPLZ(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <ort_vor_p_l_z_null> has a value
     *
     * @return boolean
     */
    public function hasOrtVorPLZNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <ort_vor_p_l_z_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearOrtVorPLZNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <ort_vor_p_l_z_null> value
     *
     * @return boolean
     */
    public function getOrtVorPLZNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <ort_vor_p_l_z_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setOrtVorPLZNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <strasse_vor_p_l_z> has a value
     *
     * @return boolean
     */
    public function hasStrasseVorPLZ(){
      return $this->_has(7);
    }
    
    /**
     * Clear <strasse_vor_p_l_z> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearStrasseVorPLZ(){
      return $this->_clear(7);
    }
    
    /**
     * Get <strasse_vor_p_l_z> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getStrasseVorPLZ(){
      return $this->_get(7);
    }
    
    /**
     * Set <strasse_vor_p_l_z> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setStrasseVorPLZ(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <strasse_vor_p_l_z_null> has a value
     *
     * @return boolean
     */
    public function hasStrasseVorPLZNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <strasse_vor_p_l_z_null> value
     *
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function clearStrasseVorPLZNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <strasse_vor_p_l_z_null> value
     *
     * @return boolean
     */
    public function getStrasseVorPLZNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <strasse_vor_p_l_z_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\pm_AdressenCheck_Pu\Parameters
     */
    public function setStrasseVorPLZNull( $value){
      return $this->_set(1007, $value);
    }
  }
}

