<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_ModifyPeriodsToKeepStats_Ad.proto
//   Date: 2015-10-06 11:20:10

namespace dstore\engine\st_ModifyPeriodsToKeepStats_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\stringValue */
    public $table_name = null;
    
    /**  @var boolean */
    public $table_name_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $level_no = null;
    
    /**  @var boolean */
    public $level_no_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $basic_characteristic_number = null;
    
    /**  @var boolean */
    public $basic_characteristic_number_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $keep_statistics = null;
    
    /**  @var boolean */
    public $keep_statistics_null = null;
    
    /**  @var \dstore\engine\values\stringValue */
    public $time_unit = null;
    
    /**  @var boolean */
    public $time_unit_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $delete = null;
    
    /**  @var boolean */
    public $delete_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_ModifyPeriodsToKeepStats_Ad.Parameters');

      // OPTIONAL MESSAGE table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL table_name_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "table_name_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE level_no = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "level_no";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL level_no_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "level_no_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic_number = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "basic_characteristic_number";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL basic_characteristic_number_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "basic_characteristic_number_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE keep_statistics = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "keep_statistics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL keep_statistics_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "keep_statistics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE time_unit = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "time_unit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\stringValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL time_unit_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "time_unit_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE delete = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "delete";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "delete_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setTableName(\dstore\engine\values\stringValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <table_name_null> has a value
     *
     * @return boolean
     */
    public function hasTableNameNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <table_name_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearTableNameNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <table_name_null> value
     *
     * @return boolean
     */
    public function getTableNameNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <table_name_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setTableNameNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <level_no> has a value
     *
     * @return boolean
     */
    public function hasLevelNo(){
      return $this->_has(2);
    }
    
    /**
     * Clear <level_no> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearLevelNo(){
      return $this->_clear(2);
    }
    
    /**
     * Get <level_no> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getLevelNo(){
      return $this->_get(2);
    }
    
    /**
     * Set <level_no> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setLevelNo(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <level_no_null> has a value
     *
     * @return boolean
     */
    public function hasLevelNoNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <level_no_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearLevelNoNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <level_no_null> value
     *
     * @return boolean
     */
    public function getLevelNoNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <level_no_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setLevelNoNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <basic_characteristic_number> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNumber(){
      return $this->_has(3);
    }
    
    /**
     * Clear <basic_characteristic_number> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearBasicCharacteristicNumber(){
      return $this->_clear(3);
    }
    
    /**
     * Get <basic_characteristic_number> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getBasicCharacteristicNumber(){
      return $this->_get(3);
    }
    
    /**
     * Set <basic_characteristic_number> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setBasicCharacteristicNumber(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <basic_characteristic_number_null> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNumberNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <basic_characteristic_number_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearBasicCharacteristicNumberNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <basic_characteristic_number_null> value
     *
     * @return boolean
     */
    public function getBasicCharacteristicNumberNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <basic_characteristic_number_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setBasicCharacteristicNumberNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <keep_statistics> has a value
     *
     * @return boolean
     */
    public function hasKeepStatistics(){
      return $this->_has(4);
    }
    
    /**
     * Clear <keep_statistics> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearKeepStatistics(){
      return $this->_clear(4);
    }
    
    /**
     * Get <keep_statistics> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getKeepStatistics(){
      return $this->_get(4);
    }
    
    /**
     * Set <keep_statistics> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setKeepStatistics(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <keep_statistics_null> has a value
     *
     * @return boolean
     */
    public function hasKeepStatisticsNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <keep_statistics_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearKeepStatisticsNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <keep_statistics_null> value
     *
     * @return boolean
     */
    public function getKeepStatisticsNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <keep_statistics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setKeepStatisticsNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <time_unit> has a value
     *
     * @return boolean
     */
    public function hasTimeUnit(){
      return $this->_has(5);
    }
    
    /**
     * Clear <time_unit> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearTimeUnit(){
      return $this->_clear(5);
    }
    
    /**
     * Get <time_unit> value
     *
     * @return \dstore\engine\values\stringValue
     */
    public function getTimeUnit(){
      return $this->_get(5);
    }
    
    /**
     * Set <time_unit> value
     *
     * @param \dstore\engine\values\stringValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setTimeUnit(\dstore\engine\values\stringValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <time_unit_null> has a value
     *
     * @return boolean
     */
    public function hasTimeUnitNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <time_unit_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearTimeUnitNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <time_unit_null> value
     *
     * @return boolean
     */
    public function getTimeUnitNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <time_unit_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setTimeUnitNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <delete> has a value
     *
     * @return boolean
     */
    public function hasDelete(){
      return $this->_has(6);
    }
    
    /**
     * Clear <delete> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearDelete(){
      return $this->_clear(6);
    }
    
    /**
     * Get <delete> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getDelete(){
      return $this->_get(6);
    }
    
    /**
     * Set <delete> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setDelete(\dstore\engine\values\booleanValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <delete_null> has a value
     *
     * @return boolean
     */
    public function hasDeleteNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <delete_null> value
     *
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function clearDeleteNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <delete_null> value
     *
     * @return boolean
     */
    public function getDeleteNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <delete_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_ModifyPeriodsToKeepStats_Ad\Parameters
     */
    public function setDeleteNull( $value){
      return $this->_set(1006, $value);
    }
  }
}

