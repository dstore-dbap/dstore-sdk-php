<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/mi_GetApplicationPartsTree_Pu.proto
//   Date: 2015-10-06 11:19:50

namespace dstore\engine\mi_GetApplicationPartsTree_Pu {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\engine\values\integerValue */
    public $application_part_tree_id = null;
    
    /**  @var boolean */
    public $application_part_tree_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $get_root_parts_for_application_id = null;
    
    /**  @var boolean */
    public $get_root_parts_for_application_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $ids_in_one_id = null;
    
    /**  @var boolean */
    public $ids_in_one_id_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $return_result_set = null;
    
    /**  @var boolean */
    public $return_result_set_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $get_parts_tree_for_global_user = null;
    
    /**  @var boolean */
    public $get_parts_tree_for_global_user_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $output_into_one_id = null;
    
    /**  @var boolean */
    public $output_into_one_id_null = null;
    
    /**  @var \dstore\engine\values\booleanValue */
    public $output_into_two_ids = null;
    
    /**  @var boolean */
    public $output_into_two_ids_null = null;
    
    /**  @var \dstore\engine\values\integerValue */
    public $max_tree_level = null;
    
    /**  @var boolean */
    public $max_tree_level_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.mi_GetApplicationPartsTree_Pu.Parameters');

      // OPTIONAL MESSAGE application_part_tree_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "application_part_tree_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL application_part_tree_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "application_part_tree_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_root_parts_for_application_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "get_root_parts_for_application_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_root_parts_for_application_id_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "get_root_parts_for_application_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ids_in_one_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "ids_in_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL ids_in_one_id_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "ids_in_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE return_result_set = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "return_result_set";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL return_result_set_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "return_result_set_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE get_parts_tree_for_global_user = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "get_parts_tree_for_global_user";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL get_parts_tree_for_global_user_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "get_parts_tree_for_global_user_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_one_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "output_into_one_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_one_id_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "output_into_one_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE output_into_two_ids = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "output_into_two_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL output_into_two_ids_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "output_into_two_ids_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_tree_level = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "max_tree_level";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\engine\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL max_tree_level_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "max_tree_level_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <application_part_tree_id> has a value
     *
     * @return boolean
     */
    public function hasApplicationPartTreeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <application_part_tree_id> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearApplicationPartTreeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <application_part_tree_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getApplicationPartTreeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <application_part_tree_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setApplicationPartTreeId(\dstore\engine\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <application_part_tree_id_null> has a value
     *
     * @return boolean
     */
    public function hasApplicationPartTreeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <application_part_tree_id_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearApplicationPartTreeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <application_part_tree_id_null> value
     *
     * @return boolean
     */
    public function getApplicationPartTreeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <application_part_tree_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setApplicationPartTreeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <get_root_parts_for_application_id> has a value
     *
     * @return boolean
     */
    public function hasGetRootPartsForApplicationId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <get_root_parts_for_application_id> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearGetRootPartsForApplicationId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <get_root_parts_for_application_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGetRootPartsForApplicationId(){
      return $this->_get(2);
    }
    
    /**
     * Set <get_root_parts_for_application_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setGetRootPartsForApplicationId(\dstore\engine\values\integerValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <get_root_parts_for_application_id_null> has a value
     *
     * @return boolean
     */
    public function hasGetRootPartsForApplicationIdNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <get_root_parts_for_application_id_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearGetRootPartsForApplicationIdNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <get_root_parts_for_application_id_null> value
     *
     * @return boolean
     */
    public function getGetRootPartsForApplicationIdNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <get_root_parts_for_application_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setGetRootPartsForApplicationIdNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <ids_in_one_id> has a value
     *
     * @return boolean
     */
    public function hasIdsInOneId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <ids_in_one_id> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearIdsInOneId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <ids_in_one_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getIdsInOneId(){
      return $this->_get(3);
    }
    
    /**
     * Set <ids_in_one_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setIdsInOneId(\dstore\engine\values\integerValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <ids_in_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasIdsInOneIdNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <ids_in_one_id_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearIdsInOneIdNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <ids_in_one_id_null> value
     *
     * @return boolean
     */
    public function getIdsInOneIdNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <ids_in_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setIdsInOneIdNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <return_result_set> has a value
     *
     * @return boolean
     */
    public function hasReturnResultSet(){
      return $this->_has(4);
    }
    
    /**
     * Clear <return_result_set> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearReturnResultSet(){
      return $this->_clear(4);
    }
    
    /**
     * Get <return_result_set> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getReturnResultSet(){
      return $this->_get(4);
    }
    
    /**
     * Set <return_result_set> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setReturnResultSet(\dstore\engine\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <return_result_set_null> has a value
     *
     * @return boolean
     */
    public function hasReturnResultSetNull(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <return_result_set_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearReturnResultSetNull(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <return_result_set_null> value
     *
     * @return boolean
     */
    public function getReturnResultSetNull(){
      return $this->_get(1004);
    }
    
    /**
     * Set <return_result_set_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setReturnResultSetNull( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <get_parts_tree_for_global_user> has a value
     *
     * @return boolean
     */
    public function hasGetPartsTreeForGlobalUser(){
      return $this->_has(5);
    }
    
    /**
     * Clear <get_parts_tree_for_global_user> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearGetPartsTreeForGlobalUser(){
      return $this->_clear(5);
    }
    
    /**
     * Get <get_parts_tree_for_global_user> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getGetPartsTreeForGlobalUser(){
      return $this->_get(5);
    }
    
    /**
     * Set <get_parts_tree_for_global_user> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setGetPartsTreeForGlobalUser(\dstore\engine\values\integerValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <get_parts_tree_for_global_user_null> has a value
     *
     * @return boolean
     */
    public function hasGetPartsTreeForGlobalUserNull(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <get_parts_tree_for_global_user_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearGetPartsTreeForGlobalUserNull(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <get_parts_tree_for_global_user_null> value
     *
     * @return boolean
     */
    public function getGetPartsTreeForGlobalUserNull(){
      return $this->_get(1005);
    }
    
    /**
     * Set <get_parts_tree_for_global_user_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setGetPartsTreeForGlobalUserNull( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <output_into_one_id> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <output_into_one_id> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearOutputIntoOneId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <output_into_one_id> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getOutputIntoOneId(){
      return $this->_get(6);
    }
    
    /**
     * Set <output_into_one_id> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setOutputIntoOneId(\dstore\engine\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <output_into_one_id_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoOneIdNull(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <output_into_one_id_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearOutputIntoOneIdNull(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <output_into_one_id_null> value
     *
     * @return boolean
     */
    public function getOutputIntoOneIdNull(){
      return $this->_get(1006);
    }
    
    /**
     * Set <output_into_one_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setOutputIntoOneIdNull( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <output_into_two_ids> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoTwoIds(){
      return $this->_has(7);
    }
    
    /**
     * Clear <output_into_two_ids> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearOutputIntoTwoIds(){
      return $this->_clear(7);
    }
    
    /**
     * Get <output_into_two_ids> value
     *
     * @return \dstore\engine\values\booleanValue
     */
    public function getOutputIntoTwoIds(){
      return $this->_get(7);
    }
    
    /**
     * Set <output_into_two_ids> value
     *
     * @param \dstore\engine\values\booleanValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setOutputIntoTwoIds(\dstore\engine\values\booleanValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <output_into_two_ids_null> has a value
     *
     * @return boolean
     */
    public function hasOutputIntoTwoIdsNull(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <output_into_two_ids_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearOutputIntoTwoIdsNull(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <output_into_two_ids_null> value
     *
     * @return boolean
     */
    public function getOutputIntoTwoIdsNull(){
      return $this->_get(1007);
    }
    
    /**
     * Set <output_into_two_ids_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setOutputIntoTwoIdsNull( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <max_tree_level> has a value
     *
     * @return boolean
     */
    public function hasMaxTreeLevel(){
      return $this->_has(8);
    }
    
    /**
     * Clear <max_tree_level> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearMaxTreeLevel(){
      return $this->_clear(8);
    }
    
    /**
     * Get <max_tree_level> value
     *
     * @return \dstore\engine\values\integerValue
     */
    public function getMaxTreeLevel(){
      return $this->_get(8);
    }
    
    /**
     * Set <max_tree_level> value
     *
     * @param \dstore\engine\values\integerValue $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setMaxTreeLevel(\dstore\engine\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <max_tree_level_null> has a value
     *
     * @return boolean
     */
    public function hasMaxTreeLevelNull(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <max_tree_level_null> value
     *
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function clearMaxTreeLevelNull(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <max_tree_level_null> value
     *
     * @return boolean
     */
    public function getMaxTreeLevelNull(){
      return $this->_get(1008);
    }
    
    /**
     * Set <max_tree_level_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\mi_GetApplicationPartsTree_Pu\Parameters
     */
    public function setMaxTreeLevelNull( $value){
      return $this->_set(1008, $value);
    }
  }
}

