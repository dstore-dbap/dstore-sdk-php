<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: dstore/engine/procedures/st_GetDirectSuccessors_Tree_Ad.proto
//   Date: 2016-05-19 08:07:56

namespace dstore\engine\st_GetDirectSuccessors_Tree_Ad {

  class Parameters extends \DrSlump\Protobuf\Message {

    /**  @var \dstore\values\integerValue */
    public $h_tree_node_id = null;
    
    /**  @var boolean */
    public $h_tree_node_id_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $from_date = null;
    
    /**  @var boolean */
    public $from_date_null = null;
    
    /**  @var \dstore\values\timestampValue */
    public $to_date = null;
    
    /**  @var boolean */
    public $to_date_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $basic_characteristic_no1 = null;
    
    /**  @var boolean */
    public $basic_characteristic_no1_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $weight_basic_characteristic_no1 = null;
    
    /**  @var boolean */
    public $weight_basic_characteristic_no1_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $basic_characteristic_no2 = null;
    
    /**  @var boolean */
    public $basic_characteristic_no2_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $weight_basic_characteristic_no2 = null;
    
    /**  @var boolean */
    public $weight_basic_characteristic_no2_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $basic_characteristic_no3 = null;
    
    /**  @var boolean */
    public $basic_characteristic_no3_null = null;
    
    /**  @var \dstore\values\decimalValue */
    public $weight_basic_characteristic_no3 = null;
    
    /**  @var boolean */
    public $weight_basic_characteristic_no3_null = null;
    
    /**  @var \dstore\values\integerValue */
    public $source_table_for_statistics = null;
    
    /**  @var boolean */
    public $source_table_for_statistics_null = null;
    
    /**  @var \dstore\values\booleanValue */
    public $display_only_active = null;
    
    /**  @var boolean */
    public $display_only_active_null = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'dstore.engine.st_GetDirectSuccessors_Tree_Ad.Parameters');

      // OPTIONAL MESSAGE h_tree_node_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "h_tree_node_id";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL h_tree_node_id_null = 1001
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1001;
      $f->name      = "h_tree_node_id_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE from_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "from_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL from_date_null = 1002
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1002;
      $f->name      = "from_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE to_date = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "to_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\timestampValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL to_date_null = 1003
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1003;
      $f->name      = "to_date_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic_no1 = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "basic_characteristic_no1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL basic_characteristic_no1_null = 1004
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1004;
      $f->name      = "basic_characteristic_no1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_basic_characteristic_no1 = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "weight_basic_characteristic_no1";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_basic_characteristic_no1_null = 1005
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1005;
      $f->name      = "weight_basic_characteristic_no1_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic_no2 = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "basic_characteristic_no2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL basic_characteristic_no2_null = 1006
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1006;
      $f->name      = "basic_characteristic_no2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_basic_characteristic_no2 = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "weight_basic_characteristic_no2";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_basic_characteristic_no2_null = 1007
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1007;
      $f->name      = "weight_basic_characteristic_no2_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_characteristic_no3 = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "basic_characteristic_no3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL basic_characteristic_no3_null = 1008
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1008;
      $f->name      = "basic_characteristic_no3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE weight_basic_characteristic_no3 = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "weight_basic_characteristic_no3";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\decimalValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL weight_basic_characteristic_no3_null = 1009
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1009;
      $f->name      = "weight_basic_characteristic_no3_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE source_table_for_statistics = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "source_table_for_statistics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\integerValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL source_table_for_statistics_null = 1010
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1010;
      $f->name      = "source_table_for_statistics_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE display_only_active = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "display_only_active";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\dstore\values\booleanValue';
      $descriptor->addField($f);

      // OPTIONAL BOOL display_only_active_null = 1011
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1011;
      $f->name      = "display_only_active_null";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <h_tree_node_id> has a value
     *
     * @return boolean
     */
    public function hasHTreeNodeId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <h_tree_node_id> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearHTreeNodeId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <h_tree_node_id> value
     *
     * @return \dstore\values\integerValue
     */
    public function getHTreeNodeId(){
      return $this->_get(1);
    }
    
    /**
     * Set <h_tree_node_id> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setHTreeNodeId(\dstore\values\integerValue $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <h_tree_node_id_null> has a value
     *
     * @return boolean
     */
    public function hasHTreeNodeIdNull(){
      return $this->_has(1001);
    }
    
    /**
     * Clear <h_tree_node_id_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearHTreeNodeIdNull(){
      return $this->_clear(1001);
    }
    
    /**
     * Get <h_tree_node_id_null> value
     *
     * @return boolean
     */
    public function getHTreeNodeIdNull(){
      return $this->_get(1001);
    }
    
    /**
     * Set <h_tree_node_id_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setHTreeNodeIdNull( $value){
      return $this->_set(1001, $value);
    }
    
    /**
     * Check if <from_date> has a value
     *
     * @return boolean
     */
    public function hasFromDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <from_date> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearFromDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <from_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getFromDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <from_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setFromDate(\dstore\values\timestampValue $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <from_date_null> has a value
     *
     * @return boolean
     */
    public function hasFromDateNull(){
      return $this->_has(1002);
    }
    
    /**
     * Clear <from_date_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearFromDateNull(){
      return $this->_clear(1002);
    }
    
    /**
     * Get <from_date_null> value
     *
     * @return boolean
     */
    public function getFromDateNull(){
      return $this->_get(1002);
    }
    
    /**
     * Set <from_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setFromDateNull( $value){
      return $this->_set(1002, $value);
    }
    
    /**
     * Check if <to_date> has a value
     *
     * @return boolean
     */
    public function hasToDate(){
      return $this->_has(3);
    }
    
    /**
     * Clear <to_date> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearToDate(){
      return $this->_clear(3);
    }
    
    /**
     * Get <to_date> value
     *
     * @return \dstore\values\timestampValue
     */
    public function getToDate(){
      return $this->_get(3);
    }
    
    /**
     * Set <to_date> value
     *
     * @param \dstore\values\timestampValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setToDate(\dstore\values\timestampValue $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <to_date_null> has a value
     *
     * @return boolean
     */
    public function hasToDateNull(){
      return $this->_has(1003);
    }
    
    /**
     * Clear <to_date_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearToDateNull(){
      return $this->_clear(1003);
    }
    
    /**
     * Get <to_date_null> value
     *
     * @return boolean
     */
    public function getToDateNull(){
      return $this->_get(1003);
    }
    
    /**
     * Set <to_date_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setToDateNull( $value){
      return $this->_set(1003, $value);
    }
    
    /**
     * Check if <basic_characteristic_no1> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo1(){
      return $this->_has(4);
    }
    
    /**
     * Clear <basic_characteristic_no1> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo1(){
      return $this->_clear(4);
    }
    
    /**
     * Get <basic_characteristic_no1> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBasicCharacteristicNo1(){
      return $this->_get(4);
    }
    
    /**
     * Set <basic_characteristic_no1> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo1(\dstore\values\integerValue $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <basic_characteristic_no1_null> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo1Null(){
      return $this->_has(1004);
    }
    
    /**
     * Clear <basic_characteristic_no1_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo1Null(){
      return $this->_clear(1004);
    }
    
    /**
     * Get <basic_characteristic_no1_null> value
     *
     * @return boolean
     */
    public function getBasicCharacteristicNo1Null(){
      return $this->_get(1004);
    }
    
    /**
     * Set <basic_characteristic_no1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo1Null( $value){
      return $this->_set(1004, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no1> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo1(){
      return $this->_has(5);
    }
    
    /**
     * Clear <weight_basic_characteristic_no1> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo1(){
      return $this->_clear(5);
    }
    
    /**
     * Get <weight_basic_characteristic_no1> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getWeightBasicCharacteristicNo1(){
      return $this->_get(5);
    }
    
    /**
     * Set <weight_basic_characteristic_no1> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo1(\dstore\values\decimalValue $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no1_null> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo1Null(){
      return $this->_has(1005);
    }
    
    /**
     * Clear <weight_basic_characteristic_no1_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo1Null(){
      return $this->_clear(1005);
    }
    
    /**
     * Get <weight_basic_characteristic_no1_null> value
     *
     * @return boolean
     */
    public function getWeightBasicCharacteristicNo1Null(){
      return $this->_get(1005);
    }
    
    /**
     * Set <weight_basic_characteristic_no1_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo1Null( $value){
      return $this->_set(1005, $value);
    }
    
    /**
     * Check if <basic_characteristic_no2> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo2(){
      return $this->_has(6);
    }
    
    /**
     * Clear <basic_characteristic_no2> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo2(){
      return $this->_clear(6);
    }
    
    /**
     * Get <basic_characteristic_no2> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBasicCharacteristicNo2(){
      return $this->_get(6);
    }
    
    /**
     * Set <basic_characteristic_no2> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo2(\dstore\values\integerValue $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <basic_characteristic_no2_null> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo2Null(){
      return $this->_has(1006);
    }
    
    /**
     * Clear <basic_characteristic_no2_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo2Null(){
      return $this->_clear(1006);
    }
    
    /**
     * Get <basic_characteristic_no2_null> value
     *
     * @return boolean
     */
    public function getBasicCharacteristicNo2Null(){
      return $this->_get(1006);
    }
    
    /**
     * Set <basic_characteristic_no2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo2Null( $value){
      return $this->_set(1006, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no2> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo2(){
      return $this->_has(7);
    }
    
    /**
     * Clear <weight_basic_characteristic_no2> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo2(){
      return $this->_clear(7);
    }
    
    /**
     * Get <weight_basic_characteristic_no2> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getWeightBasicCharacteristicNo2(){
      return $this->_get(7);
    }
    
    /**
     * Set <weight_basic_characteristic_no2> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo2(\dstore\values\decimalValue $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no2_null> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo2Null(){
      return $this->_has(1007);
    }
    
    /**
     * Clear <weight_basic_characteristic_no2_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo2Null(){
      return $this->_clear(1007);
    }
    
    /**
     * Get <weight_basic_characteristic_no2_null> value
     *
     * @return boolean
     */
    public function getWeightBasicCharacteristicNo2Null(){
      return $this->_get(1007);
    }
    
    /**
     * Set <weight_basic_characteristic_no2_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo2Null( $value){
      return $this->_set(1007, $value);
    }
    
    /**
     * Check if <basic_characteristic_no3> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo3(){
      return $this->_has(8);
    }
    
    /**
     * Clear <basic_characteristic_no3> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo3(){
      return $this->_clear(8);
    }
    
    /**
     * Get <basic_characteristic_no3> value
     *
     * @return \dstore\values\integerValue
     */
    public function getBasicCharacteristicNo3(){
      return $this->_get(8);
    }
    
    /**
     * Set <basic_characteristic_no3> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo3(\dstore\values\integerValue $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <basic_characteristic_no3_null> has a value
     *
     * @return boolean
     */
    public function hasBasicCharacteristicNo3Null(){
      return $this->_has(1008);
    }
    
    /**
     * Clear <basic_characteristic_no3_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearBasicCharacteristicNo3Null(){
      return $this->_clear(1008);
    }
    
    /**
     * Get <basic_characteristic_no3_null> value
     *
     * @return boolean
     */
    public function getBasicCharacteristicNo3Null(){
      return $this->_get(1008);
    }
    
    /**
     * Set <basic_characteristic_no3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setBasicCharacteristicNo3Null( $value){
      return $this->_set(1008, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no3> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo3(){
      return $this->_has(9);
    }
    
    /**
     * Clear <weight_basic_characteristic_no3> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo3(){
      return $this->_clear(9);
    }
    
    /**
     * Get <weight_basic_characteristic_no3> value
     *
     * @return \dstore\values\decimalValue
     */
    public function getWeightBasicCharacteristicNo3(){
      return $this->_get(9);
    }
    
    /**
     * Set <weight_basic_characteristic_no3> value
     *
     * @param \dstore\values\decimalValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo3(\dstore\values\decimalValue $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <weight_basic_characteristic_no3_null> has a value
     *
     * @return boolean
     */
    public function hasWeightBasicCharacteristicNo3Null(){
      return $this->_has(1009);
    }
    
    /**
     * Clear <weight_basic_characteristic_no3_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearWeightBasicCharacteristicNo3Null(){
      return $this->_clear(1009);
    }
    
    /**
     * Get <weight_basic_characteristic_no3_null> value
     *
     * @return boolean
     */
    public function getWeightBasicCharacteristicNo3Null(){
      return $this->_get(1009);
    }
    
    /**
     * Set <weight_basic_characteristic_no3_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setWeightBasicCharacteristicNo3Null( $value){
      return $this->_set(1009, $value);
    }
    
    /**
     * Check if <source_table_for_statistics> has a value
     *
     * @return boolean
     */
    public function hasSourceTableForStatistics(){
      return $this->_has(10);
    }
    
    /**
     * Clear <source_table_for_statistics> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearSourceTableForStatistics(){
      return $this->_clear(10);
    }
    
    /**
     * Get <source_table_for_statistics> value
     *
     * @return \dstore\values\integerValue
     */
    public function getSourceTableForStatistics(){
      return $this->_get(10);
    }
    
    /**
     * Set <source_table_for_statistics> value
     *
     * @param \dstore\values\integerValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setSourceTableForStatistics(\dstore\values\integerValue $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <source_table_for_statistics_null> has a value
     *
     * @return boolean
     */
    public function hasSourceTableForStatisticsNull(){
      return $this->_has(1010);
    }
    
    /**
     * Clear <source_table_for_statistics_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearSourceTableForStatisticsNull(){
      return $this->_clear(1010);
    }
    
    /**
     * Get <source_table_for_statistics_null> value
     *
     * @return boolean
     */
    public function getSourceTableForStatisticsNull(){
      return $this->_get(1010);
    }
    
    /**
     * Set <source_table_for_statistics_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setSourceTableForStatisticsNull( $value){
      return $this->_set(1010, $value);
    }
    
    /**
     * Check if <display_only_active> has a value
     *
     * @return boolean
     */
    public function hasDisplayOnlyActive(){
      return $this->_has(11);
    }
    
    /**
     * Clear <display_only_active> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearDisplayOnlyActive(){
      return $this->_clear(11);
    }
    
    /**
     * Get <display_only_active> value
     *
     * @return \dstore\values\booleanValue
     */
    public function getDisplayOnlyActive(){
      return $this->_get(11);
    }
    
    /**
     * Set <display_only_active> value
     *
     * @param \dstore\values\booleanValue $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setDisplayOnlyActive(\dstore\values\booleanValue $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <display_only_active_null> has a value
     *
     * @return boolean
     */
    public function hasDisplayOnlyActiveNull(){
      return $this->_has(1011);
    }
    
    /**
     * Clear <display_only_active_null> value
     *
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function clearDisplayOnlyActiveNull(){
      return $this->_clear(1011);
    }
    
    /**
     * Get <display_only_active_null> value
     *
     * @return boolean
     */
    public function getDisplayOnlyActiveNull(){
      return $this->_get(1011);
    }
    
    /**
     * Set <display_only_active_null> value
     *
     * @param boolean $value
     * @return \dstore\engine\st_GetDirectSuccessors_Tree_Ad\Parameters
     */
    public function setDisplayOnlyActiveNull( $value){
      return $this->_set(1011, $value);
    }
  }
}

